package couche_ui;

import couche_jpa.Arrondissement;
import couche_jpa.Centre;
import couche_jpa.Centredispatching;
import couche_jpa.Departement;
import couche_jpa.Eltpratiquinfo;
import couche_jpa.Etablissement;
import couche_jpa.Region;
import couche_jpa.Souscentre;
import couche_metier.IMetier;
import exception.ObcbudgetException;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;
import javax.swing.DefaultComboBoxModel;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import net.sf.jasperreports.engine.JRDataSource;
import net.sf.jasperreports.engine.JRException;
import net.sf.jasperreports.engine.JasperCompileManager;
import net.sf.jasperreports.engine.JasperFillManager;
import net.sf.jasperreports.engine.JasperPrint;
import net.sf.jasperreports.engine.JasperReport;
import net.sf.jasperreports.engine.data.JRBeanCollectionDataSource;
import net.sf.jasperreports.view.JasperViewer;
import org.springframework.context.ApplicationContext;
import org.springframework.context.support.ClassPathXmlApplicationContext;

public class VueSouscentre extends javax.swing.JFrame {

    DefaultTableModel model;

    public VueSouscentre() {
        initComponents();
        model = (DefaultTableModel) jTable1.getModel();
        doMyInit();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jLabel1 = new javax.swing.JLabel();
        jLabelNom = new javax.swing.JLabel();
        jLabelRegion = new javax.swing.JLabel();
        jLabelDépartement = new javax.swing.JLabel();
        jLabelEtablissement = new javax.swing.JLabel();
        jTextFieldNom = new javax.swing.JTextField();
        jComboBoxRegion = new javax.swing.JComboBox<>();
        jButtonRechercher = new javax.swing.JButton();
        jButtonCreer = new javax.swing.JButton();
        jButtonModifier = new javax.swing.JButton();
        jComboBoxDepartement = new javax.swing.JComboBox<>();
        jComboBoxEtablissement = new javax.swing.JComboBox<>();
        jButtonSupprimer = new javax.swing.JButton();
        jButtonAnnuler = new javax.swing.JButton();
        jButtonFermer = new javax.swing.JButton();
        jButtonPlusEtalissement = new javax.swing.JButton();
        jLabelArrondissement = new javax.swing.JLabel();
        jComboBoxArrondissement = new javax.swing.JComboBox<>();
        jLabelDeficients = new javax.swing.JLabel();
        jComboBoxDeficients = new javax.swing.JComboBox<>();
        jLabelChinita = new javax.swing.JLabel();
        jComboBoxChinita = new javax.swing.JComboBox<>();
        jButtonFermer1 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DO_NOTHING_ON_CLOSE);
        setResizable(false);

        jTable1.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Id", "N° Ordre", "Région", "Département", "Arrondissement", "Sous-centre", "Etablissement", "Déficients", "Chinois/Italiens", "Version"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jTable1.setShowHorizontalLines(true);
        jTable1.setShowVerticalLines(true);
        jTable1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTable1MouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(jTable1);

        jLabel1.setFont(new java.awt.Font("Arial", 1, 36)); // NOI18N
        jLabel1.setText("SOUS-CENTRE");

        jLabelNom.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        jLabelNom.setText("Nom :");

        jLabelRegion.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        jLabelRegion.setText("Région :");

        jLabelDépartement.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        jLabelDépartement.setText("Département :");

        jLabelEtablissement.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        jLabelEtablissement.setText("Etablissement :");

        jTextFieldNom.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N

        jComboBoxRegion.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        jComboBoxRegion.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBoxRegionActionPerformed(evt);
            }
        });

        jButtonRechercher.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        jButtonRechercher.setText("Rechercher");
        jButtonRechercher.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonRechercherActionPerformed(evt);
            }
        });

        jButtonCreer.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        jButtonCreer.setText("Créer");
        jButtonCreer.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonCreerActionPerformed(evt);
            }
        });

        jButtonModifier.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        jButtonModifier.setText("Modifier");
        jButtonModifier.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonModifierActionPerformed(evt);
            }
        });

        jComboBoxDepartement.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        jComboBoxDepartement.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBoxDepartementActionPerformed(evt);
            }
        });

        jComboBoxEtablissement.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N

        jButtonSupprimer.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        jButtonSupprimer.setText("Supprimer");
        jButtonSupprimer.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonSupprimerActionPerformed(evt);
            }
        });

        jButtonAnnuler.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        jButtonAnnuler.setText("Annuler");
        jButtonAnnuler.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonAnnulerActionPerformed(evt);
            }
        });

        jButtonFermer.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        jButtonFermer.setText("Fermer");
        jButtonFermer.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonFermerActionPerformed(evt);
            }
        });

        jButtonPlusEtalissement.setFont(new java.awt.Font("Arial", 1, 18)); // NOI18N
        jButtonPlusEtalissement.setText("+");
        jButtonPlusEtalissement.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonPlusEtalissementActionPerformed(evt);
            }
        });

        jLabelArrondissement.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        jLabelArrondissement.setText("Arrondissement :");

        jComboBoxArrondissement.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        jComboBoxArrondissement.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBoxArrondissementActionPerformed(evt);
            }
        });

        jLabelDeficients.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        jLabelDeficients.setText("Accueille les déficients moteurs ou sensoriels :");

        jComboBoxDeficients.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N

        jLabelChinita.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        jLabelChinita.setText("Accueille les candidats des séries A4 Chinois/Italiens :");

        jComboBoxChinita.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N

        jButtonFermer1.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        jButtonFermer1.setText("Visualiser");
        jButtonFermer1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonFermer1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(506, 506, 506)
                .addComponent(jLabel1)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(30, 30, 30)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabelRegion)
                            .addComponent(jLabelNom)
                            .addComponent(jLabelDépartement)
                            .addComponent(jLabelArrondissement))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(jTextFieldNom)
                                    .addComponent(jComboBoxDepartement, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(jComboBoxRegion, 0, 358, Short.MAX_VALUE))
                                .addGap(26, 26, 26)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(jLabelEtablissement)
                                    .addComponent(jLabelDeficients)
                                    .addComponent(jLabelChinita)))
                            .addComponent(jComboBoxArrondissement, javax.swing.GroupLayout.PREFERRED_SIZE, 242, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(8, 8, 8)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jComboBoxDeficients, javax.swing.GroupLayout.PREFERRED_SIZE, 77, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(jComboBoxEtablissement, javax.swing.GroupLayout.PREFERRED_SIZE, 363, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(jButtonPlusEtalissement, javax.swing.GroupLayout.PREFERRED_SIZE, 47, javax.swing.GroupLayout.PREFERRED_SIZE))))
                            .addGroup(layout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jComboBoxChinita, javax.swing.GroupLayout.PREFERRED_SIZE, 77, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(0, 34, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jScrollPane1)))
                .addGap(14, 14, 14))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(jButtonCreer)
                .addGap(18, 18, 18)
                .addComponent(jButtonRechercher)
                .addGap(18, 18, 18)
                .addComponent(jButtonModifier)
                .addGap(18, 18, 18)
                .addComponent(jButtonSupprimer)
                .addGap(18, 18, 18)
                .addComponent(jButtonAnnuler)
                .addGap(20, 20, 20)
                .addComponent(jButtonFermer)
                .addGap(18, 18, 18)
                .addComponent(jButtonFermer1)
                .addGap(217, 217, 217))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(25, 25, 25)
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(27, 27, 27)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabelNom, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jTextFieldNom, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabelEtablissement, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jComboBoxEtablissement, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButtonPlusEtalissement, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 19, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabelRegion, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jComboBoxRegion, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabelDeficients, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jComboBoxDeficients, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(21, 21, 21)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jComboBoxDepartement, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabelChinita, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jComboBoxChinita, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jLabelDépartement, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(20, 20, 20)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabelArrondissement, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jComboBoxArrondissement, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(23, 23, 23)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButtonCreer, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButtonRechercher, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButtonModifier, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButtonSupprimer, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButtonAnnuler, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButtonFermer, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButtonFermer1, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 211, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void jButtonFermerActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonFermerActionPerformed
        dispose();
    }//GEN-LAST:event_jButtonFermerActionPerformed

    private void jButtonAnnulerActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonAnnulerActionPerformed
        videFrame();
    }//GEN-LAST:event_jButtonAnnulerActionPerformed

    private void jComboBoxRegionActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBoxRegionActionPerformed
        remplirDepartementCombobox();
    }//GEN-LAST:event_jComboBoxRegionActionPerformed

    private void jComboBoxDepartementActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBoxDepartementActionPerformed
        remplirArrondissementCombobox();
    }//GEN-LAST:event_jComboBoxDepartementActionPerformed

    private void jButtonCreerActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonCreerActionPerformed
        model.setRowCount(0);//vide la jTable
        infoSaisies();
        if (!nomSouscentreSaisi.equals("") && !nomEtablissementSelected.equals("---") && !reponseDeficients.equals("---") && !reponseChinita.equals("---")) {
            for (Etablissement e : etablissements) {
                if (e.getAbreviation().equals(nomEtablissementSelected)) {
                    etablissementSelected = e;
                    break;
                }
            }
            boolean valDeficients = false;
            if (reponseDeficients.equals("Oui")) {
                valDeficients = true;
            }
            boolean valChinita = false;
            if (reponseChinita.equals("Oui")) {
                valChinita = true;
            }

            try {
                metier.creerSouscentre(new Souscentre(nomSouscentreSaisi.toUpperCase(), etablissementSelected, valDeficients, valChinita));
                JOptionPane.showMessageDialog(this, " Sous-centre créé avec succès !");
                //videFrame();
                int i = 1;
                nomArrondissementSelected = (String) jComboBoxArrondissement.getSelectedItem();
                souscentres = metier.findAllSouscentresD1Arrondissement(nomArrondissementSelected);
                for (Souscentre s : souscentres) {
                    model.insertRow(model.getRowCount(), new Object[]{s.getIdsouscent(), i++, s.getEtablissement().getArrondissement().getDepartement().getRegion().getNomreg(), s.getEtablissement().getArrondissement().getDepartement().getNomdepart(), s.getEtablissement().getArrondissement().getNomarr(), s.getNomsouscent(), s.getEtablissement().getAbreviation(), s.getDeficients(), s.getChinita(), s.getVersion()});
                }
            } catch (ObcbudgetException ex) {
                JOptionPane.showMessageDialog(this, "Impossible de créer le sous-centre de nom [" + nomSouscentreSaisi + "] \n raison:" + ex.getMessage());
            }
        } else {
            JOptionPane.showMessageDialog(this, " Veuillez recommencer svp. Au moins une donnée manquante ou incorrecte !");
        }

    }//GEN-LAST:event_jButtonCreerActionPerformed

    private void jButtonPlusEtalissementActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonPlusEtalissementActionPerformed
        new VueEtablissement().setVisible(true);
    }//GEN-LAST:event_jButtonPlusEtalissementActionPerformed

    private void jTable1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTable1MouseClicked
        //remplit les champs
        int ligne = jTable1.getSelectedRow();
        idSouscentreCliked = (int) model.getValueAt(ligne, 0);
        jComboBoxRegion.setSelectedItem((String) model.getValueAt(ligne, 2));
        jComboBoxDepartement.setSelectedItem((String) model.getValueAt(ligne, 3));
        jComboBoxArrondissement.setSelectedItem((String) model.getValueAt(ligne, 4));
        jTextFieldNom.setText((String) model.getValueAt(ligne, 5));
        jComboBoxEtablissement.setSelectedItem((String) model.getValueAt(ligne, 6));
        reponseBooleanDeficients = (boolean) model.getValueAt(ligne, 7);
        reponseDeficients = "Non";
        if (reponseBooleanDeficients) {
            reponseDeficients = "Oui";
        }
        jComboBoxDeficients.setSelectedItem(reponseDeficients);

        reponseBooleanChinita = (boolean) model.getValueAt(ligne, 8);
        reponseChinita = "Non";
        if (reponseBooleanChinita) {
            reponseChinita = "Oui";
        }
        jComboBoxChinita.setSelectedItem(reponseChinita);
    }//GEN-LAST:event_jTable1MouseClicked

    private void jButtonRechercherActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonRechercherActionPerformed
        model.setRowCount(0);//vide la jTable
        infoSaisies();
        //validerNombre();
        if (!nomSouscentreSaisi.equals("") && !nomSouscentreSaisi.equalsIgnoreCase("tous")) {
            try {
                souscentresRecherches = metier.findAllSouscentresLikeName(nomSouscentreSaisi.toUpperCase());
                int i = 1;
                for (Souscentre s : souscentresRecherches) {
                    model.insertRow(model.getRowCount(), new Object[]{s.getIdsouscent(), i++, s.getEtablissement().getArrondissement().getDepartement().getRegion().getNomreg(), s.getEtablissement().getArrondissement().getDepartement().getNomdepart(), s.getEtablissement().getArrondissement().getNomarr(), s.getNomsouscent(), s.getEtablissement().getAbreviation(), s.getDeficients(), s.getChinita(), s.getVersion()});
                }
            } catch (ObcbudgetException ex) {
                JOptionPane.showMessageDialog(this, "Impossible de trouver des sous-centres de nom proche de [" + nomSouscentreSaisi + "] \n raison:" + ex.getMessage());
            }
        } else {
            if (nomSouscentreSaisi.equals("")) {
                JOptionPane.showMessageDialog(this, " Le champ nom est obligatoire !");
            } else {
                nomArrondissementSelected = (String) jComboBoxArrondissement.getSelectedItem();
                souscentres = metier.findAllSouscentresD1Arrondissement(nomArrondissementSelected);
                int i = 1;
                for (Souscentre s : souscentres) {
                    model.insertRow(model.getRowCount(), new Object[]{s.getIdsouscent(), i++, s.getEtablissement().getArrondissement().getDepartement().getRegion().getNomreg(), s.getEtablissement().getArrondissement().getDepartement().getNomdepart(), s.getEtablissement().getArrondissement().getNomarr(), s.getNomsouscent(), s.getEtablissement().getAbreviation(), s.getDeficients(), s.getChinita(), s.getVersion()});
                }
            }
        }
    }//GEN-LAST:event_jButtonRechercherActionPerformed

    private void jButtonModifierActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonModifierActionPerformed
        model.setRowCount(0);//vide la jTable
        infoSaisies();
        int result = JOptionPane.showConfirmDialog(this, "Voulez-vous vraiment modifier ce sous-centre?", "confirmation de modification", JOptionPane.YES_NO_OPTION, JOptionPane.QUESTION_MESSAGE);
        if (result == JOptionPane.YES_OPTION) {
            if (!nomSouscentreSaisi.equals("") && !nomEtablissementSelected.equals("---") && !reponseDeficients.equals("---") && !reponseChinita.equals("---")) {
                souscentreCliked = metier.findSouscentreById(idSouscentreCliked);
                for (Etablissement e : etablissements) {
                    if (e.getAbreviation().equals(nomEtablissementSelected)) {
                        etablissementSelected = e;
                        break;
                    }
                }
                boolean valDeficients = false;
                if (reponseDeficients.equals("Oui")) {
                    valDeficients = true;
                }
                boolean valChinita = false;
                if (reponseChinita.equals("Oui")) {
                    valChinita = true;
                }

                souscentreCliked.setNomsouscent(nomSouscentreSaisi.toUpperCase());
                souscentreCliked.setEtablissement(etablissementSelected);
                souscentreCliked.setDeficients(valDeficients);
                souscentreCliked.setChinita(valChinita);
                try {
                    metier.modifierSouscentre(souscentreCliked);
                    JOptionPane.showMessageDialog(this, " Sous-centre modifié avec succès !");
                    //videFrame();
                    int i = 1;
                    nomArrondissementSelected = (String) jComboBoxArrondissement.getSelectedItem();
                    souscentres = metier.findAllSouscentresD1Arrondissement(nomArrondissementSelected);
                    for (Souscentre s : souscentres) {
                        model.insertRow(model.getRowCount(), new Object[]{s.getIdsouscent(), i++, s.getEtablissement().getArrondissement().getDepartement().getRegion().getNomreg(), s.getEtablissement().getArrondissement().getDepartement().getNomdepart(), s.getEtablissement().getArrondissement().getNomarr(), s.getNomsouscent(), s.getEtablissement().getAbreviation(), s.getDeficients(), s.getChinita(), s.getVersion()});
                    }
                } catch (ObcbudgetException ex) {
                    JOptionPane.showMessageDialog(this, "Impossible de modifier le sous-centre de nom [" + nomSouscentreSaisi + "] \n raison:" + ex.getMessage());
                }
            } else {
                JOptionPane.showMessageDialog(this, " Veuillez recommencer svp. Au moins une donnée manquante ou incorrecte !");
            }
        }
    }//GEN-LAST:event_jButtonModifierActionPerformed

    private void jButtonSupprimerActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonSupprimerActionPerformed
        model.setRowCount(0);//vide la jTable
        infoSaisies();
        int result = JOptionPane.showConfirmDialog(this, "Voulez-vous vraiment supprimer ce sous-centre?", "confirmation de suppression", JOptionPane.YES_NO_OPTION, JOptionPane.QUESTION_MESSAGE);
        if (result == JOptionPane.YES_OPTION) {
            if (!nomSouscentreSaisi.equals("")) {
                try {
                    metier.supprimerSouscentre(metier.findSouscentreById(idSouscentreCliked));
                    JOptionPane.showMessageDialog(this, " Sous-centre supprimé avec succès !");
                    //videFrame();
                    int i = 1;
                    nomArrondissementSelected = (String) jComboBoxArrondissement.getSelectedItem();
                    souscentres = metier.findAllSouscentresD1Arrondissement(nomArrondissementSelected);
                    for (Souscentre s : souscentres) {
                        model.insertRow(model.getRowCount(), new Object[]{s.getIdsouscent(), i++, s.getEtablissement().getArrondissement().getDepartement().getRegion().getNomreg(), s.getEtablissement().getArrondissement().getDepartement().getNomdepart(), s.getEtablissement().getArrondissement().getNomarr(), s.getNomsouscent(), s.getEtablissement().getAbreviation(), s.getDeficients(), s.getChinita(), s.getVersion()});
                    }
                } catch (ObcbudgetException ex) {
                    JOptionPane.showMessageDialog(this, "Impossible de supprimer le sous-centre de nom [" + nomSouscentreSaisi + "] \n raison:" + ex.getMessage());
                }
            } else {
                JOptionPane.showMessageDialog(this, "Le champ nom est obligatoire !");
            }
        }
    }//GEN-LAST:event_jButtonSupprimerActionPerformed

    private void jComboBoxArrondissementActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBoxArrondissementActionPerformed
        remplirEtablissementCombobox();
    }//GEN-LAST:event_jComboBoxArrondissementActionPerformed

    private void jButtonFermer1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonFermer1ActionPerformed
        souscentres = metier.findAllSouscentres();
        if (!souscentres.isEmpty()) {
            try {
                List<Map<String, Object>> datasource = new ArrayList<Map<String, Object>>();
                for (Region region : regions) {
                    int i = 1;
                    for (Souscentre souscentre : souscentres) {
                        if (souscentre.getEtablissement().getArrondissement().getDepartement().getRegion().getNomreg().equals(region.getNomreg())) {
                            Map<String, Object> row = new HashMap<>();
                            row.put("region", region.getNomreg());
                            row.put("num", i++);
                            row.put("souscentre", souscentre.getNomsouscent());
                            datasource.add(row);
                        }
                    }
                }
                JRDataSource jRDataSource = new JRBeanCollectionDataSource(datasource);
                JasperReport jasperReport = JasperCompileManager.compileReport("src\\main\\java\\reports\\souscentresReport.jrxml");
                JasperPrint jasperPrint = JasperFillManager.fillReport(jasperReport, null, jRDataSource);
                JasperViewer jasperViewer = new JasperViewer(jasperPrint, false);//false empêche jasperviewer de fermer l'appli lorsqu'on le ferme
                jasperViewer.setVisible(true);
            } catch (JRException e) {
                JOptionPane.showMessageDialog(this, e.getMessage());
            }
        } else {
            JOptionPane.showMessageDialog(this, "Aucun sous-centre trouvé dans la base des données !");
        }
    }//GEN-LAST:event_jButtonFermer1ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(VueSouscentre.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(VueSouscentre.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(VueSouscentre.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(VueSouscentre.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new VueSouscentre().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButtonAnnuler;
    private javax.swing.JButton jButtonCreer;
    private javax.swing.JButton jButtonFermer;
    private javax.swing.JButton jButtonFermer1;
    private javax.swing.JButton jButtonModifier;
    private javax.swing.JButton jButtonPlusEtalissement;
    private javax.swing.JButton jButtonRechercher;
    private javax.swing.JButton jButtonSupprimer;
    private javax.swing.JComboBox<String> jComboBoxArrondissement;
    private javax.swing.JComboBox<String> jComboBoxChinita;
    private javax.swing.JComboBox<String> jComboBoxDeficients;
    private javax.swing.JComboBox<String> jComboBoxDepartement;
    private javax.swing.JComboBox<String> jComboBoxEtablissement;
    private javax.swing.JComboBox<String> jComboBoxRegion;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabelArrondissement;
    private javax.swing.JLabel jLabelChinita;
    private javax.swing.JLabel jLabelDeficients;
    private javax.swing.JLabel jLabelDépartement;
    private javax.swing.JLabel jLabelEtablissement;
    private javax.swing.JLabel jLabelNom;
    private javax.swing.JLabel jLabelRegion;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTable1;
    private javax.swing.JTextField jTextFieldNom;
    // End of variables declaration//GEN-END:variables

    // variables d'instance
    private IMetier metier = null;
    private List<Region> regions = null;
    private String[] regionsCombo = null;
    private List<Departement> departements = null;
    private List<Arrondissement> arrondissements = null;
    private String[] departementsCombo = null;
    private String[] arrondissementsCombo = null;
    private List<Centre> centres = null;
    private String[] centresCombo = null;
    private String[] etablissementsCombo = null;
    private List<Etablissement> etablissements = null;
    private Departement departementSelected = null;
    private Arrondissement arrondissementSelected = null;
    private Etablissement etablissementSelected = null;
    private Centre centreSelected = null;
    private String nomRegionSelected = "";
    private String nomDepartementSelected = "";
    private String nomArrondissementSelected = "";
    private String nomCentreSelected = "";
    private String nomEtablissementSelected = "";
    private String nomSouscentreSaisi = "";
    private List<Souscentre> souscentresRecherches = null;
    private int idSouscentreCliked = 0;
    private Souscentre souscentreCliked = null;
    private List<Souscentre> souscentres = null;
    private String[] deficientsCombo = null;
    private String[] chinitaCombo = null;
    private String reponseDeficients = "";
    private String reponseChinita = "";
    private boolean reponseBooleanDeficients = false;
    private boolean reponseBooleanChinita = false;

    private void doMyInit() {
        // init contexte
        // instanciation couche [metier]
        ApplicationContext ctx = new ClassPathXmlApplicationContext("spring-config-metier.xml");
        metier = (IMetier) ctx.getBean("metier");
        regions = metier.findAllRegions();

        //on remplit la combobox des régions
        regionsCombo = new String[regions.size() + 1];
        regionsCombo[0] = "---";
        int i = 1;
        for (Region region : regions) {
            regionsCombo[i++] = region.getNomreg();
        }
        jComboBoxRegion.setModel(new DefaultComboBoxModel(regionsCombo));

        //on remplit la combobox de déficients
        deficientsCombo = new String[]{"---", "Oui", "Non"};
        jComboBoxDeficients.setModel(new DefaultComboBoxModel(deficientsCombo));

        //on remplit la combobox de chinois/italiens
        chinitaCombo = new String[]{"---", "Oui", "Non"};
        jComboBoxChinita.setModel(new DefaultComboBoxModel(chinitaCombo));

        remplirDepartementCombobox();
        remplirArrondissementCombobox();
        remplirEtablissementCombobox();
    }

    private void infoSaisies() {
        nomSouscentreSaisi = jTextFieldNom.getText();
        nomRegionSelected = (String) jComboBoxRegion.getSelectedItem();
        nomDepartementSelected = (String) jComboBoxDepartement.getSelectedItem();
        nomArrondissementSelected = (String) jComboBoxArrondissement.getSelectedItem();
        nomEtablissementSelected = (String) jComboBoxEtablissement.getSelectedItem();
        reponseDeficients = (String) jComboBoxDeficients.getSelectedItem();
        reponseChinita = (String) jComboBoxChinita.getSelectedItem();
    }

    private void videFrame() {
        jTextFieldNom.setText("");
        jComboBoxRegion.setSelectedIndex(0);
        jComboBoxDepartement.setSelectedIndex(0);
        jComboBoxEtablissement.setSelectedIndex(0);
        jComboBoxDeficients.setSelectedIndex(0);
        jComboBoxChinita.setSelectedIndex(0);
        model.setRowCount(0);//vide la jTable
    }

    private void remplirDepartementCombobox() {
        nomRegionSelected = (String) jComboBoxRegion.getSelectedItem();
        departements = metier.findAllDepartementsD1Region(nomRegionSelected);
        //on remplit la combobox des départements
        departementsCombo = new String[departements.size() + 1];
        departementsCombo[0] = "---";
        int i = 1;
        for (Departement departement : departements) {
            departementsCombo[i++] = departement.getNomdepart();
        }
        jComboBoxDepartement.setModel(new DefaultComboBoxModel(departementsCombo));
    }

    private void remplirArrondissementCombobox() {
        nomDepartementSelected = (String) jComboBoxDepartement.getSelectedItem();
        arrondissements = metier.findAllArrondissementsD1Departement(nomDepartementSelected);
        //on remplit la combobox des arrondissements
        arrondissementsCombo = new String[arrondissements.size() + 1];
        arrondissementsCombo[0] = "---";
        int i = 1;
        for (Arrondissement arrondissement : arrondissements) {
            arrondissementsCombo[i++] = arrondissement.getNomarr();
        }
        jComboBoxArrondissement.setModel(new DefaultComboBoxModel(arrondissementsCombo));
    }

    private void remplirEtablissementCombobox() {
        nomArrondissementSelected = (String) jComboBoxArrondissement.getSelectedItem();
        etablissements = metier.findAllEtablissementsD1Arrondissement(nomArrondissementSelected);
        //on remplit la combobox des établissements
        etablissementsCombo = new String[etablissements.size() + 1];
        etablissementsCombo[0] = "---";
        int i = 1;
        for (Etablissement etablissement : etablissements) {
            etablissementsCombo[i++] = etablissement.getAbreviation();
        }
        jComboBoxEtablissement.setModel(new DefaultComboBoxModel(etablissementsCombo));
    }
}
