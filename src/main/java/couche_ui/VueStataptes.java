
package couche_ui;

import couche_jpa.Arrondissement;
import couche_jpa.Departement;
import couche_jpa.Etablissement;
import couche_jpa.Examen;
import couche_jpa.Region;
import couche_jpa.Session;
import couche_jpa.Stataptes;
import couche_metier.IMetier;
import exception.ObcbudgetException;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;
import javax.swing.DefaultComboBoxModel;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import net.sf.jasperreports.engine.JRDataSource;
import net.sf.jasperreports.engine.JRException;
import net.sf.jasperreports.engine.JasperCompileManager;
import net.sf.jasperreports.engine.JasperFillManager;
import net.sf.jasperreports.engine.JasperPrint;
import net.sf.jasperreports.engine.JasperReport;
import net.sf.jasperreports.engine.data.JRBeanCollectionDataSource;
import net.sf.jasperreports.view.JasperViewer;
import org.springframework.context.ApplicationContext;
import org.springframework.context.support.ClassPathXmlApplicationContext;


public class VueStataptes extends javax.swing.JFrame {

    DefaultTableModel model;
    
    public VueStataptes() {
        initComponents();
        model=(DefaultTableModel) jTable1.getModel();
        doMyInit();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabelRegion = new javax.swing.JLabel();
        jLabelDepartement = new javax.swing.JLabel();
        jLabelArrondissement = new javax.swing.JLabel();
        jComboBoxRegion = new javax.swing.JComboBox<>();
        jComboBoxDepartement = new javax.swing.JComboBox<>();
        jComboBoxArrondissement = new javax.swing.JComboBox<>();
        jLabelSession = new javax.swing.JLabel();
        jLabelExamen = new javax.swing.JLabel();
        jLabelEtablissement = new javax.swing.JLabel();
        jComboBoxSession = new javax.swing.JComboBox<>();
        jComboBoxExamen = new javax.swing.JComboBox<>();
        jLabelEffectif = new javax.swing.JLabel();
        jTextFieldEffectif = new javax.swing.JTextField();
        jComboBoxEtablissement = new javax.swing.JComboBox<>();
        jButtonAnnuler = new javax.swing.JButton();
        jButtonFermer = new javax.swing.JButton();
        jButtonVisualiser = new javax.swing.JButton();
        jButtonCreer = new javax.swing.JButton();
        jButtonRechercher = new javax.swing.JButton();
        jButtonModifier = new javax.swing.JButton();
        jButtonSupprimer = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();

        setDefaultCloseOperation(javax.swing.WindowConstants.DO_NOTHING_ON_CLOSE);
        setResizable(false);

        jLabel1.setFont(new java.awt.Font("Arial", 1, 36)); // NOI18N
        jLabel1.setText("STATISTIQUES DES CANDIDATS APTES");

        jLabelRegion.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        jLabelRegion.setText("Région :");

        jLabelDepartement.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        jLabelDepartement.setText("Département :");

        jLabelArrondissement.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        jLabelArrondissement.setText("Arrondissement :");

        jComboBoxRegion.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        jComboBoxRegion.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        jComboBoxRegion.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBoxRegionActionPerformed(evt);
            }
        });

        jComboBoxDepartement.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        jComboBoxDepartement.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        jComboBoxDepartement.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBoxDepartementActionPerformed(evt);
            }
        });

        jComboBoxArrondissement.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        jComboBoxArrondissement.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        jComboBoxArrondissement.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBoxArrondissementActionPerformed(evt);
            }
        });

        jLabelSession.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        jLabelSession.setText("Session :");

        jLabelExamen.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        jLabelExamen.setText("Examen :");

        jLabelEtablissement.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        jLabelEtablissement.setText("Etablissement ou sous-centre :");

        jComboBoxSession.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        jComboBoxSession.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        jComboBoxSession.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBoxSessionActionPerformed(evt);
            }
        });

        jComboBoxExamen.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        jComboBoxExamen.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        jComboBoxExamen.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBoxExamenActionPerformed(evt);
            }
        });

        jLabelEffectif.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        jLabelEffectif.setText("Effectif candidats aptes :");

        jTextFieldEffectif.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        jTextFieldEffectif.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextFieldEffectifActionPerformed(evt);
            }
        });

        jComboBoxEtablissement.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        jComboBoxEtablissement.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        jComboBoxEtablissement.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBoxEtablissementActionPerformed(evt);
            }
        });

        jButtonAnnuler.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        jButtonAnnuler.setText("Annuler");
        jButtonAnnuler.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonAnnulerActionPerformed(evt);
            }
        });

        jButtonFermer.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        jButtonFermer.setText("Fermer");
        jButtonFermer.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonFermerActionPerformed(evt);
            }
        });

        jButtonVisualiser.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        jButtonVisualiser.setText("Visualiser");
        jButtonVisualiser.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonVisualiserActionPerformed(evt);
            }
        });

        jButtonCreer.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        jButtonCreer.setText("Créer");
        jButtonCreer.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonCreerActionPerformed(evt);
            }
        });

        jButtonRechercher.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        jButtonRechercher.setText("Rechercher");
        jButtonRechercher.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonRechercherActionPerformed(evt);
            }
        });

        jButtonModifier.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        jButtonModifier.setText("Modifier");
        jButtonModifier.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonModifierActionPerformed(evt);
            }
        });

        jButtonSupprimer.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        jButtonSupprimer.setText("Supprimer");
        jButtonSupprimer.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonSupprimerActionPerformed(evt);
            }
        });

        jTable1.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Id", "Région", "Département", "Arrondissement", "Etablissement/Sous-centre", "Session", "Examen", "Effectif", "Version"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jTable1.setShowHorizontalLines(true);
        jTable1.setShowVerticalLines(true);
        jTable1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTable1MouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(jTable1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jScrollPane1))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(251, 251, 251)
                                .addComponent(jLabel1))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(251, 251, 251)
                                .addComponent(jButtonCreer)
                                .addGap(18, 18, 18)
                                .addComponent(jButtonRechercher)
                                .addGap(18, 18, 18)
                                .addComponent(jButtonModifier)
                                .addGap(18, 18, 18)
                                .addComponent(jButtonSupprimer)
                                .addGap(18, 18, 18)
                                .addComponent(jButtonAnnuler)
                                .addGap(18, 18, 18)
                                .addComponent(jButtonFermer, javax.swing.GroupLayout.PREFERRED_SIZE, 121, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(jButtonVisualiser)))
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(21, 21, 21)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabelDepartement)
                            .addComponent(jLabelRegion)
                            .addComponent(jLabelArrondissement)
                            .addComponent(jLabelEtablissement))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jComboBoxEtablissement, javax.swing.GroupLayout.PREFERRED_SIZE, 412, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                    .addComponent(jComboBoxDepartement, javax.swing.GroupLayout.Alignment.LEADING, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(jComboBoxRegion, javax.swing.GroupLayout.Alignment.LEADING, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(jComboBoxArrondissement, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 284, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(97, 97, 97)))
                        .addGap(52, 52, 52)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabelEffectif)
                            .addComponent(jLabelExamen)
                            .addComponent(jLabelSession))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jComboBoxExamen, javax.swing.GroupLayout.PREFERRED_SIZE, 178, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jTextFieldEffectif, javax.swing.GroupLayout.PREFERRED_SIZE, 49, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jComboBoxSession, javax.swing.GroupLayout.PREFERRED_SIZE, 91, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 42, Short.MAX_VALUE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(34, 34, 34)
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(30, 30, 30)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jComboBoxRegion, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabelRegion, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jComboBoxDepartement, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabelDepartement, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabelArrondissement, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jComboBoxArrondissement, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jComboBoxExamen, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(0, 0, 0)
                                .addComponent(jLabelExamen, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabelSession, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jComboBoxSession, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(17, 17, 17)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabelEffectif, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jTextFieldEffectif, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabelEtablissement, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jComboBoxEtablissement, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(jButtonFermer, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jButtonCreer, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jButtonRechercher, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jButtonModifier, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jButtonSupprimer, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jButtonAnnuler, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jButtonVisualiser, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 340, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void jComboBoxRegionActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBoxRegionActionPerformed
        remplirDepartementCombobox();
    }//GEN-LAST:event_jComboBoxRegionActionPerformed

    private void jComboBoxDepartementActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBoxDepartementActionPerformed
        remplirArrondissementCombobox();
    }//GEN-LAST:event_jComboBoxDepartementActionPerformed

    private void jComboBoxArrondissementActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBoxArrondissementActionPerformed
        remplirEtablissementCombobox();
    }//GEN-LAST:event_jComboBoxArrondissementActionPerformed

    private void jComboBoxSessionActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBoxSessionActionPerformed
        //rien
    }//GEN-LAST:event_jComboBoxSessionActionPerformed

    private void jComboBoxExamenActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBoxExamenActionPerformed
        //rien ici
    }//GEN-LAST:event_jComboBoxExamenActionPerformed

    private void jTextFieldEffectifActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextFieldEffectifActionPerformed
        //
    }//GEN-LAST:event_jTextFieldEffectifActionPerformed

    private void jComboBoxEtablissementActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBoxEtablissementActionPerformed
        //inutile
    }//GEN-LAST:event_jComboBoxEtablissementActionPerformed

    private void jButtonAnnulerActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonAnnulerActionPerformed
        videFrame();
    }//GEN-LAST:event_jButtonAnnulerActionPerformed

    private void jButtonFermerActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonFermerActionPerformed
        dispose();
    }//GEN-LAST:event_jButtonFermerActionPerformed

    private void jButtonVisualiserActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonVisualiserActionPerformed
        anneeString=(String)jComboBoxSession.getSelectedItem();
        sigleExamenSelected=(String) jComboBoxExamen.getSelectedItem();
        if(!anneeString.equals("---") && !sigleExamenSelected.equals("---")){
            anneeSelected=Integer.parseInt(anneeString);       
            stataptesD1ExamenEtD1Session=metier.findAllStataptesD1ExamenDans1Session(anneeSelected,sigleExamenSelected);
            try{
                List<Map<String, Object>> datasource=new ArrayList<>();
                for(Stataptes stat:stataptesD1ExamenEtD1Session){
                    Map<String, Object> row=new HashMap<>();
                    row.put("examen",stat.getExamen().getSigle());
                    String s=""+stat.getSession().getAnnee();
                    row.put("session",s);
                    row.put("region",stat.getEtablissement().getArrondissement().getDepartement().getRegion().getNomreg());
                    row.put("departement",stat.getEtablissement().getArrondissement().getDepartement().getNomdepart());
                    row.put("arrondissement",stat.getEtablissement().getArrondissement().getNomarr());
                    row.put("etablissement",stat.getEtablissement().getAbreviation());
                    row.put("nombre",stat.getNbaptes());
                    datasource.add(row);
                }
                JRDataSource jRDataSource=new JRBeanCollectionDataSource(datasource);
                JasperReport jasperReport=JasperCompileManager.compileReport("src\\main\\java\\reports\\stataptesReport.jrxml");
                JasperPrint jasperPrint=JasperFillManager.fillReport(jasperReport,null, jRDataSource);
                JasperViewer jasperViewer=new JasperViewer(jasperPrint,false);//false empêche jasperviewer de fermer l'appli lorsqu'on le ferme
                jasperViewer.setVisible(true);
            }catch(JRException e){
                JOptionPane.showMessageDialog(this, e.getMessage());
            }
        }
        else JOptionPane.showMessageDialog(this, "Veuillez recommencez svp. Les champs session et examen sont obligatoires !"); 
    }//GEN-LAST:event_jButtonVisualiserActionPerformed

    private void jButtonCreerActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonCreerActionPerformed
        model.setRowCount(0);//vide la jTable
        validerNombre();
        if(continuer && nombre>0){
            infoSaisies();
            for(Etablissement etablissement:etablissements){
                if(etablissement.getAbreviation().equals(nomEtablissementSelected)){
                    etablissementSelected=etablissement;
                    break;
                }
            }
            for(Examen e:examens){
                if(e.getSigle().equals(sigleExamenSelected)){
                    examenSelected=e;
                    break;
                }
            }
            
            for(Session s:sessions){
                if(s.getAnnee()==anneeSelected){
                    sessionSelected=s;
                    break;
                }
            }
            
            try{
                metier.creerStataptes(new Stataptes(nombre,sessionSelected,examenSelected,etablissementSelected));
                JOptionPane.showMessageDialog(this, "Statistique créée avec succès !");
                jTextFieldEffectif.setText("0");
                stataptes=metier.findStataptesD1EtablissementA1ExamenDans1Session(anneeSelected,nomEtablissementSelected,sigleExamenSelected);
                model.insertRow(model.getRowCount(),new Object[]{stataptes.getIdapt(),stataptes.getEtablissement().getArrondissement().getDepartement().getRegion().getNomreg(),stataptes.getEtablissement().getArrondissement().getDepartement().getNomdepart(),stataptes.getEtablissement().getArrondissement().getNomarr(), stataptes.getEtablissement().getAbreviation(),stataptes.getSession().getAnnee(),stataptes.getExamen().getSigle(),stataptes.getNbaptes(),stataptes.getVersion()});               
            }catch(ObcbudgetException ex){
                JOptionPane.showMessageDialog(this, "Impossible de créer la statistique souhaitée \n raison:"+ex.getMessage());
            }
        }
        else JOptionPane.showMessageDialog(this, "L'effectif doit être un entier positif !");
    }//GEN-LAST:event_jButtonCreerActionPerformed

    private void jButtonRechercherActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonRechercherActionPerformed
        model.setRowCount(0);//vide la jTable
        infoSaisies();
        try{
            stataptes=metier.findStataptesD1EtablissementA1ExamenDans1Session(anneeSelected,nomEtablissementSelected,sigleExamenSelected);
            model.insertRow(model.getRowCount(),new Object[]{stataptes.getIdapt(),stataptes.getEtablissement().getArrondissement().getDepartement().getRegion().getNomreg(),stataptes.getEtablissement().getArrondissement().getDepartement().getNomdepart(),stataptes.getEtablissement().getArrondissement().getNomarr(), stataptes.getEtablissement().getAbreviation(),stataptes.getSession().getAnnee(),stataptes.getExamen().getSigle(),stataptes.getNbaptes(),stataptes.getVersion()});               
        }catch(ObcbudgetException ex){
            JOptionPane.showMessageDialog(this, "La statistique recherchée n'existe sans doute pas ! ");
        }
    }//GEN-LAST:event_jButtonRechercherActionPerformed

    private void jButtonModifierActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonModifierActionPerformed
        model.setRowCount(0);//vide la jTable
        validerNombre();
        int result = JOptionPane.showConfirmDialog(this,"Voulez-vous vraiment modifier cette statistique?", "confirmation de modification",JOptionPane.YES_NO_OPTION,JOptionPane.QUESTION_MESSAGE);
        if(result == JOptionPane.YES_OPTION){
            if(continuer && nombre>0){
                infoSaisies();
                stataptesCliked=metier.findStataptesById(idStataptesCliked);
                for(Etablissement etablissement:etablissements){
                    if(etablissement.getAbreviation().equals(nomEtablissementSelected)){
                        etablissementSelected=etablissement;
                        break;
                    }
                }
                stataptesCliked.setEtablissement(etablissementSelected);
                for(Examen e:examens){
                    if(e.getSigle().equals(sigleExamenSelected)){
                        examenSelected=e;
                        break;
                    }
                }
                stataptesCliked.setExamen(examenSelected);
                
                for(Session s:sessions){
                    if(s.getAnnee()==anneeSelected){
                        sessionSelected=s;
                        break;
                    }
                }
                stataptesCliked.setSession(sessionSelected);

                stataptesCliked.setNbaptes(nombre);

                try{
                    metier.modifierStataptes(stataptesCliked);
                    JOptionPane.showMessageDialog(this, "Statistique modifiée avec succès !");
                    jTextFieldEffectif.setText("0");
                    stataptes=metier.findStataptesD1EtablissementA1ExamenDans1Session(anneeSelected,nomEtablissementSelected,sigleExamenSelected);
                    model.insertRow(model.getRowCount(),new Object[]{stataptes.getIdapt(),stataptes.getEtablissement().getArrondissement().getDepartement().getRegion().getNomreg(),stataptes.getEtablissement().getArrondissement().getDepartement().getNomdepart(),stataptes.getEtablissement().getArrondissement().getNomarr(), stataptes.getEtablissement().getAbreviation(),stataptes.getSession().getAnnee(),stataptes.getExamen().getSigle(),stataptes.getNbaptes(),stataptes.getVersion()});               
                }catch(ObcbudgetException ex){
                    JOptionPane.showMessageDialog(this, "Impossible de modifier la statistique souhaitée \n raison:"+ex.getMessage());
                }
            }
            else JOptionPane.showMessageDialog(this, "L'effectif doit être un entier positif !");
        }
    }//GEN-LAST:event_jButtonModifierActionPerformed

    private void jButtonSupprimerActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonSupprimerActionPerformed
        model.setRowCount(0);//vide la jTable
        validerNombre();
        int result = JOptionPane.showConfirmDialog(this,"Voulez-vous vraiment supprimer cette statistique?", "confirmation de suppression",JOptionPane.YES_NO_OPTION,JOptionPane.QUESTION_MESSAGE);
        if(result == JOptionPane.YES_OPTION){
            if(continuer && nombre>0){
                infoSaisies();
                try{
                    metier.supprimerStataptes(metier.findStataptesById(idStataptesCliked));
                    JOptionPane.showMessageDialog(this, "Statistique supprimée avec succès !");
                    jTextFieldEffectif.setText("0");
                    stataptes=metier.findStataptesD1EtablissementA1ExamenDans1Session(anneeSelected,nomEtablissementSelected,sigleExamenSelected);
                    model.insertRow(model.getRowCount(),new Object[]{stataptes.getIdapt(),stataptes.getEtablissement().getArrondissement().getDepartement().getRegion().getNomreg(),stataptes.getEtablissement().getArrondissement().getDepartement().getNomdepart(),stataptes.getEtablissement().getArrondissement().getNomarr(), stataptes.getEtablissement().getAbreviation(),stataptes.getSession().getAnnee(),stataptes.getExamen().getSigle(),stataptes.getNbaptes(),stataptes.getVersion()});               
                }catch(ObcbudgetException ex){
                    JOptionPane.showMessageDialog(this, "Impossible de supprimer la statistique souhaitée \n raison:"+ex.getMessage());
                }
            }
            else JOptionPane.showMessageDialog(this, "L'effectif doit être un entier positif !");
        }
    }//GEN-LAST:event_jButtonSupprimerActionPerformed

    private void jTable1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTable1MouseClicked
        //remplit les champs
        int ligne=jTable1.getSelectedRow();
        idStataptesCliked=(int) model.getValueAt(ligne,0);
        jComboBoxRegion.setSelectedItem((String) model.getValueAt(ligne,1));
        jComboBoxDepartement.setSelectedItem((String) model.getValueAt(ligne,2));
        jComboBoxArrondissement.setSelectedItem((String) model.getValueAt(ligne,3));
        jComboBoxEtablissement.setSelectedItem((String) model.getValueAt(ligne,4));
        jComboBoxSession.setSelectedItem(""+model.getValueAt(ligne,5));
        jComboBoxExamen.setSelectedItem((String) model.getValueAt(ligne,6));
        jTextFieldEffectif.setText(""+model.getValueAt(ligne,7));
    }//GEN-LAST:event_jTable1MouseClicked

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(VueStataptes.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(VueStataptes.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(VueStataptes.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(VueStataptes.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new VueStataptes().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButtonAnnuler;
    private javax.swing.JButton jButtonCreer;
    private javax.swing.JButton jButtonFermer;
    private javax.swing.JButton jButtonModifier;
    private javax.swing.JButton jButtonRechercher;
    private javax.swing.JButton jButtonSupprimer;
    private javax.swing.JButton jButtonVisualiser;
    private javax.swing.JComboBox<String> jComboBoxArrondissement;
    private javax.swing.JComboBox<String> jComboBoxDepartement;
    private javax.swing.JComboBox<String> jComboBoxEtablissement;
    private javax.swing.JComboBox<String> jComboBoxExamen;
    private javax.swing.JComboBox<String> jComboBoxRegion;
    private javax.swing.JComboBox<String> jComboBoxSession;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabelArrondissement;
    private javax.swing.JLabel jLabelDepartement;
    private javax.swing.JLabel jLabelEffectif;
    private javax.swing.JLabel jLabelEtablissement;
    private javax.swing.JLabel jLabelExamen;
    private javax.swing.JLabel jLabelRegion;
    private javax.swing.JLabel jLabelSession;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTable1;
    private javax.swing.JTextField jTextFieldEffectif;
    // End of variables declaration//GEN-END:variables

    // variables d'instance
    private IMetier metier=null;
    private List<Region> regions=null;
    private String[] regionsCombo=null;
    private List<Departement> departements=null;
    private List<Arrondissement> arrondissements=null;
    private List<Etablissement> etablissements=null;
    private List<Session> sessions=null;
    private List<Examen> examens=null;
    private String[] departementsCombo=null;
    private String[] arrondissementsCombo=null;
    private String[] sessionsCombo=null; 
    private String[] examensCombo=null;
    private String[] etablissementsCombo=null;
    private Departement departementSelected=null;
    private Arrondissement arrondissementSelected=null;
    private String sigleExamenSelected="";
    private String nomRegionSelected="";
    private String nomDepartementSelected="";
    private String nomArrondissementSelected="";
    private String nomEtablissementSelected="";
    private Etablissement etablissementSelected=null;
    private int anneeSelected=0;
    private Session sessionSelected=null;
    private Examen examenSelected=null;
    private int nombre=0;
    private int idStataptesCliked=0;
    private Stataptes stataptesCliked=null;
    private Stataptes stataptes=null;
    private List<Stataptes> stataptesD1ExamenEtD1Session=null;
    boolean continuer=false;
    private String anneeString="";
    
    private void doMyInit(){
        // init contexte
        // instanciation couche [metier]
        ApplicationContext ctx = new ClassPathXmlApplicationContext("spring-config-metier.xml");
        metier = (IMetier) ctx.getBean("metier");
        sessions=metier.findAllSessions();
        examens=metier.findAllExamens();
        regions=metier.findAllRegions();
        
        //on remplit la combobox des sessions
        sessionsCombo=new String[sessions.size()+1];
        sessionsCombo[0]="---";
        int i=1;
        for(Session session : sessions){
            if(!session.isCloturee()) sessionsCombo[i++]=""+session.getAnnee();
        }
        jComboBoxSession.setModel(new DefaultComboBoxModel(sessionsCombo));

        //on remplit la combobox des examens
        examensCombo=new String[examens.size()+1];
        examensCombo[0]="---";
        int k=1;
        for(Examen examen : examens){
            examensCombo[k++]=examen.getSigle();
        }
        jComboBoxExamen.setModel(new DefaultComboBoxModel(examensCombo));

        //on remplit la combobox des régions
        regionsCombo=new String[regions.size()+1];
        regionsCombo[0]="---";
        int j=1;
        for(Region region : regions){
            regionsCombo[j++]=region.getNomreg();
        }
        jComboBoxRegion.setModel(new DefaultComboBoxModel(regionsCombo));
        
        jTextFieldEffectif.setText("0");
        
        remplirDepartementCombobox();
        
        remplirArrondissementCombobox();
        
        remplirEtablissementCombobox();        
    }
    
    private void infoSaisies(){
        anneeSelected=Integer.parseInt((String)jComboBoxSession.getSelectedItem());
        sigleExamenSelected=(String) jComboBoxExamen.getSelectedItem();
        nomRegionSelected=(String) jComboBoxRegion.getSelectedItem();
        nomDepartementSelected=(String) jComboBoxDepartement.getSelectedItem();
        nomArrondissementSelected=(String) jComboBoxArrondissement.getSelectedItem();   
        nomEtablissementSelected=(String) jComboBoxEtablissement.getSelectedItem();        
    }
    private void videFrame(){ 
        jComboBoxSession.setSelectedIndex(0);
        jComboBoxExamen.setSelectedIndex(0);
        jComboBoxRegion.setSelectedIndex(0);
        jComboBoxDepartement.setSelectedIndex(0);
        jComboBoxArrondissement.setSelectedIndex(0);
        jComboBoxEtablissement.setSelectedIndex(0);
        jTextFieldEffectif.setText("0");
        model.setRowCount(0);//vide la jTable
    }
    
    private void remplirDepartementCombobox(){
        nomRegionSelected=(String) jComboBoxRegion.getSelectedItem();
        departements=metier.findAllDepartementsD1Region(nomRegionSelected);
        //on remplit la combobox des départements
        departementsCombo=new String[departements.size()+1];
        departementsCombo[0]="---";
        int i=1;
        for(Departement departement : departements){
            departementsCombo[i++]=departement.getNomdepart();
        }
        jComboBoxDepartement.setModel(new DefaultComboBoxModel(departementsCombo));
    }
    
    private void remplirArrondissementCombobox(){
        nomDepartementSelected=(String) jComboBoxDepartement.getSelectedItem();
        arrondissements=metier.findAllArrondissementsD1Departement(nomDepartementSelected);
        //on remplit la combobox des arrondissements
        arrondissementsCombo=new String[arrondissements.size()+1];
        arrondissementsCombo[0]="---";
        int i=1;
        for(Arrondissement arrondissement : arrondissements){
            arrondissementsCombo[i++]=arrondissement.getNomarr();
        }
        jComboBoxArrondissement.setModel(new DefaultComboBoxModel(arrondissementsCombo));
    }
    
    private void remplirEtablissementCombobox(){
        nomArrondissementSelected=(String) jComboBoxArrondissement.getSelectedItem(); 
        etablissements=metier.findAllEtablissementsCentreDEpsD1Arrondissement(nomArrondissementSelected);
        //on remplit la combobox des établissements centres d'EPS
        etablissementsCombo=new String[etablissements.size()+1];
        etablissementsCombo[0]="---";
        int i=1;
        for(Etablissement etablissement : etablissements){
            etablissementsCombo[i++]=etablissement.getAbreviation();
        }
        jComboBoxEtablissement.setModel(new DefaultComboBoxModel(etablissementsCombo));
    }
    
    private void validerNombre(){
        String chaine=jTextFieldEffectif.getText();
        try {
                int nb = Integer.parseInt(chaine);
                nombre=nb;
                continuer=true;
            }catch (NumberFormatException e) {
                JOptionPane.showMessageDialog(this, " L'effectif de candidats doit être fourni et contenir uniquement des chiffres !");
                continuer=false;
            }
    }
}
