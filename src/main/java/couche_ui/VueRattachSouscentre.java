package couche_ui;

import couche_jpa.Arrondissement;
import couche_jpa.Centre;
import couche_jpa.Departement;
import couche_jpa.Rattachscentre;
import couche_jpa.Region;
import couche_jpa.Souscentre;
import couche_metier.IMetier;
import exception.ObcbudgetException;
import java.util.List;
import javax.swing.DefaultComboBoxModel;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import org.springframework.context.ApplicationContext;
import org.springframework.context.support.ClassPathXmlApplicationContext;

public class VueRattachSouscentre extends javax.swing.JFrame {

    DefaultTableModel model;

    public VueRattachSouscentre() {
        initComponents();
        model = (DefaultTableModel) jTable1.getModel();
        doMyInit();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroup1 = new javax.swing.ButtonGroup();
        jLabel1 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jButtonCreer = new javax.swing.JButton();
        jButtonRechercher = new javax.swing.JButton();
        jButtonSupprimer = new javax.swing.JButton();
        jButtonAnnuler = new javax.swing.JButton();
        jButtonFermer = new javax.swing.JButton();
        jPanelEtablissement = new javax.swing.JPanel();
        jLabeNomSouscentre = new javax.swing.JLabel();
        jComboBoxSouscentre = new javax.swing.JComboBox<>();
        jLabelArrondissementSouscentre = new javax.swing.JLabel();
        jComboBoxArrondissementSouscentre = new javax.swing.JComboBox<>();
        jLabelDepartementSouscentre = new javax.swing.JLabel();
        jComboBoxDepartementSouscentre = new javax.swing.JComboBox<>();
        jComboBoxRegionSouscentre = new javax.swing.JComboBox<>();
        jLabelRegionSouscentre = new javax.swing.JLabel();
        jPanelSouscentre = new javax.swing.JPanel();
        jLabelNomCentre = new javax.swing.JLabel();
        jLabelCentre = new javax.swing.JLabel();
        jComboBoxDepartementCentre = new javax.swing.JComboBox<>();
        jLabelArrondissementCentre = new javax.swing.JLabel();
        jComboBoxArrondissementCentre = new javax.swing.JComboBox<>();
        jComboBoxCentre = new javax.swing.JComboBox<>();
        jLabelRegionCentre = new javax.swing.JLabel();
        jComboBoxRegionCentre = new javax.swing.JComboBox<>();
        jButtonModifier = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DO_NOTHING_ON_CLOSE);
        setResizable(false);

        jLabel1.setFont(new java.awt.Font("Arial", 1, 36)); // NOI18N
        jLabel1.setText("RATTACHEMENT DES SOUS-CENTRES");

        jTable1.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Id", "N° Ordre", "Région du centre", "Département du centre", "Arrondissement du centre", "Centre", "Région du sous-centre", "Département du sous-centre", "Arrondissement du sous-centre", "Sous-centre"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jTable1.setShowHorizontalLines(true);
        jTable1.setShowVerticalLines(true);
        jTable1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTable1MouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(jTable1);

        jButtonCreer.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        jButtonCreer.setText("Créer");
        jButtonCreer.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonCreerActionPerformed(evt);
            }
        });

        jButtonRechercher.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        jButtonRechercher.setText("Rechercher");
        jButtonRechercher.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonRechercherActionPerformed(evt);
            }
        });

        jButtonSupprimer.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        jButtonSupprimer.setText("Supprimer");
        jButtonSupprimer.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonSupprimerActionPerformed(evt);
            }
        });

        jButtonAnnuler.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        jButtonAnnuler.setText("Annuler");
        jButtonAnnuler.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonAnnulerActionPerformed(evt);
            }
        });

        jButtonFermer.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        jButtonFermer.setText("Fermer");
        jButtonFermer.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonFermerActionPerformed(evt);
            }
        });

        jPanelEtablissement.setBackground(new java.awt.Color(255, 204, 255));
        jPanelEtablissement.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Sous-centre", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Arial", 1, 14), new java.awt.Color(51, 0, 204))); // NOI18N

        jLabeNomSouscentre.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        jLabeNomSouscentre.setText("Nom sous-centre :");

        jComboBoxSouscentre.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        jComboBoxSouscentre.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBoxSouscentreActionPerformed(evt);
            }
        });

        jLabelArrondissementSouscentre.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        jLabelArrondissementSouscentre.setText("Arrondissement :");

        jComboBoxArrondissementSouscentre.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        jComboBoxArrondissementSouscentre.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBoxArrondissementSouscentreActionPerformed(evt);
            }
        });

        jLabelDepartementSouscentre.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        jLabelDepartementSouscentre.setText("Département :");

        jComboBoxDepartementSouscentre.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        jComboBoxDepartementSouscentre.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBoxDepartementSouscentreActionPerformed(evt);
            }
        });

        jComboBoxRegionSouscentre.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        jComboBoxRegionSouscentre.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBoxRegionSouscentreActionPerformed(evt);
            }
        });

        jLabelRegionSouscentre.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        jLabelRegionSouscentre.setText("Région :");

        javax.swing.GroupLayout jPanelEtablissementLayout = new javax.swing.GroupLayout(jPanelEtablissement);
        jPanelEtablissement.setLayout(jPanelEtablissementLayout);
        jPanelEtablissementLayout.setHorizontalGroup(
            jPanelEtablissementLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelEtablissementLayout.createSequentialGroup()
                .addContainerGap(33, Short.MAX_VALUE)
                .addGroup(jPanelEtablissementLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabelDepartementSouscentre, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabelArrondissementSouscentre, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabeNomSouscentre, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabelRegionSouscentre, javax.swing.GroupLayout.Alignment.TRAILING))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanelEtablissementLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanelEtablissementLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addComponent(jComboBoxDepartementSouscentre, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jComboBoxArrondissementSouscentre, 0, 342, Short.MAX_VALUE)
                        .addComponent(jComboBoxSouscentre, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addComponent(jComboBoxRegionSouscentre, javax.swing.GroupLayout.PREFERRED_SIZE, 342, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(20, 20, 20))
        );
        jPanelEtablissementLayout.setVerticalGroup(
            jPanelEtablissementLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelEtablissementLayout.createSequentialGroup()
                .addGap(17, 17, 17)
                .addGroup(jPanelEtablissementLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jComboBoxRegionSouscentre, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabelRegionSouscentre, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanelEtablissementLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabelDepartementSouscentre, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jComboBoxDepartementSouscentre, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanelEtablissementLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabelArrondissementSouscentre, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jComboBoxArrondissementSouscentre, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanelEtablissementLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabeNomSouscentre, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jComboBoxSouscentre, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanelSouscentre.setBackground(new java.awt.Color(153, 255, 153));
        jPanelSouscentre.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Centre", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Arial", 1, 14), new java.awt.Color(51, 0, 204))); // NOI18N

        jLabelNomCentre.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        jLabelNomCentre.setText("Nom centre :");

        jLabelCentre.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        jLabelCentre.setText("Département :");

        jComboBoxDepartementCentre.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        jComboBoxDepartementCentre.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBoxDepartementCentreActionPerformed(evt);
            }
        });

        jLabelArrondissementCentre.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        jLabelArrondissementCentre.setText("Arrondissement :");

        jComboBoxArrondissementCentre.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        jComboBoxArrondissementCentre.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBoxArrondissementCentreActionPerformed(evt);
            }
        });

        jComboBoxCentre.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        jComboBoxCentre.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBoxCentreActionPerformed(evt);
            }
        });

        jLabelRegionCentre.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        jLabelRegionCentre.setText("Région :");

        jComboBoxRegionCentre.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        jComboBoxRegionCentre.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBoxRegionCentreActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanelSouscentreLayout = new javax.swing.GroupLayout(jPanelSouscentre);
        jPanelSouscentre.setLayout(jPanelSouscentreLayout);
        jPanelSouscentreLayout.setHorizontalGroup(
            jPanelSouscentreLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelSouscentreLayout.createSequentialGroup()
                .addGap(29, 29, 29)
                .addGroup(jPanelSouscentreLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanelSouscentreLayout.createSequentialGroup()
                        .addComponent(jLabelRegionCentre)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jComboBoxRegionCentre, javax.swing.GroupLayout.PREFERRED_SIZE, 342, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanelSouscentreLayout.createSequentialGroup()
                        .addGroup(jPanelSouscentreLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabelCentre)
                            .addComponent(jLabelArrondissementCentre)
                            .addComponent(jLabelNomCentre))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanelSouscentreLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jComboBoxArrondissementCentre, 0, 342, Short.MAX_VALUE)
                            .addComponent(jComboBoxDepartementCentre, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jComboBoxCentre, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                .addContainerGap(21, Short.MAX_VALUE))
        );
        jPanelSouscentreLayout.setVerticalGroup(
            jPanelSouscentreLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelSouscentreLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanelSouscentreLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jComboBoxRegionCentre, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabelRegionCentre, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanelSouscentreLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jComboBoxDepartementCentre, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabelCentre, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanelSouscentreLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabelArrondissementCentre, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jComboBoxArrondissementCentre, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanelSouscentreLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabelNomCentre, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jComboBoxCentre, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jButtonModifier.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        jButtonModifier.setText("Modifier");
        jButtonModifier.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonModifierActionPerformed(evt);
            }
        });

        jLabel2.setFont(new java.awt.Font("Arial", 1, 36)); // NOI18N
        jLabel2.setText("AUX CENTRES D'EXAMEN");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1)
                .addContainerGap())
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(53, Short.MAX_VALUE)
                .addComponent(jPanelSouscentre, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jPanelEtablissement, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(50, 50, 50))
            .addGroup(layout.createSequentialGroup()
                .addGap(261, 261, 261)
                .addComponent(jLabel1)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(277, 277, 277)
                        .addComponent(jButtonCreer)
                        .addGap(18, 18, 18)
                        .addComponent(jButtonRechercher)
                        .addGap(21, 21, 21)
                        .addComponent(jButtonModifier)
                        .addGap(21, 21, 21)
                        .addComponent(jButtonSupprimer)
                        .addGap(18, 18, 18)
                        .addComponent(jButtonAnnuler)
                        .addGap(18, 18, 18)
                        .addComponent(jButtonFermer))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(382, 382, 382)
                        .addComponent(jLabel2)))
                .addGap(0, 0, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(23, 23, 23)
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel2)
                .addGap(25, 25, 25)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jPanelSouscentre, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanelEtablissement, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 22, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jButtonModifier, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jButtonCreer, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jButtonRechercher, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jButtonSupprimer, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jButtonAnnuler, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jButtonFermer, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 172, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void jButtonFermerActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonFermerActionPerformed
        dispose();
    }//GEN-LAST:event_jButtonFermerActionPerformed

    private void jButtonAnnulerActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonAnnulerActionPerformed
        videFrame();
    }//GEN-LAST:event_jButtonAnnulerActionPerformed

    private void jComboBoxRegionCentreActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBoxRegionCentreActionPerformed
        remplirDepartementCentreCombobox();
    }//GEN-LAST:event_jComboBoxRegionCentreActionPerformed

    private void jComboBoxDepartementCentreActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBoxDepartementCentreActionPerformed
        remplirArrondissementCentreCombobox();
    }//GEN-LAST:event_jComboBoxDepartementCentreActionPerformed

    private void jComboBoxArrondissementCentreActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBoxArrondissementCentreActionPerformed
        remplirCentreCombobox();
    }//GEN-LAST:event_jComboBoxArrondissementCentreActionPerformed

    private void jButtonCreerActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonCreerActionPerformed
        model.setRowCount(0);//vide la jTable
        infoSaisies();
        if (!nomSouscentreSelected.equals("---") && !nomCentreSelected.equals("---")) {
            for (Souscentre souscentre : souscentres) {
                if (souscentre.getNomsouscent().equals(nomSouscentreSelected)) {
                    souscentreSelected = souscentre;
                    break;
                }
            }
            for (Centre centre : centres) {
                if (centre.getNomcent().equals(nomCentreSelected)) {
                    centreSelected = centre;
                    break;
                }
            }
            try {
                metier.creerRattachscentre(new Rattachscentre(centreSelected,souscentreSelected));
                JOptionPane.showMessageDialog(this, "Rattachement effectué avec succès !");
                //videFrame();
                int i = 1;
                rattachscentres = metier.findAllRattachscentresD1Centre(nomCentreSelected);  
                for(Rattachscentre rattachscentre:rattachscentres){
                    model.insertRow(model.getRowCount(), new Object[]{rattachscentre.getIdratscent(),i++,rattachscentre.getCentre().getArrondissement().getDepartement().getRegion().getNomreg(),rattachscentre.getCentre().getArrondissement().getDepartement().getNomdepart(),rattachscentre.getCentre().getArrondissement().getNomarr(),rattachscentre.getCentre().getNomcent(),rattachscentre.getSouscentre().getEtablissement().getArrondissement().getDepartement().getRegion().getNomreg(),rattachscentre.getSouscentre().getEtablissement().getArrondissement().getDepartement().getNomdepart(),rattachscentre.getSouscentre().getEtablissement().getArrondissement().getNomarr(),rattachscentre.getSouscentre().getNomsouscent()});
                }                            
            } catch (ObcbudgetException ex) {
                JOptionPane.showMessageDialog(this, "Impossible d'extraire les sous-centres rattachés au centre [" + nomCentreSelected + "] \n raison:" + ex.getMessage());
            }
        } else {
            JOptionPane.showMessageDialog(this, "Tous les champs sont obligatoires !");
        }
        rattachscentres.clear();
    }//GEN-LAST:event_jButtonCreerActionPerformed

    private void jButtonRechercherActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonRechercherActionPerformed
         model.setRowCount(0);//vide la jTable
        infoSaisies();       
        if (!nomCentreSelected.equals("---")) {
            try{
                int i = 1;
                rattachscentres = metier.findAllRattachscentresD1Centre(nomCentreSelected);  
                for(Rattachscentre rattachscentre:rattachscentres){
                    model.insertRow(model.getRowCount(), new Object[]{rattachscentre.getIdratscent(),i++,rattachscentre.getCentre().getArrondissement().getDepartement().getRegion().getNomreg(),rattachscentre.getCentre().getArrondissement().getDepartement().getNomdepart(),rattachscentre.getCentre().getArrondissement().getNomarr(),rattachscentre.getCentre().getNomcent(),rattachscentre.getSouscentre().getEtablissement().getArrondissement().getDepartement().getRegion().getNomreg(),rattachscentre.getSouscentre().getEtablissement().getArrondissement().getDepartement().getNomdepart(),rattachscentre.getSouscentre().getEtablissement().getArrondissement().getNomarr(),rattachscentre.getSouscentre().getNomsouscent()});
                }     
            }catch (ObcbudgetException ex) {
                    JOptionPane.showMessageDialog(this, "Impossible d'extraire les sous-centres rattachés au centre [" + nomCentreSelected + "] \n raison:" + ex.getMessage());
                }
        }
        else JOptionPane.showMessageDialog(this, "Le champ nom centre est obligatoire. !");
        rattachscentres.clear();
    }//GEN-LAST:event_jButtonRechercherActionPerformed

    private void jTable1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTable1MouseClicked
        //remplit les champs
        int ligne = jTable1.getSelectedRow();
        idRattachscentreCliked=(int) model.getValueAt(ligne, 0);
        jComboBoxRegionCentre.setSelectedItem((String) model.getValueAt(ligne, 2));
        jComboBoxDepartementCentre.setSelectedItem((String) model.getValueAt(ligne, 3));
        jComboBoxArrondissementCentre.setSelectedItem((String) model.getValueAt(ligne, 4));
        jComboBoxCentre.setSelectedItem((String) model.getValueAt(ligne, 5));
        jComboBoxRegionSouscentre.setSelectedItem((String) model.getValueAt(ligne, 6));
        jComboBoxDepartementSouscentre.setSelectedItem((String) model.getValueAt(ligne, 7));
        jComboBoxArrondissementSouscentre.setSelectedItem((String) model.getValueAt(ligne, 8));       
        jComboBoxSouscentre.setSelectedItem((String) model.getValueAt(ligne, 9));
    }//GEN-LAST:event_jTable1MouseClicked

    private void jButtonSupprimerActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonSupprimerActionPerformed
        model.setRowCount(0);//vide la jTable
        infoSaisies();
        int result = JOptionPane.showConfirmDialog(this, "Voulez-vous vraiment supprimer ce rattachement au centre [" + nomCentreSelected+"] ?", "confirmation de suppression", JOptionPane.YES_NO_OPTION, JOptionPane.QUESTION_MESSAGE);
        if (result == JOptionPane.YES_OPTION) {
            if(!nomCentreSelected.equals("---") && !nomSouscentreSelected.equals("---")){                
                try{
                    metier.supprimerRattachscentre(metier.findRattachscentreById(idRattachscentreCliked));
                    JOptionPane.showMessageDialog(this, "Rattachement du sous-centre [" +nomSouscentreSelected+" ] au centre [" + nomCentreSelected+"] supprimé avec succès !"); 
                    rattachscentre = metier.findRattachscentreD1Souscentre(nomSouscentreSelected);               
                    int i=0;
                    model.insertRow(model.getRowCount(), new Object[]{rattachscentre.getIdratscent(),i++,rattachscentre.getCentre().getArrondissement().getDepartement().getRegion().getNomreg(),rattachscentre.getCentre().getArrondissement().getDepartement().getNomdepart(),rattachscentre.getCentre().getArrondissement().getNomarr(),rattachscentre.getCentre().getNomcent(),rattachscentre.getSouscentre().getEtablissement().getArrondissement().getDepartement().getRegion().getNomreg(),rattachscentre.getSouscentre().getEtablissement().getArrondissement().getDepartement().getNomdepart(),rattachscentre.getSouscentre().getEtablissement().getArrondissement().getNomarr(),rattachscentre.getSouscentre().getNomsouscent()});           
                }catch(ObcbudgetException ex){
                    JOptionPane.showMessageDialog(this, "Impossible d'extraire le rattachement du sous-centre [" +nomSouscentreSelected+"] au sous-centre [" +nomCentreSelected+"]\n raison:"+ex.getMessage()); 
                }                        
            }
            else JOptionPane.showMessageDialog(this, "Tous les champs sont obligatoires !"); 
        }       
    }//GEN-LAST:event_jButtonSupprimerActionPerformed

    private void jComboBoxSouscentreActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBoxSouscentreActionPerformed
        //
    }//GEN-LAST:event_jComboBoxSouscentreActionPerformed

    private void jComboBoxCentreActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBoxCentreActionPerformed
        //
    }//GEN-LAST:event_jComboBoxCentreActionPerformed

    private void jComboBoxArrondissementSouscentreActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBoxArrondissementSouscentreActionPerformed
        remplirSouscentreCombobox();
    }//GEN-LAST:event_jComboBoxArrondissementSouscentreActionPerformed

    private void jComboBoxDepartementSouscentreActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBoxDepartementSouscentreActionPerformed
        remplirArrondissementSouscentreCombobox();
    }//GEN-LAST:event_jComboBoxDepartementSouscentreActionPerformed

    private void jButtonModifierActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonModifierActionPerformed
        model.setRowCount(0);//vide la jTable
        infoSaisies();
        int result = JOptionPane.showConfirmDialog(this,"Voulez-vous vraiment modifier le rattachement du sous-centre [" +nomSouscentreSelected+"] au sous-centre [" + nomCentreSelected+"] ?", "confirmation de modification",JOptionPane.YES_NO_OPTION,JOptionPane.QUESTION_MESSAGE);
        if(result == JOptionPane.YES_OPTION){
            if (!nomSouscentreSelected.equals("---") && !nomCentreSelected.equals("---")) {
                for (Souscentre souscentre : souscentres) {
                    if (souscentre.getNomsouscent().equals(nomSouscentreSelected)) {
                        souscentreSelected = souscentre;
                        break;
                    }
                }
                for (Centre centre : centres) {
                    if (centre.getNomcent().equals(nomCentreSelected)) {
                        centreSelected = centre;
                        break;
                    }
                }
                rattachscentreCliked=metier.findRattachscentreById(idRattachscentreCliked);
                rattachscentreCliked.setCentre(centreSelected);
                rattachscentreCliked.setSouscentre(souscentreSelected);
                try {
                    metier.modifierRattachscentre(rattachscentreCliked);
                    JOptionPane.showMessageDialog(this, "Rattachement du sous-centre [" +nomSouscentreSelected+"] au centre [" + nomCentreSelected+"] modifié avec succès !");
                    //videFrame();
                    int i=0;
                    rattachscentres = metier.findAllRattachscentresD1Centre(nomCentreSelected);  
                    for(Rattachscentre rattachscentre:rattachscentres){
                        model.insertRow(model.getRowCount(), new Object[]{rattachscentre.getIdratscent(),i++,rattachscentre.getCentre().getArrondissement().getDepartement().getRegion().getNomreg(),rattachscentre.getCentre().getArrondissement().getDepartement().getNomdepart(),rattachscentre.getCentre().getArrondissement().getNomarr(),rattachscentre.getCentre().getNomcent(),rattachscentre.getSouscentre().getEtablissement().getArrondissement().getDepartement().getRegion().getNomreg(),rattachscentre.getSouscentre().getEtablissement().getArrondissement().getDepartement().getNomdepart(),rattachscentre.getSouscentre().getEtablissement().getArrondissement().getNomarr(),rattachscentre.getSouscentre().getNomsouscent()});
                    }
                } catch (ObcbudgetException ex) {
                    JOptionPane.showMessageDialog(this, "Impossible d'extraire le rattachement du sous-centre [" +nomSouscentreSelected+"] au centre ["+nomCentreSelected+"]\n raison:"+ex.getMessage());
                }
            } else {
                JOptionPane.showMessageDialog(this, "Tous les champs sont obligatoires !");
            }
        }  
    }//GEN-LAST:event_jButtonModifierActionPerformed

    private void jComboBoxRegionSouscentreActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBoxRegionSouscentreActionPerformed
        remplirDepartementSouscentreCombobox();
    }//GEN-LAST:event_jComboBoxRegionSouscentreActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;

                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(VueRattachSouscentre.class
                        .getName()).log(java.util.logging.Level.SEVERE, null, ex);

        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(VueRattachSouscentre.class
                        .getName()).log(java.util.logging.Level.SEVERE, null, ex);

        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(VueRattachSouscentre.class
                        .getName()).log(java.util.logging.Level.SEVERE, null, ex);

        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(VueRattachSouscentre.class
                        .getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }     


        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new VueRattachSouscentre().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.JButton jButtonAnnuler;
    private javax.swing.JButton jButtonCreer;
    private javax.swing.JButton jButtonFermer;
    private javax.swing.JButton jButtonModifier;
    private javax.swing.JButton jButtonRechercher;
    private javax.swing.JButton jButtonSupprimer;
    private javax.swing.JComboBox<String> jComboBoxArrondissementCentre;
    private javax.swing.JComboBox<String> jComboBoxArrondissementSouscentre;
    private javax.swing.JComboBox<String> jComboBoxCentre;
    private javax.swing.JComboBox<String> jComboBoxDepartementCentre;
    private javax.swing.JComboBox<String> jComboBoxDepartementSouscentre;
    private javax.swing.JComboBox<String> jComboBoxRegionCentre;
    private javax.swing.JComboBox<String> jComboBoxRegionSouscentre;
    private javax.swing.JComboBox<String> jComboBoxSouscentre;
    private javax.swing.JLabel jLabeNomSouscentre;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabelArrondissementCentre;
    private javax.swing.JLabel jLabelArrondissementSouscentre;
    private javax.swing.JLabel jLabelCentre;
    private javax.swing.JLabel jLabelDepartementSouscentre;
    private javax.swing.JLabel jLabelNomCentre;
    private javax.swing.JLabel jLabelRegionCentre;
    private javax.swing.JLabel jLabelRegionSouscentre;
    private javax.swing.JPanel jPanelEtablissement;
    private javax.swing.JPanel jPanelSouscentre;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTable1;
    // End of variables declaration//GEN-END:variables

    // variables d'instance
    private IMetier metier = null;
    private List<Region> regions = null;
    private String[] regionsCentreCombo = null;
    private String[] regionsSouscentreCombo = null;
    private List<Departement> departements = null;
    private List<Arrondissement> arrondissements = null;
    private String[] departementsCentreCombo = null;
    private String[] departementsSouscentreCombo = null;
    private String[] arrondissementsCentreCombo = null;
    private String[] arrondissementsSouscentreCombo = null;
    private String[] centresCombo = null;
    private String[] souscentresCombo = null;
    private List<Centre> centres = null;
    private Departement departementCentreSelected = null;
    private Arrondissement arrondissementCentreSelected = null;
    private Departement departementSouscentreSelected = null;
    private Arrondissement arrondissementSouscentreSelected = null;
    private Centre centreSelected = null;
    private String nomCentreSelected = "";
    private String nomRegionCentreSelected = "";
    private String nomRegionSouscentreSelected = "";
    private String nomDepartementCentreSelected = "";
    private String nomArrondissementCentreSelected = "";
    private String nomDepartementSouscentreSelected = "";
    private String nomArrondissementSouscentreSelected = "";
    private List<Rattachscentre> rattachscentres = null;
    private Rattachscentre rattachscentre = null;
    private List<Souscentre> souscentres = null;
    private Souscentre souscentreSelected=null;
    private String nomSouscentreSelected = "";
    private Centre centre=null;
    private int idRattachscentreCliked=0;
    private Rattachscentre rattachscentreCliked = null;

    private void doMyInit() {
        // init contexte
        // instanciation couche [metier]
        ApplicationContext ctx = new ClassPathXmlApplicationContext("spring-config-metier.xml");
        metier = (IMetier) ctx.getBean("metier");
        regions = metier.findAllRegions();
        centres = metier.findAllCentres();
        souscentres=metier.findAllSouscentres();

        //on remplit la combobox des régions du centre
        regionsCentreCombo = new String[regions.size() + 1];
        regionsCentreCombo[0] = "---";
        int i = 1;
        for (Region region : regions) {
            regionsCentreCombo[i++] = region.getNomreg();
        }
        jComboBoxRegionCentre.setModel(new DefaultComboBoxModel(regionsCentreCombo));
        
        //on remplit la combobox des régions du sous-centre
        regionsSouscentreCombo = new String[regions.size() + 1];
        regionsSouscentreCombo[0] = "---";
        int j = 1;
        for (Region region : regions) {
            regionsSouscentreCombo[j++] = region.getNomreg();
        }
        jComboBoxRegionSouscentre.setModel(new DefaultComboBoxModel(regionsSouscentreCombo));

        remplirDepartementCentreCombobox();
        remplirDepartementSouscentreCombobox();
        remplirArrondissementSouscentreCombobox();
        remplirArrondissementCentreCombobox();
        remplirCentreCombobox();
        remplirSouscentreCombobox();
    }

    private void infoSaisies() {
        nomRegionCentreSelected = (String) jComboBoxRegionCentre.getSelectedItem();
        nomDepartementCentreSelected = (String) jComboBoxDepartementCentre.getSelectedItem();
        nomArrondissementCentreSelected = (String) jComboBoxArrondissementCentre.getSelectedItem();
        nomRegionSouscentreSelected = (String) jComboBoxRegionSouscentre.getSelectedItem();
        nomDepartementSouscentreSelected = (String) jComboBoxDepartementSouscentre.getSelectedItem();
        nomArrondissementSouscentreSelected = (String) jComboBoxArrondissementSouscentre.getSelectedItem();
        nomCentreSelected = (String) jComboBoxCentre.getSelectedItem();
        nomSouscentreSelected = (String) jComboBoxSouscentre.getSelectedItem();       
    }

    private void videFrame() {
        jComboBoxRegionCentre.setSelectedIndex(0);
        jComboBoxDepartementCentre.setSelectedIndex(0);
        jComboBoxArrondissementCentre.setSelectedIndex(0);
        jComboBoxRegionSouscentre.setSelectedIndex(0);
        jComboBoxDepartementSouscentre.setSelectedIndex(0);
        jComboBoxArrondissementSouscentre.setSelectedIndex(0);
        jComboBoxCentre.setSelectedIndex(0);
        jComboBoxSouscentre.setSelectedIndex(0);
        model.setRowCount(0);//vide la jTable       

    }

    private void remplirDepartementCentreCombobox() {
        nomRegionCentreSelected = (String) jComboBoxRegionCentre.getSelectedItem();
        departements = metier.findAllDepartementsD1Region(nomRegionCentreSelected);
        //on remplit la combobox des départements
        departementsCentreCombo = new String[departements.size() + 1];       
        departementsCentreCombo[0] = "---";
        int i = 1;
        for (Departement departement : departements) {
            departementsCentreCombo[i++] = departement.getNomdepart();
        }
        jComboBoxDepartementCentre.setModel(new DefaultComboBoxModel(departementsCentreCombo));
    }

    private void remplirDepartementSouscentreCombobox() {
        nomRegionSouscentreSelected = (String) jComboBoxRegionSouscentre.getSelectedItem();
        departements = metier.findAllDepartementsD1Region(nomRegionSouscentreSelected);
        //on remplit la combobox des départements
        departementsSouscentreCombo = new String[departements.size() + 1];
        departementsSouscentreCombo[0] = "---";
        int i = 1;
        for (Departement departement : departements) {
            departementsSouscentreCombo[i++] = departement.getNomdepart();
        }
        jComboBoxDepartementSouscentre.setModel(new DefaultComboBoxModel(departementsSouscentreCombo));
    }
    
    private void remplirArrondissementSouscentreCombobox() {
        nomDepartementSouscentreSelected = (String) jComboBoxDepartementSouscentre.getSelectedItem();
        arrondissements = metier.findAllArrondissementsD1Departement(nomDepartementSouscentreSelected);
        //on remplit la combobox des arrondissements du sous-centre
        arrondissementsSouscentreCombo = new String[arrondissements.size() + 1];
        arrondissementsSouscentreCombo[0] = "---";
        int i = 1;
        for (Arrondissement arrondissement : arrondissements) {
            arrondissementsSouscentreCombo[i++] = arrondissement.getNomarr();
        }
        jComboBoxArrondissementSouscentre.setModel(new DefaultComboBoxModel(arrondissementsSouscentreCombo));
    }
    
    private void remplirArrondissementCentreCombobox() {
        nomDepartementCentreSelected = (String) jComboBoxDepartementCentre.getSelectedItem();
        arrondissements = metier.findAllArrondissementsD1Departement(nomDepartementCentreSelected);
        //on remplit la combobox des arrondissements
        arrondissementsCentreCombo = new String[arrondissements.size() + 1];
        arrondissementsCentreCombo[0] = "---";
        int i = 1;
        for (Arrondissement arrondissement : arrondissements) {
            arrondissementsCentreCombo[i++] = arrondissement.getNomarr();
        }
        jComboBoxArrondissementCentre.setModel(new DefaultComboBoxModel(arrondissementsCentreCombo));
    }

    private void remplirCentreCombobox() {
        nomArrondissementCentreSelected = (String) jComboBoxArrondissementCentre.getSelectedItem();
        centres = metier.findAllCentresD1Arrondissement(nomArrondissementCentreSelected);
        //on remplit la combobox des centres
        centresCombo = new String[centres.size() + 1];
        centresCombo[0] = "---";
        int i = 1;
        for (Centre centre : centres) {
            centresCombo[i++] = centre.getNomcent();
        }
        jComboBoxCentre.setModel(new DefaultComboBoxModel(centresCombo));
    }

    private void remplirSouscentreCombobox() {
        nomArrondissementSouscentreSelected = (String) jComboBoxArrondissementSouscentre.getSelectedItem();
        souscentres = metier.findAllSouscentresD1Arrondissement(nomArrondissementSouscentreSelected);
        //on remplit la combobox des sous-centres
        souscentresCombo = new String[souscentres.size() + 1];
        souscentresCombo[0] = "---";
        int i = 1;
        for (Souscentre souscentre : souscentres) {
            souscentresCombo[i++] = souscentre.getNomsouscent();
        }
        jComboBoxSouscentre.setModel(new DefaultComboBoxModel(souscentresCombo));
    }
}
