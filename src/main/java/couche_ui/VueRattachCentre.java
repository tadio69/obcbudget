package couche_ui;

import couche_jpa.Arrondissement;
import couche_jpa.Bureau;
import couche_jpa.Centre;
import couche_jpa.Centrebilletage;
import couche_jpa.Departement;
import couche_jpa.Etablissement;
import couche_jpa.Grandcentre;
import couche_jpa.Personnel;
import couche_jpa.Rattachcentre;
import couche_jpa.Region;
import couche_jpa.Secteurcouv;
import couche_jpa.Session;
import couche_metier.IMetier;
import exception.ObcbudgetException;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;
import javax.swing.DefaultComboBoxModel;
import javax.swing.DefaultListModel;
import javax.swing.JList;
import javax.swing.JOptionPane;
import javax.swing.ListModel;
import javax.swing.table.DefaultTableModel;
import net.sf.jasperreports.engine.JRDataSource;
import net.sf.jasperreports.engine.JRException;
import net.sf.jasperreports.engine.JasperCompileManager;
import net.sf.jasperreports.engine.JasperFillManager;
import net.sf.jasperreports.engine.JasperPrint;
import net.sf.jasperreports.engine.JasperReport;
import net.sf.jasperreports.engine.data.JRBeanCollectionDataSource;
import net.sf.jasperreports.view.JasperViewer;
import org.springframework.context.ApplicationContext;
import org.springframework.context.support.ClassPathXmlApplicationContext;

public class VueRattachCentre extends javax.swing.JFrame {

    DefaultTableModel model;

    public VueRattachCentre() {
        initComponents();
        model = (DefaultTableModel) jTable1.getModel();
        doMyInit();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroup1 = new javax.swing.ButtonGroup();
        jLabel1 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jButtonCreer = new javax.swing.JButton();
        jButtonRechercher = new javax.swing.JButton();
        jButtonSupprimer = new javax.swing.JButton();
        jButtonAnnuler = new javax.swing.JButton();
        jButtonFermer = new javax.swing.JButton();
        jPanelEtablissement = new javax.swing.JPanel();
        jLabeNomCentre = new javax.swing.JLabel();
        jComboBoxCentre = new javax.swing.JComboBox<>();
        jLabelArrondissement = new javax.swing.JLabel();
        jComboBoxArrondissement = new javax.swing.JComboBox<>();
        jLabelDepartement = new javax.swing.JLabel();
        jComboBoxDepartement = new javax.swing.JComboBox<>();
        jPanelSouscentre = new javax.swing.JPanel();
        jLabelNomGrandcentre = new javax.swing.JLabel();
        jComboBoxGrandcentre = new javax.swing.JComboBox<>();
        jLabelNiveau = new javax.swing.JLabel();
        jTextFieldNiveau = new javax.swing.JTextField();
        jLabelType = new javax.swing.JLabel();
        jTextFieldType = new javax.swing.JTextField();
        jLabelFamille = new javax.swing.JLabel();
        jTextFieldFamille = new javax.swing.JTextField();
        jButtonModifier = new javax.swing.JButton();
        jLabelRégion = new javax.swing.JLabel();
        jComboBoxRegion = new javax.swing.JComboBox<>();

        setDefaultCloseOperation(javax.swing.WindowConstants.DO_NOTHING_ON_CLOSE);
        setResizable(false);

        jLabel1.setFont(new java.awt.Font("Arial", 1, 36)); // NOI18N
        jLabel1.setText("RATTACHEMENT DES CENTRES AUX GRANDS CENTRES D'EXAMEN");

        jTable1.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Id", "N° Ordre", "Région", "Grand centre", "Niveau", "Type", "Famille séries", "Département du centre", "Arrondissement du centre", "Centre"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jTable1.setShowHorizontalLines(true);
        jTable1.setShowVerticalLines(true);
        jTable1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTable1MouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(jTable1);

        jButtonCreer.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        jButtonCreer.setText("Créer");
        jButtonCreer.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonCreerActionPerformed(evt);
            }
        });

        jButtonRechercher.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        jButtonRechercher.setText("Rechercher");
        jButtonRechercher.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonRechercherActionPerformed(evt);
            }
        });

        jButtonSupprimer.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        jButtonSupprimer.setText("Supprimer");
        jButtonSupprimer.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonSupprimerActionPerformed(evt);
            }
        });

        jButtonAnnuler.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        jButtonAnnuler.setText("Annuler");
        jButtonAnnuler.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonAnnulerActionPerformed(evt);
            }
        });

        jButtonFermer.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        jButtonFermer.setText("Fermer");
        jButtonFermer.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonFermerActionPerformed(evt);
            }
        });

        jPanelEtablissement.setBackground(new java.awt.Color(255, 204, 255));
        jPanelEtablissement.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Centre", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Arial", 1, 14), new java.awt.Color(51, 0, 204))); // NOI18N

        jLabeNomCentre.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        jLabeNomCentre.setText("Centre :");

        jComboBoxCentre.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        jComboBoxCentre.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBoxCentreActionPerformed(evt);
            }
        });

        jLabelArrondissement.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        jLabelArrondissement.setText("Arrondissement :");

        jComboBoxArrondissement.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        jComboBoxArrondissement.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBoxArrondissementActionPerformed(evt);
            }
        });

        jLabelDepartement.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        jLabelDepartement.setText("Département :");

        jComboBoxDepartement.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        jComboBoxDepartement.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBoxDepartementActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanelEtablissementLayout = new javax.swing.GroupLayout(jPanelEtablissement);
        jPanelEtablissement.setLayout(jPanelEtablissementLayout);
        jPanelEtablissementLayout.setHorizontalGroup(
            jPanelEtablissementLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanelEtablissementLayout.createSequentialGroup()
                .addContainerGap(33, Short.MAX_VALUE)
                .addGroup(jPanelEtablissementLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabelDepartement, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabelArrondissement, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabeNomCentre, javax.swing.GroupLayout.Alignment.TRAILING))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanelEtablissementLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jComboBoxDepartement, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jComboBoxArrondissement, 0, 342, Short.MAX_VALUE)
                    .addComponent(jComboBoxCentre, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(20, 20, 20))
        );
        jPanelEtablissementLayout.setVerticalGroup(
            jPanelEtablissementLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelEtablissementLayout.createSequentialGroup()
                .addGap(16, 16, 16)
                .addGroup(jPanelEtablissementLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabelDepartement, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jComboBoxDepartement, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanelEtablissementLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabelArrondissement, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jComboBoxArrondissement, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanelEtablissementLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabeNomCentre, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jComboBoxCentre, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanelSouscentre.setBackground(new java.awt.Color(153, 255, 153));
        jPanelSouscentre.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Grand centre", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Arial", 1, 14), new java.awt.Color(51, 0, 204))); // NOI18N

        jLabelNomGrandcentre.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        jLabelNomGrandcentre.setText("Grand centre :");

        jComboBoxGrandcentre.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        jComboBoxGrandcentre.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBoxGrandcentreActionPerformed(evt);
            }
        });

        jLabelNiveau.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        jLabelNiveau.setText("Niveau :");

        jTextFieldNiveau.setEditable(false);
        jTextFieldNiveau.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        jTextFieldNiveau.setEnabled(false);

        jLabelType.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        jLabelType.setText("Type :");

        jTextFieldType.setEditable(false);
        jTextFieldType.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        jTextFieldType.setEnabled(false);
        jTextFieldType.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextFieldTypeActionPerformed(evt);
            }
        });

        jLabelFamille.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        jLabelFamille.setText("Famille de séries :");

        jTextFieldFamille.setEditable(false);
        jTextFieldFamille.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        jTextFieldFamille.setEnabled(false);

        javax.swing.GroupLayout jPanelSouscentreLayout = new javax.swing.GroupLayout(jPanelSouscentre);
        jPanelSouscentre.setLayout(jPanelSouscentreLayout);
        jPanelSouscentreLayout.setHorizontalGroup(
            jPanelSouscentreLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelSouscentreLayout.createSequentialGroup()
                .addGroup(jPanelSouscentreLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanelSouscentreLayout.createSequentialGroup()
                        .addGap(48, 48, 48)
                        .addComponent(jLabelNomGrandcentre)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jComboBoxGrandcentre, javax.swing.GroupLayout.PREFERRED_SIZE, 342, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanelSouscentreLayout.createSequentialGroup()
                        .addGap(29, 29, 29)
                        .addComponent(jLabelNiveau)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jTextFieldNiveau, javax.swing.GroupLayout.PREFERRED_SIZE, 146, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(60, 60, 60)
                        .addComponent(jLabelType)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jTextFieldType, javax.swing.GroupLayout.PREFERRED_SIZE, 146, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanelSouscentreLayout.createSequentialGroup()
                        .addGap(71, 71, 71)
                        .addComponent(jLabelFamille)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jTextFieldFamille, javax.swing.GroupLayout.PREFERRED_SIZE, 219, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(73, 73, 73)))
                .addContainerGap(21, Short.MAX_VALUE))
        );
        jPanelSouscentreLayout.setVerticalGroup(
            jPanelSouscentreLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelSouscentreLayout.createSequentialGroup()
                .addGap(22, 22, 22)
                .addGroup(jPanelSouscentreLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabelNomGrandcentre, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jComboBoxGrandcentre, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(21, 21, 21)
                .addGroup(jPanelSouscentreLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabelNiveau, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabelType, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jTextFieldNiveau, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jTextFieldType, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(21, 21, 21)
                .addGroup(jPanelSouscentreLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabelFamille, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jTextFieldFamille, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(20, Short.MAX_VALUE))
        );

        jButtonModifier.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        jButtonModifier.setText("Modifier");
        jButtonModifier.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonModifierActionPerformed(evt);
            }
        });

        jLabelRégion.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        jLabelRégion.setText("Région :");

        jComboBoxRegion.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        jComboBoxRegion.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBoxRegionActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1)
                .addContainerGap())
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jPanelSouscentre, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jPanelEtablissement, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(50, 50, 50))
            .addGroup(layout.createSequentialGroup()
                .addGap(39, 39, 39)
                .addComponent(jLabel1)
                .addContainerGap(37, Short.MAX_VALUE))
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(460, 460, 460)
                        .addComponent(jLabelRégion)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jComboBoxRegion, javax.swing.GroupLayout.PREFERRED_SIZE, 342, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(322, 322, 322)
                        .addComponent(jButtonCreer)
                        .addGap(18, 18, 18)
                        .addComponent(jButtonRechercher)
                        .addGap(21, 21, 21)
                        .addComponent(jButtonModifier)
                        .addGap(21, 21, 21)
                        .addComponent(jButtonSupprimer)
                        .addGap(18, 18, 18)
                        .addComponent(jButtonAnnuler)
                        .addGap(18, 18, 18)
                        .addComponent(jButtonFermer)))
                .addGap(0, 0, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(23, 23, 23)
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(29, 29, 29)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabelRégion, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jComboBoxRegion, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jPanelSouscentre, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanelEtablissement, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(18, 21, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jButtonModifier, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jButtonCreer, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jButtonRechercher, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jButtonSupprimer, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jButtonAnnuler, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jButtonFermer, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 172, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void jButtonFermerActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonFermerActionPerformed
        dispose();
    }//GEN-LAST:event_jButtonFermerActionPerformed

    private void jButtonAnnulerActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonAnnulerActionPerformed
        videFrame();
    }//GEN-LAST:event_jButtonAnnulerActionPerformed

    private void jComboBoxRegionActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBoxRegionActionPerformed
        remplirDepartementCombobox();
        remplirGrandcentreCombobox();
    }//GEN-LAST:event_jComboBoxRegionActionPerformed

    private void jButtonCreerActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonCreerActionPerformed
        model.setRowCount(0);//vide la jTable
        infoSaisies();
        if (!nomGrandcentreSelected.equals("---") && !nomCentreDeliberationSelected.equals("---")) {
            for (Grandcentre grandcentre : grandcentres) {
                if (grandcentre.getNom().equals(nomGrandcentreSelected)) {
                    grandcentreSelected = grandcentre;
                    break;
                }
            }
            for (Centre centre : centresDeliberation) {
                if (centre.getNomcent().equals(nomCentreDeliberationSelected)) {
                    centreDeliberationSelected = centre;
                    break;
                }
            }
            
            try {
                metier.creerRattachcentre(new Rattachcentre(grandcentreSelected,centreDeliberationSelected));
                JOptionPane.showMessageDialog(this, "Rattachement effectué avec succès !");
                //videFrame();
                int i = 1;
                rattachcentres = metier.findAllRattachcentresD1Grandcentre(nomGrandcentreSelected);  
                for(Rattachcentre rattachcentre:rattachcentres){
                    model.insertRow(model.getRowCount(), new Object[]{rattachcentre.getIdratcent(),i++,rattachcentre.getGrandcentre().getRegion().getNomreg(),rattachcentre.getGrandcentre().getNom(),rattachcentre.getGrandcentre().getNiveau(),rattachcentre.getGrandcentre().getType(),rattachcentre.getGrandcentre().getFamille().getTitre(),rattachcentre.getCentre().getArrondissement().getDepartement().getNomdepart(),rattachcentre.getCentre().getArrondissement().getNomarr(),rattachcentre.getCentre().getNomcent()});
                }               
            } catch (ObcbudgetException ex) {
                JOptionPane.showMessageDialog(this, "Impossible d'extraire les centres rattachés au grand centre [" + nomGrandcentreSelected + "] \n raison:" + ex.getMessage());
            }
        } else {
            JOptionPane.showMessageDialog(this, "Tous les champs sont obligatoires !");
        }
        rattachcentres.clear();
    }//GEN-LAST:event_jButtonCreerActionPerformed

    private void jButtonRechercherActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonRechercherActionPerformed
        model.setRowCount(0);//vide la jTable
        infoSaisies();       
        if (!nomGrandcentreSelected.equals("---")) {
            try{
                int i = 1;
                rattachcentres = metier.findAllRattachcentresD1Grandcentre(nomGrandcentreSelected);  
                for(Rattachcentre rattachcentre:rattachcentres){
                    model.insertRow(model.getRowCount(), new Object[]{rattachcentre.getIdratcent(),i++,rattachcentre.getGrandcentre().getRegion().getNomreg(),rattachcentre.getGrandcentre().getNom(),rattachcentre.getGrandcentre().getNiveau(),rattachcentre.getGrandcentre().getType(),rattachcentre.getGrandcentre().getFamille().getTitre(),rattachcentre.getCentre().getArrondissement().getDepartement().getNomdepart(),rattachcentre.getCentre().getArrondissement().getNomarr(),rattachcentre.getCentre().getNomcent()});
                }   
            }catch (ObcbudgetException ex) {
                    JOptionPane.showMessageDialog(this, "Impossible d'extraire les centres rattachés au grand centre [" + nomGrandcentreSelected + "] \n raison:" + ex.getMessage());
                }
        }
        else JOptionPane.showMessageDialog(this, "Le champ nom grand centre est obligatoire. !");
        rattachcentres.clear();
    }//GEN-LAST:event_jButtonRechercherActionPerformed

    private void jTable1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTable1MouseClicked
         //remplit les champs
        int ligne = jTable1.getSelectedRow();
        idRattachcentreCliked=(int) model.getValueAt(ligne, 0);
        jComboBoxRegion.setSelectedItem((String) model.getValueAt(ligne, 2));
        jComboBoxGrandcentre.setSelectedItem((String) model.getValueAt(ligne, 3));
        jTextFieldNiveau.setText((String) model.getValueAt(ligne, 4));
        jTextFieldType.setText((String) model.getValueAt(ligne, 5));
        jTextFieldFamille.setText((String) model.getValueAt(ligne, 6));  
        jComboBoxDepartement.setSelectedItem((String) model.getValueAt(ligne, 7));
        jComboBoxArrondissement.setSelectedItem((String) model.getValueAt(ligne, 8));        
        jComboBoxCentre.setSelectedItem((String) model.getValueAt(ligne, 9));
    }//GEN-LAST:event_jTable1MouseClicked

    private void jButtonSupprimerActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonSupprimerActionPerformed
        model.setRowCount(0);//vide la jTable
        infoSaisies();
        int result = JOptionPane.showConfirmDialog(this, "Voulez-vous vraiment supprimer le rattachement du centre de délibération [" +nomCentreDeliberationSelected+" ] au grand centre [" + nomGrandcentreSelected+"] ?", "confirmation de suppression", JOptionPane.YES_NO_OPTION, JOptionPane.QUESTION_MESSAGE);
        if (result == JOptionPane.YES_OPTION) {
            if(!nomGrandcentreSelected.equals("---") && !nomCentreDeliberationSelected.equals("---")){                
                try{
                    metier.supprimerRattachcentre(metier.findRattachcentreById(idRattachcentreCliked));
                    JOptionPane.showMessageDialog(this, "Rattachement du centre de délibération [" +nomCentreDeliberationSelected+" ] au grand centre [" + nomGrandcentreSelected+"] supprimé avec succès !"); 
                    rattachcentre = metier.findRattachcentreD1Centre(nomCentreDeliberationSelected);               
                    int i=0;
                    model.insertRow(model.getRowCount(), new Object[]{rattachcentre.getIdratcent(),i++,rattachcentre.getGrandcentre().getRegion().getNomreg(),rattachcentre.getGrandcentre().getNom(),rattachcentre.getGrandcentre().getNiveau(),rattachcentre.getGrandcentre().getType(),rattachcentre.getGrandcentre().getFamille().getTitre(),rattachcentre.getCentre().getArrondissement().getDepartement().getNomdepart(),rattachcentre.getCentre().getArrondissement().getNomarr(),rattachcentre.getCentre().getNomcent()});                
                }catch(ObcbudgetException ex){
                    JOptionPane.showMessageDialog(this, "Impossible d'extraire le rattachement du centre [" +nomCentreDeliberationSelected+"] au grand centre [" +nomGrandcentreSelected+"]\n raison:"+ex.getMessage()); 
                }                        
            }
            else JOptionPane.showMessageDialog(this, "Tous les champs sont obligatoires !"); 
        } 
    }//GEN-LAST:event_jButtonSupprimerActionPerformed

    private void jComboBoxCentreActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBoxCentreActionPerformed
        //
    }//GEN-LAST:event_jComboBoxCentreActionPerformed

    private void jComboBoxGrandcentreActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBoxGrandcentreActionPerformed
        /*
        nomGrandcentreSelected = (String) jComboBoxGrandcentre.getSelectedItem();
        grandcentre=metier.findGrandcentreById(nomGrandcentreSelected);
        jTextFieldNiveau.setText(famgrandcentre.getGrandcentre().getNiveau());
        jTextFieldType.setText(famgrandcentre.getGrandcentre().getType());
        jTextFieldFamille.setText(famgrandcentre.getFamille().getTitre());   
        */
    }//GEN-LAST:event_jComboBoxGrandcentreActionPerformed

    private void jComboBoxArrondissementActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBoxArrondissementActionPerformed
        remplirCentreCombobox();
    }//GEN-LAST:event_jComboBoxArrondissementActionPerformed

    private void jComboBoxDepartementActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBoxDepartementActionPerformed
        remplirArrondissementCombobox();
    }//GEN-LAST:event_jComboBoxDepartementActionPerformed

    private void jButtonModifierActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonModifierActionPerformed
        model.setRowCount(0);//vide la jTable
        infoSaisies();
        int result = JOptionPane.showConfirmDialog(this,"Voulez-vous vraiment modifier le rattachement du centre de délibération [" +nomCentreDeliberationSelected+"] au grand centre [" + nomGrandcentreSelected+"] ?", "confirmation de modification",JOptionPane.YES_NO_OPTION,JOptionPane.QUESTION_MESSAGE);
        if(result == JOptionPane.YES_OPTION){
            if (!nomGrandcentreSelected.equals("---") && !nomCentreDeliberationSelected.equals("---")) {
                for (Grandcentre grandcentre : grandcentres) {
                    if (grandcentre.getNom().equals(nomGrandcentreSelected)) {
                        grandcentreSelected = grandcentre;
                        break;
                    }
                }
                for (Centre centre : centresDeliberation) {
                    if (centre.getNomcent().equals(nomCentreDeliberationSelected)) {
                        centreDeliberationSelected = centre;
                        break;
                    }
                }
                rattachcentreCliked=metier.findRattachcentreById(idRattachcentreCliked);
                rattachcentreCliked.setGrandcentre(grandcentreSelected);
                rattachcentreCliked.setCentre(centreDeliberationSelected);
                try {
                    metier.modifierRattachcentre(rattachcentreCliked);
                    JOptionPane.showMessageDialog(this, "Rattachement du centre de délibération [" +nomCentreDeliberationSelected+"] au grand centre [" + nomGrandcentreSelected+"] modifié avec succès !");
                    //videFrame();
                    rattachcentre = metier.findRattachcentreD1Centre(nomCentreDeliberationSelected);               
                    int i=0;
                    model.insertRow(model.getRowCount(), new Object[]{rattachcentre.getIdratcent(),i++,rattachcentre.getGrandcentre().getRegion().getNomreg(),rattachcentre.getGrandcentre().getNom(),rattachcentre.getGrandcentre().getNiveau(),rattachcentre.getGrandcentre().getType(),rattachcentre.getGrandcentre().getFamille().getTitre(),rattachcentre.getCentre().getArrondissement().getDepartement().getNomdepart(),rattachcentre.getCentre().getArrondissement().getNomarr(),rattachcentre.getCentre().getNomcent()});                
                } catch (ObcbudgetException ex) {
                    JOptionPane.showMessageDialog(this, "Impossible d'extraire le rattachement du centre [" +nomCentreDeliberationSelected+"] au grand centre ["+nomGrandcentreSelected+"]\n raison:"+ex.getMessage());
                }
            } else {
                JOptionPane.showMessageDialog(this, "Tous les champs sont obligatoires !");
            }
        }
    }//GEN-LAST:event_jButtonModifierActionPerformed

    private void jTextFieldTypeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextFieldTypeActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextFieldTypeActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;

                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(VueRattachCentre.class
                        .getName()).log(java.util.logging.Level.SEVERE, null, ex);

        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(VueRattachCentre.class
                        .getName()).log(java.util.logging.Level.SEVERE, null, ex);

        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(VueRattachCentre.class
                        .getName()).log(java.util.logging.Level.SEVERE, null, ex);

        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(VueRattachCentre.class
                        .getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }     


        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new VueRattachCentre().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.JButton jButtonAnnuler;
    private javax.swing.JButton jButtonCreer;
    private javax.swing.JButton jButtonFermer;
    private javax.swing.JButton jButtonModifier;
    private javax.swing.JButton jButtonRechercher;
    private javax.swing.JButton jButtonSupprimer;
    private javax.swing.JComboBox<String> jComboBoxArrondissement;
    private javax.swing.JComboBox<String> jComboBoxCentre;
    private javax.swing.JComboBox<String> jComboBoxDepartement;
    private javax.swing.JComboBox<String> jComboBoxGrandcentre;
    private javax.swing.JComboBox<String> jComboBoxRegion;
    private javax.swing.JLabel jLabeNomCentre;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabelArrondissement;
    private javax.swing.JLabel jLabelDepartement;
    private javax.swing.JLabel jLabelFamille;
    private javax.swing.JLabel jLabelNiveau;
    private javax.swing.JLabel jLabelNomGrandcentre;
    private javax.swing.JLabel jLabelRégion;
    private javax.swing.JLabel jLabelType;
    private javax.swing.JPanel jPanelEtablissement;
    private javax.swing.JPanel jPanelSouscentre;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTable1;
    private javax.swing.JTextField jTextFieldFamille;
    private javax.swing.JTextField jTextFieldNiveau;
    private javax.swing.JTextField jTextFieldType;
    // End of variables declaration//GEN-END:variables

    // variables d'instance
    private IMetier metier = null;
    private List<Region> regions = null;
    private String[] regionsCombo = null;
    private List<Departement> departements = null;
    private List<Arrondissement> arrondissements = null;
    private String[] departementsCombo = null;
    private String[] arrondissementsCombo = null;
    private String[] grandcentresCombo = null;
    private String[] centresDeliberationCombo = null;
    private List<Grandcentre> grandcentres = null;
    private Departement departementSelected = null;
    private Arrondissement arrondissementSelected = null;
    private Grandcentre grandcentreSelected = null;
    private String nomGrandcentreSelected = "";
    private String nomRegionSelected = "";
    private String nomDepartementSelected = "";
    private String nomArrondissementSelected = "";
    private List<Centre> centresDeliberation = null;
    private Centre centreDeliberationSelected=null;
    private String nomCentreDeliberationSelected = "";
    private Grandcentre grandcentre=null;
    private int idRattachcentreCliked=0;
    private Rattachcentre rattachcentreCliked = null;
    private Rattachcentre rattachcentre = null;
    private List<Rattachcentre> rattachcentres = null;
    
    private void doMyInit() {
        // init contexte
        // instanciation couche [metier]
        ApplicationContext ctx = new ClassPathXmlApplicationContext("spring-config-metier.xml");
        metier = (IMetier) ctx.getBean("metier");
        regions = metier.findAllRegions();

        //on remplit la combobox des régions
        regionsCombo = new String[regions.size() + 1];
        regionsCombo[0] = "---";
        int i = 1;
        for (Region region : regions) {
            regionsCombo[i++] = region.getNomreg();
        }
        jComboBoxRegion.setModel(new DefaultComboBoxModel(regionsCombo));

        remplirDepartementCombobox();
        remplirArrondissementCombobox();
        remplirGrandcentreCombobox();
        remplirCentreCombobox();
    }

    private void infoSaisies() {
        nomRegionSelected = (String) jComboBoxRegion.getSelectedItem();
        nomDepartementSelected = (String) jComboBoxDepartement.getSelectedItem();
        nomArrondissementSelected = (String) jComboBoxArrondissement.getSelectedItem();
        nomGrandcentreSelected = (String) jComboBoxGrandcentre.getSelectedItem();
        nomCentreDeliberationSelected = (String) jComboBoxCentre.getSelectedItem();       
    }

    private void videFrame() {
        jComboBoxRegion.setSelectedIndex(0);
        jComboBoxDepartement.setSelectedIndex(0);
        jComboBoxArrondissement.setSelectedIndex(0);
        jComboBoxGrandcentre.setSelectedIndex(0);
        jComboBoxCentre.setSelectedIndex(0);
        jTextFieldFamille.setText("");
        jTextFieldNiveau.setText("");
        jTextFieldType.setText("");
        model.setRowCount(0);//vide la jTable       

    }

    private void remplirDepartementCombobox() {
        nomRegionSelected = (String) jComboBoxRegion.getSelectedItem();
        departements = metier.findAllDepartementsD1Region(nomRegionSelected);
        //on remplit la combobox des départements
        departementsCombo = new String[departements.size() + 1];
        departementsCombo[0] = "---";
        int j= 1;
        for (Departement departement : departements) {
            departementsCombo[j++] = departement.getNomdepart();
        }
        jComboBoxDepartement.setModel(new DefaultComboBoxModel(departementsCombo));
    }

    private void remplirArrondissementCombobox() {
        nomDepartementSelected = (String) jComboBoxDepartement.getSelectedItem();
        arrondissements = metier.findAllArrondissementsD1Departement(nomDepartementSelected);
        //on remplit la combobox des arrondissements
        arrondissementsCombo = new String[arrondissements.size() + 1];
        arrondissementsCombo[0] = "---";
        int i = 1;
        for (Arrondissement arrondissement : arrondissements) {
            arrondissementsCombo[i++] = arrondissement.getNomarr();
        }
        jComboBoxArrondissement.setModel(new DefaultComboBoxModel(arrondissementsCombo));
    }

    private void remplirGrandcentreCombobox() {
        nomRegionSelected = (String) jComboBoxRegion.getSelectedItem();
        grandcentres = metier.findAllGrandcentresD1Region(nomRegionSelected);
        //on remplit la combobox des grands centres
        grandcentresCombo = new String[grandcentres.size() + 1];
        grandcentresCombo[0] = "---";
        int i = 1;
        for (Grandcentre grandcentre : grandcentres) {
            grandcentresCombo[i++] = grandcentre.getNom();
        }
        jComboBoxGrandcentre.setModel(new DefaultComboBoxModel(grandcentresCombo));
    }

    private void remplirCentreCombobox() {
        nomArrondissementSelected = (String) jComboBoxArrondissement.getSelectedItem();
        centresDeliberation = metier.findAllCentresD1Arrondissement(nomArrondissementSelected);
        //on remplit la combobox des centres de delibération
        centresDeliberationCombo = new String[centresDeliberation.size() + 1];
        centresDeliberationCombo[0] = "---";
        int i = 1;
        for (Centre centre : centresDeliberation) {
            centresDeliberationCombo[i++] = centre.getNomcent();
        }
        jComboBoxCentre.setModel(new DefaultComboBoxModel(centresDeliberationCombo));
    }
}
