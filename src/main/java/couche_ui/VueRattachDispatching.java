package couche_ui;

import couche_jpa.Arrondissement;
import couche_jpa.Centredispatching;
import couche_jpa.Departement;
import couche_jpa.Famille;
import couche_jpa.Rattachdispatching;
import couche_jpa.Region;
import couche_jpa.Souscentre;
import couche_metier.IMetier;
import exception.ObcbudgetException;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;
import javax.swing.DefaultComboBoxModel;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import net.sf.jasperreports.engine.JRDataSource;
import net.sf.jasperreports.engine.JRException;
import net.sf.jasperreports.engine.JasperCompileManager;
import net.sf.jasperreports.engine.JasperFillManager;
import net.sf.jasperreports.engine.JasperPrint;
import net.sf.jasperreports.engine.JasperReport;
import net.sf.jasperreports.engine.data.JRBeanCollectionDataSource;
import net.sf.jasperreports.view.JasperViewer;
import org.springframework.context.ApplicationContext;
import org.springframework.context.support.ClassPathXmlApplicationContext;

public class VueRattachDispatching extends javax.swing.JFrame {

    DefaultTableModel model;

    public VueRattachDispatching() {
        initComponents();
        model = (DefaultTableModel) jTable1.getModel();
        doMyInit();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jLabel1 = new javax.swing.JLabel();
        jPanel1 = new javax.swing.JPanel();
        jLabelNomCentreDispatching = new javax.swing.JLabel();
        jComboBoxCentreDispatching = new javax.swing.JComboBox<>();
        jLabeType = new javax.swing.JLabel();
        jTextFieldType = new javax.swing.JTextField();
        jLabelRegionDuCentreDispatching = new javax.swing.JLabel();
        jComboBoxRegionDuCentreDispatching = new javax.swing.JComboBox<>();
        jLabeFamille = new javax.swing.JLabel();
        jTextFieldFamille = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        jLabelSouscentre = new javax.swing.JLabel();
        jComboBoxRegionSouscentre = new javax.swing.JComboBox<>();
        jButtonPlusSouscentre = new javax.swing.JButton();
        jLabelArrondissement = new javax.swing.JLabel();
        jComboBoxArrondissementSouscentre = new javax.swing.JComboBox<>();
        jComboBoxDepartementSouscentre = new javax.swing.JComboBox<>();
        jLabelRegion = new javax.swing.JLabel();
        jComboBoxSouscentre = new javax.swing.JComboBox<>();
        jLabelDépartement = new javax.swing.JLabel();
        jLabelDistance = new javax.swing.JLabel();
        jLabelTexteDroitDistance = new javax.swing.JLabel();
        jTextFieldDistance = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        jLabelPrixplace = new javax.swing.JLabel();
        jTextFieldPrixplace = new javax.swing.JTextField();
        jLabelTexteDroiteFCFA = new javax.swing.JLabel();
        jLabelTexteFCFA1 = new javax.swing.JLabel();
        jButtonFermer = new javax.swing.JButton();
        jButtonAnnuler = new javax.swing.JButton();
        jButtonSupprimer = new javax.swing.JButton();
        jButtonRechercher = new javax.swing.JButton();
        jButtonCreer = new javax.swing.JButton();
        jPanelEtats = new javax.swing.JPanel();
        jButtonNonRattaches = new javax.swing.JButton();
        jButtonRattaches = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DO_NOTHING_ON_CLOSE);
        setResizable(false);

        jTable1.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Id", "N° Ordre", "Région centre regroup./ventil.", "Centre regroup./ventil.", "Type", "Famille", "Région du sous-centre", "Département du sous-centre", "Arrondissement du sous-centre", "Sous-centre", "Distance", "Coût transport"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jTable1.setShowHorizontalLines(true);
        jTable1.setShowVerticalLines(true);
        jTable1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTable1MouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(jTable1);

        jLabel1.setFont(new java.awt.Font("Arial", 1, 36)); // NOI18N
        jLabel1.setText("RATTACHEMENT DES SOUS-CENTRES");

        jPanel1.setBackground(new java.awt.Color(0, 255, 153));
        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Centre de regroupement ou de ventilation", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Arial", 3, 14), new java.awt.Color(51, 0, 255))); // NOI18N

        jLabelNomCentreDispatching.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        jLabelNomCentreDispatching.setText("Nom :");

        jComboBoxCentreDispatching.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        jComboBoxCentreDispatching.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBoxCentreDispatchingActionPerformed(evt);
            }
        });

        jLabeType.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        jLabeType.setText("Type :");

        jTextFieldType.setEditable(false);
        jTextFieldType.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N

        jLabelRegionDuCentreDispatching.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        jLabelRegionDuCentreDispatching.setText("Région :");

        jComboBoxRegionDuCentreDispatching.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        jComboBoxRegionDuCentreDispatching.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBoxRegionDuCentreDispatchingActionPerformed(evt);
            }
        });

        jLabeFamille.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        jLabeFamille.setText("Famille :");

        jTextFieldFamille.setEditable(false);
        jTextFieldFamille.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(12, 12, 12)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(jLabelRegionDuCentreDispatching)
                                    .addComponent(jLabelNomCentreDispatching)))
                            .addComponent(jLabeType, javax.swing.GroupLayout.Alignment.TRAILING))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jTextFieldType, javax.swing.GroupLayout.PREFERRED_SIZE, 197, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jComboBoxRegionDuCentreDispatching, javax.swing.GroupLayout.PREFERRED_SIZE, 292, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jComboBoxCentreDispatching, javax.swing.GroupLayout.PREFERRED_SIZE, 408, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabeFamille)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jTextFieldFamille, javax.swing.GroupLayout.PREFERRED_SIZE, 197, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(211, 211, 211)))
                .addContainerGap(12, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(14, 14, 14)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jComboBoxRegionDuCentreDispatching)
                    .addComponent(jLabelRegionDuCentreDispatching, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabelNomCentreDispatching, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jComboBoxCentreDispatching, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabeType, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jTextFieldType, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabeFamille, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jTextFieldFamille, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jLabel3.setFont(new java.awt.Font("Arial", 1, 36)); // NOI18N
        jLabel3.setText("AUX CENTRES DE REGROUPEMENT OU DE VENTILATION");

        jPanel2.setBackground(new java.awt.Color(204, 255, 0));
        jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Sous-centre d'examen", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Arial", 1, 14), new java.awt.Color(102, 0, 255))); // NOI18N

        jLabelSouscentre.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        jLabelSouscentre.setText("Sous-centre :");

        jComboBoxRegionSouscentre.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        jComboBoxRegionSouscentre.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBoxRegionSouscentreActionPerformed(evt);
            }
        });

        jButtonPlusSouscentre.setFont(new java.awt.Font("Arial", 1, 18)); // NOI18N
        jButtonPlusSouscentre.setText("+");
        jButtonPlusSouscentre.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonPlusSouscentreActionPerformed(evt);
            }
        });

        jLabelArrondissement.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        jLabelArrondissement.setText("Arrondissement :");

        jComboBoxArrondissementSouscentre.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        jComboBoxArrondissementSouscentre.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBoxArrondissementSouscentreActionPerformed(evt);
            }
        });

        jComboBoxDepartementSouscentre.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        jComboBoxDepartementSouscentre.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBoxDepartementSouscentreActionPerformed(evt);
            }
        });

        jLabelRegion.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        jLabelRegion.setText("Région :");

        jComboBoxSouscentre.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N

        jLabelDépartement.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        jLabelDépartement.setText("Département :");

        jLabelDistance.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        jLabelDistance.setText("Distance :");

        jLabelTexteDroitDistance.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        jLabelTexteDroitDistance.setText("km   ");

        jTextFieldDistance.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N

        jLabel2.setFont(new java.awt.Font("Arial", 3, 14)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(5, 0, 130));
        jLabel2.setText("(En aller et retour du sous-centre au centre de regroupement ou de ventilation)");

        jLabelPrixplace.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        jLabelPrixplace.setText("Coût transport :");

        jTextFieldPrixplace.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N

        jLabelTexteDroiteFCFA.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        jLabelTexteDroiteFCFA.setText("(En aller simple)");

        jLabelTexteFCFA1.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        jLabelTexteFCFA1.setText("F CFA");

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(31, 31, 31)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(10, 10, 10)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabelPrixplace)
                            .addComponent(jLabelDistance)))
                    .addComponent(jLabelSouscentre, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabelArrondissement, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabelDépartement, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabelRegion, javax.swing.GroupLayout.Alignment.TRAILING))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jComboBoxDepartementSouscentre, javax.swing.GroupLayout.PREFERRED_SIZE, 358, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jComboBoxArrondissementSouscentre, javax.swing.GroupLayout.PREFERRED_SIZE, 242, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(jComboBoxSouscentre, javax.swing.GroupLayout.PREFERRED_SIZE, 439, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jButtonPlusSouscentre, javax.swing.GroupLayout.PREFERRED_SIZE, 47, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(jTextFieldDistance, javax.swing.GroupLayout.PREFERRED_SIZE, 52, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabelTexteDroitDistance, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel2))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(jTextFieldPrixplace, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabelTexteFCFA1)
                        .addGap(18, 18, 18)
                        .addComponent(jLabelTexteDroiteFCFA))
                    .addComponent(jComboBoxRegionSouscentre, javax.swing.GroupLayout.PREFERRED_SIZE, 358, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabelRegion, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jComboBoxRegionSouscentre, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(19, 19, 19)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jComboBoxDepartementSouscentre, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabelDépartement, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabelArrondissement, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jComboBoxArrondissementSouscentre, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabelSouscentre, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jComboBoxSouscentre, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButtonPlusSouscentre, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jTextFieldDistance, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabelDistance, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabelTexteDroitDistance, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2))
                .addGap(18, 18, 18)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jTextFieldPrixplace, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabelPrixplace, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabelTexteDroiteFCFA, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabelTexteFCFA1, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jLabelTexteDroitDistance.getAccessibleContext().setAccessibleName("km    (du sous-centre au centre de regroupement ou de ventlation)");

        jButtonFermer.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        jButtonFermer.setText("Fermer");
        jButtonFermer.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonFermerActionPerformed(evt);
            }
        });

        jButtonAnnuler.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        jButtonAnnuler.setText("Annuler");
        jButtonAnnuler.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonAnnulerActionPerformed(evt);
            }
        });

        jButtonSupprimer.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        jButtonSupprimer.setText("Supprimer");
        jButtonSupprimer.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonSupprimerActionPerformed(evt);
            }
        });

        jButtonRechercher.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        jButtonRechercher.setText("Rechercher");
        jButtonRechercher.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonRechercherActionPerformed(evt);
            }
        });

        jButtonCreer.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        jButtonCreer.setText("Créer");
        jButtonCreer.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonCreerActionPerformed(evt);
            }
        });

        jPanelEtats.setBackground(new java.awt.Color(0, 255, 51));
        jPanelEtats.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Visualiser/imprimer les sous-centres", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Arial", 3, 14), new java.awt.Color(0, 0, 204))); // NOI18N

        jButtonNonRattaches.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        jButtonNonRattaches.setText("Non rattachés");
        jButtonNonRattaches.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonNonRattachesActionPerformed(evt);
            }
        });

        jButtonRattaches.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        jButtonRattaches.setText("Rattachés");
        jButtonRattaches.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonRattachesActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanelEtatsLayout = new javax.swing.GroupLayout(jPanelEtats);
        jPanelEtats.setLayout(jPanelEtatsLayout);
        jPanelEtatsLayout.setHorizontalGroup(
            jPanelEtatsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelEtatsLayout.createSequentialGroup()
                .addGap(92, 92, 92)
                .addComponent(jButtonRattaches)
                .addGap(78, 78, 78)
                .addComponent(jButtonNonRattaches)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanelEtatsLayout.setVerticalGroup(
            jPanelEtatsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelEtatsLayout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addGroup(jPanelEtatsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButtonNonRattaches, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButtonRattaches, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(20, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(335, 335, 335)
                        .addComponent(jLabel1))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(178, 178, 178)
                        .addComponent(jLabel3)))
                .addGap(0, 0, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(19, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(jScrollPane1)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jPanelEtats, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(1, 1, 1)))
                        .addGap(14, 14, 14))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(jButtonCreer)
                        .addGap(18, 18, 18)
                        .addComponent(jButtonRechercher)
                        .addGap(18, 18, 18)
                        .addComponent(jButtonSupprimer)
                        .addGap(18, 18, 18)
                        .addComponent(jButtonAnnuler)
                        .addGap(18, 18, 18)
                        .addComponent(jButtonFermer)
                        .addGap(382, 382, 382))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(16, 16, 16)
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel3)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(10, 10, 10)
                        .addComponent(jPanelEtats, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButtonFermer, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButtonAnnuler, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButtonSupprimer, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButtonRechercher, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButtonCreer, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 127, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(12, 12, 12))
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void jButtonFermerActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonFermerActionPerformed
        dispose();
    }//GEN-LAST:event_jButtonFermerActionPerformed

    private void jButtonAnnulerActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonAnnulerActionPerformed
        videFrame();
    }//GEN-LAST:event_jButtonAnnulerActionPerformed

    private void jComboBoxRegionSouscentreActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBoxRegionSouscentreActionPerformed
        remplirDepartementCombobox();
    }//GEN-LAST:event_jComboBoxRegionSouscentreActionPerformed

    private void jComboBoxDepartementSouscentreActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBoxDepartementSouscentreActionPerformed
        remplirArrondissementCombobox();
    }//GEN-LAST:event_jComboBoxDepartementSouscentreActionPerformed

    private void jButtonCreerActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonCreerActionPerformed
        model.setRowCount(0);//vide la jTable
        infoSaisies();
        validerDistance(distanceString);
        validerPrixplace(prixplaceString);
        if (continuerSiDistanceOK && continuerSiPrixplaceOK && distanceSaisie >= 0 && prixplaceSaisie >= 0) {
            if (!nomSouscentreSelected.equals("---") && !nomCentreDispatchingSelected.equals("---")) {
                for (Souscentre c : souscentres) {
                    if (c.getNomsouscent().equals(nomSouscentreSelected)) {
                        souscentreSelected = c;
                        break;
                    }
                }

                String[] nomcentredispatchingList = null;
                String separateur = " ; ";
                nomcentredispatchingList = nomCentreDispatchingSelected.split(separateur);
                String nomExacte = nomcentredispatchingList[0];
                String typeExate = nomcentredispatchingList[1];

                for (Centredispatching c : centresDispatching) {
                    if (c.getEtablissement().getAbreviation().equals(nomExacte) && c.getType().equals(typeExate)) {
                        centredispatchingSelected = c;
                        break;
                    }
                }
                try {
                    metier.creerRattachdispatching(new Rattachdispatching(centredispatchingSelected, souscentreSelected, distanceSaisie, prixplaceSaisie));
                    JOptionPane.showMessageDialog(this, "Rattachement effectué avec succès !");
                    int i = 1;
                    rattachdispatchings = metier.findAllRattachdispatchingsD1CentredispatchingD1Type(nomExacte,typeExate);
                    for (Rattachdispatching r : rattachdispatchings) {
                        model.insertRow(model.getRowCount(), new Object[]{r.getIdratdispatch(), i++, r.getCentredispatching().getEtablissement().getArrondissement().getDepartement().getRegion().getNomreg(), r.getCentredispatching().getEtablissement().getAbreviation(), r.getCentredispatching().getType(), r.getCentredispatching().getFamille().getTitre(), r.getSouscentre().getEtablissement().getArrondissement().getDepartement().getRegion().getNomreg(), r.getSouscentre().getEtablissement().getArrondissement().getDepartement().getNomdepart(), r.getSouscentre().getEtablissement().getArrondissement().getNomarr(), r.getSouscentre().getNomsouscent(), r.getDistance(), r.getPrixplace()});
                    }
                } catch (ObcbudgetException ex) {
                    JOptionPane.showMessageDialog(this, "Impossible d'effectuer le rattachement souhaité \n raison:" + ex.getMessage());
                }
            } else {
                JOptionPane.showMessageDialog(this, " Veuillez recommencer svp. Au moins une donnée manquante ou incorrecte !");
            }
        } else {
            JOptionPane.showMessageDialog(this, "La distance et le coût de transport doivent être des entiers positifs !");
        }
    }//GEN-LAST:event_jButtonCreerActionPerformed

    private void jButtonPlusSouscentreActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonPlusSouscentreActionPerformed
        new VueEtablissement().setVisible(true);
    }//GEN-LAST:event_jButtonPlusSouscentreActionPerformed

    private void jTable1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTable1MouseClicked
        //remplit les champs
        int ligne = jTable1.getSelectedRow();
        idRattachDispatchingCliked = (int) model.getValueAt(ligne, 0);
        jComboBoxRegionDuCentreDispatching.setSelectedItem((String) model.getValueAt(ligne, 2));
        jComboBoxCentreDispatching.setSelectedItem((String) model.getValueAt(ligne, 3)+" ; "+(String) model.getValueAt(ligne, 4));
        jTextFieldType.setText((String) model.getValueAt(ligne, 4));
        jTextFieldFamille.setText((String) model.getValueAt(ligne, 5));
        jComboBoxRegionSouscentre.setSelectedItem((String) model.getValueAt(ligne, 6));
        jComboBoxDepartementSouscentre.setSelectedItem((String) model.getValueAt(ligne, 7));
        jComboBoxArrondissementSouscentre.setSelectedItem((String) model.getValueAt(ligne, 8));
        jComboBoxSouscentre.setSelectedItem((String) model.getValueAt(ligne, 9));
        jTextFieldDistance.setText("" + model.getValueAt(ligne, 10));
        jTextFieldPrixplace.setText("" + model.getValueAt(ligne, 11));
    }//GEN-LAST:event_jTable1MouseClicked

    private void jButtonRechercherActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonRechercherActionPerformed
        model.setRowCount(0);//vide la jTable
        infoSaisies();
        if (!nomCentreDispatchingSelected.equals("---")) {
            String[] nomcentredispatchingList = null;
            String separateur = " ; ";
            nomcentredispatchingList = nomCentreDispatchingSelected.split(separateur);
            String nomExacte = nomcentredispatchingList[0];
            String typeExate = nomcentredispatchingList[1];
            try {
                int i = 1;
                rattachdispatchings = metier.findAllRattachdispatchingsD1CentredispatchingD1Type(nomExacte,typeExate);
                for (Rattachdispatching r : rattachdispatchings) {
                    model.insertRow(model.getRowCount(), new Object[]{r.getIdratdispatch(), i++, r.getCentredispatching().getEtablissement().getArrondissement().getDepartement().getRegion().getNomreg(), r.getCentredispatching().getEtablissement().getAbreviation(), r.getCentredispatching().getType(), r.getCentredispatching().getFamille().getTitre(), r.getSouscentre().getEtablissement().getArrondissement().getDepartement().getRegion().getNomreg(), r.getSouscentre().getEtablissement().getArrondissement().getDepartement().getNomdepart(), r.getSouscentre().getEtablissement().getArrondissement().getNomarr(), r.getSouscentre().getNomsouscent(), r.getDistance(), r.getPrixplace()});
                }
            } catch (ObcbudgetException ex) {
                JOptionPane.showMessageDialog(this, "Impossible de trouver les rattachements du centre de regroupement ou de ventilation  [" + nomCentreDispatchingSelected + "] \n raison:" + ex.getMessage());
            }
        } else {
            JOptionPane.showMessageDialog(this, "Le nom du centre de regroupement ou de ventilation doit être fourni");
        }
    }//GEN-LAST:event_jButtonRechercherActionPerformed

    private void jButtonSupprimerActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonSupprimerActionPerformed
        model.setRowCount(0);//vide la jTable
        infoSaisies();
        int result = JOptionPane.showConfirmDialog(this, "Voulez-vous vraiment supprimer ce rattachement?", "confirmation de suppression", JOptionPane.YES_NO_OPTION, JOptionPane.QUESTION_MESSAGE);
        if (result == JOptionPane.YES_OPTION) {
            if (!nomSouscentreSelected.equals("---") && !nomCentreDispatchingSelected.equals("---")) {
                String[] nomcentredispatchingList = null;
                String separateur = " ; ";
                nomcentredispatchingList = nomCentreDispatchingSelected.split(separateur);
                String nomExacte = nomcentredispatchingList[0];
                String typeExate = nomcentredispatchingList[1];
                try {
                    metier.supprimerRattachdispatching(metier.findRattachdispatchingById(idRattachDispatchingCliked));
                    JOptionPane.showMessageDialog(this, "Rattachement supprimé avec succès !");
                    model.setRowCount(0);//vide la jTable
                    int i = 1;
                    rattachdispatchings = metier.findAllRattachdispatchingsD1CentredispatchingD1Type(nomExacte,typeExate);
                    for (Rattachdispatching r : rattachdispatchings) {
                        model.insertRow(model.getRowCount(), new Object[]{r.getIdratdispatch(), i++, r.getCentredispatching().getEtablissement().getArrondissement().getDepartement().getRegion().getNomreg(), r.getCentredispatching().getEtablissement().getAbreviation(), r.getCentredispatching().getType(), r.getCentredispatching().getFamille().getTitre(), r.getSouscentre().getEtablissement().getArrondissement().getDepartement().getRegion().getNomreg(), r.getSouscentre().getEtablissement().getArrondissement().getDepartement().getNomdepart(), r.getSouscentre().getEtablissement().getArrondissement().getNomarr(), r.getSouscentre().getNomsouscent(), r.getDistance(), r.getPrixplace()});
                    }
                } catch (ObcbudgetException ex) {
                    JOptionPane.showMessageDialog(this, "Impossible de supprimer le rattachement du sous-centre [" + nomSouscentreSelected + "] \n raison:" + ex.getMessage());
                }
            } else {
                JOptionPane.showMessageDialog(this, "Le sous-centre et le nom du centre de regroupement/ventilation sont obligatoires !");
            }
        }
    }//GEN-LAST:event_jButtonSupprimerActionPerformed

    private void jComboBoxArrondissementSouscentreActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBoxArrondissementSouscentreActionPerformed
        remplirSouscentreCombobox();
    }//GEN-LAST:event_jComboBoxArrondissementSouscentreActionPerformed

    private void jComboBoxCentreDispatchingActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBoxCentreDispatchingActionPerformed
        String[] nomcentredispatchingList = null;
        nomCentreDispatchingSelected = (String) jComboBoxCentreDispatching.getSelectedItem();
        if (!nomCentreDispatchingSelected.equals("---")) {
            String separateur = " ; ";
            nomcentredispatchingList = nomCentreDispatchingSelected.split(separateur);
            String nomExacte = nomcentredispatchingList[0];
            String typeExate = nomcentredispatchingList[1];
            for (Centredispatching centredispatching : centresDispatching) {
                if (centredispatching.getEtablissement().getAbreviation().equals(nomExacte) && centredispatching.getType().equals(typeExate)) {
                    jTextFieldType.setText(centredispatching.getType());
                    jTextFieldFamille.setText(centredispatching.getFamille().getTitre());
                    break;
                }
            }
        }
    }//GEN-LAST:event_jComboBoxCentreDispatchingActionPerformed

    private void jComboBoxRegionDuCentreDispatchingActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBoxRegionDuCentreDispatchingActionPerformed
        remplirCentreDispatchingCombobox();
    }//GEN-LAST:event_jComboBoxRegionDuCentreDispatchingActionPerformed

    private void jButtonRattachesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonRattachesActionPerformed
        Map<Centredispatching, ArrayList<Souscentre>> centredispatchingsouscentresMap = new HashMap<>();//contient les centres de dispatching (regroupement et ventilation) chacun avec le tableau de ses sous-centres
        List<Centredispatching> centredispatchings = metier.findAllCentredispatchings();
        for (Centredispatching centredispatching : centredispatchings) {
            List<Rattachdispatching> lesRattachdispatchings = metier.findAllRattachdispatchingsD1CentredispatchingD1Type(centredispatching.getEtablissement().getAbreviation(),centredispatching.getType());
            ArrayList<Souscentre> souscentresList = new ArrayList<>();//liste des sous-centres du centre de regroupement/ventilation courant
            for (Rattachdispatching rattach : lesRattachdispatchings) {
                if (!souscentresList.contains(rattach.getSouscentre())) {
                    souscentresList.add(rattach.getSouscentre());//rattach peut contenir deux fois le même sous-centre à cause famille de séries           
                }
            }
            centredispatchingsouscentresMap.put(centredispatching, souscentresList);
        }
        if (!centredispatchingsouscentresMap.isEmpty()) {
            try {
                List<Map<String, Object>> datasource = new ArrayList<>();
                List<Region> regions = metier.findAllRegions();
                for (Region region : regions) {
                    for (Centredispatching centredispatching : centredispatchingsouscentresMap.keySet()) {
                        int num = 1;
                        if (centredispatching.getEtablissement().getArrondissement().getDepartement().getRegion().getNomreg().equals(region.getNomreg())) {
                            for (Souscentre souscentre : centredispatchingsouscentresMap.get(centredispatching)) {
                                List<Rattachdispatching> centredispatchingList = metier.findAllRattachdispatchingsD1Souscentre(souscentre.getNomsouscent());
                                for (Rattachdispatching rattachdispatch : centredispatchingList) {
                                    Map<String, Object> row = new HashMap<>();
                                    row.put("region", region.getNomreg());
                                    row.put("centredispatching", centredispatching.getEtablissement().getAbreviation() + " (Famille :" + centredispatching.getFamille().getTitre() + "; Type :" + centredispatching.getType() + ")");
                                    row.put("num", num++);
                                    row.put("souscentre", rattachdispatch.getSouscentre().getNomsouscent());
                                    row.put("distance", rattachdispatch.getDistance());
                                    row.put("prixplace", rattachdispatch.getPrixplace());
                                    datasource.add(row);
                                }
                            }
                        }
                    }
                }
                JRDataSource jRDataSource = new JRBeanCollectionDataSource(datasource);
                JasperReport jasperReport = JasperCompileManager.compileReport("src\\main\\java\\reports\\rattachSouscentreAuCentreRegroupementReport.jrxml");
                JasperPrint jasperPrint = JasperFillManager.fillReport(jasperReport, null, jRDataSource);
                JasperViewer jasperViewer = new JasperViewer(jasperPrint, false);//false empêche jasperviewer de fermer l'appli lorsqu'on le ferme
                jasperViewer.setVisible(true);
            } catch (JRException e) {
                JOptionPane.showMessageDialog(this, e.getMessage());
            }
        } else {
            JOptionPane.showMessageDialog(this, "Aucun rattachement trouvé dans la base des données !");
        }
    }//GEN-LAST:event_jButtonRattachesActionPerformed

    private void jButtonNonRattachesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonNonRattachesActionPerformed
        souscentres = metier.findAllSouscentres();
        rattachdispatchings = metier.findAllRattachdispatchings();
        ArrayList<Souscentre> souscentresList = new ArrayList<>();//liste des sous-centres non rattachés aux centres de regroupement
        for (Souscentre souscentre : souscentres) {
            boolean trouver = false;
            for (Rattachdispatching rattachdispatching : rattachdispatchings) {
                if (rattachdispatching.getSouscentre().getNomsouscent().equals(souscentre.getNomsouscent())) {
                    trouver = true;
                    break;
                }
            }
            if (!trouver) {
                souscentresList.add(souscentre);
            }
        }

        if (!souscentresList.isEmpty()) {
            try {
                List<Map<String, Object>> datasource = new ArrayList<>();
                List<Region> regions = metier.findAllRegions();
                int num = 1;
                for (Region region : regions) {
                    for (Souscentre souscentre : souscentresList) {
                        if (souscentre.getEtablissement().getArrondissement().getDepartement().getRegion().getNomreg().equals(region.getNomreg())) {
                            Map<String, Object> row = new HashMap<>();
                            row.put("num", num++);
                            row.put("region", region.getNomreg());
                            row.put("departement", souscentre.getEtablissement().getArrondissement().getDepartement().getNomdepart());
                            row.put("arrondissement", souscentre.getEtablissement().getArrondissement().getNomarr());
                            row.put("souscentre", souscentre.getNomsouscent());
                            datasource.add(row);
                        }
                    }
                }
                JRDataSource jRDataSource = new JRBeanCollectionDataSource(datasource);
                JasperReport jasperReport = JasperCompileManager.compileReport("src\\main\\java\\reports\\souscentresNonRattachesAuCentreregroupOuVentilReport.jrxml");
                JasperPrint jasperPrint = JasperFillManager.fillReport(jasperReport, null, jRDataSource);
                JasperViewer jasperViewer = new JasperViewer(jasperPrint, false);//false empêche jasperviewer de fermer l'appli lorsqu'on le ferme
                jasperViewer.setVisible(true);
            } catch (JRException e) {
                JOptionPane.showMessageDialog(this, e.getMessage());
            }
        } else {
            JOptionPane.showMessageDialog(this, "La liste des centres de regroupement non rattachés est vide !");
        }
    }//GEN-LAST:event_jButtonNonRattachesActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;

                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(VueRattachDispatching.class
                        .getName()).log(java.util.logging.Level.SEVERE, null, ex);

        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(VueRattachDispatching.class
                        .getName()).log(java.util.logging.Level.SEVERE, null, ex);

        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(VueRattachDispatching.class
                        .getName()).log(java.util.logging.Level.SEVERE, null, ex);

        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(VueRattachDispatching.class
                        .getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new VueRattachDispatching().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButtonAnnuler;
    private javax.swing.JButton jButtonCreer;
    private javax.swing.JButton jButtonFermer;
    private javax.swing.JButton jButtonNonRattaches;
    private javax.swing.JButton jButtonPlusSouscentre;
    private javax.swing.JButton jButtonRattaches;
    private javax.swing.JButton jButtonRechercher;
    private javax.swing.JButton jButtonSupprimer;
    private javax.swing.JComboBox<String> jComboBoxArrondissementSouscentre;
    private javax.swing.JComboBox<String> jComboBoxCentreDispatching;
    private javax.swing.JComboBox<String> jComboBoxDepartementSouscentre;
    private javax.swing.JComboBox<String> jComboBoxRegionDuCentreDispatching;
    private javax.swing.JComboBox<String> jComboBoxRegionSouscentre;
    private javax.swing.JComboBox<String> jComboBoxSouscentre;
    private javax.swing.JLabel jLabeFamille;
    private javax.swing.JLabel jLabeType;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabelArrondissement;
    private javax.swing.JLabel jLabelDistance;
    private javax.swing.JLabel jLabelDépartement;
    private javax.swing.JLabel jLabelNomCentreDispatching;
    private javax.swing.JLabel jLabelPrixplace;
    private javax.swing.JLabel jLabelRegion;
    private javax.swing.JLabel jLabelRegionDuCentreDispatching;
    private javax.swing.JLabel jLabelSouscentre;
    private javax.swing.JLabel jLabelTexteDroitDistance;
    private javax.swing.JLabel jLabelTexteDroiteFCFA;
    private javax.swing.JLabel jLabelTexteFCFA1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanelEtats;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTable1;
    private javax.swing.JTextField jTextFieldDistance;
    private javax.swing.JTextField jTextFieldFamille;
    private javax.swing.JTextField jTextFieldPrixplace;
    private javax.swing.JTextField jTextFieldType;
    // End of variables declaration//GEN-END:variables

    // variables d'instance
    private IMetier metier = null;
    private List<Region> regions = null;
    private String[] regionsCombo = null;
    private List<Departement> departements = null;
    private List<Arrondissement> arrondissements = null;
    private String[] departementsCombo = null;
    private String[] centresDispatchingCombo = null;
    private String[] arrondissementsCombo = null;
    private List<Centredispatching> centresDispatching = null;
    private Departement departementSelected = null;
    private Arrondissement arrondissementSelected = null;
    private String nomRegionSelected = "";
    private String nomRegionCentreDispatchingSelected = "";
    private String nomCentreDispatchingSelected = "";
    private Centredispatching centredispatchingSelected = null;
    private String nomDepartementSelected = "";
    private String nomArrondissementSelected = "";
    private String nomSouscentreSelected = "";
    private Souscentre souscentreSelected = null;
    private String[] souscentresCombo = null;
    private List<Souscentre> souscentres = null;
    private List<Rattachdispatching> rattachdispatchingsRecherches = null;
    private int idRattachDispatchingCliked = 0;
    private Rattachdispatching rattachdispatchingCliked = null;
    private List<Rattachdispatching> rattachdispatchings = null;
    private int distanceSaisie = 0;
    private int prixplaceSaisie = 0;
    private String distanceString = "";
    private String prixplaceString = "";
    private boolean continuerSiDistanceOK = false;
    private boolean continuerSiPrixplaceOK = false;
    private List<Famille> familles = null;
    private String[] famillesCombo = null;
    private String titreFamilleSelected = "";

    private void doMyInit() {
        // init contexte
        // instanciation couche [metier]
        ApplicationContext ctx = new ClassPathXmlApplicationContext("spring-config-metier.xml");
        metier = (IMetier) ctx.getBean("metier");
        regions = metier.findAllRegions();

        jTextFieldDistance.setText("0");
        jTextFieldPrixplace.setText("0");

        //on remplit la combobox des régions
        regionsCombo = new String[regions.size() + 1];
        regionsCombo[0] = "---";
        int j = 1;
        for (Region region : regions) {
            regionsCombo[j++] = region.getNomreg();
        }
        jComboBoxRegionSouscentre.setModel(new DefaultComboBoxModel(regionsCombo));
        jComboBoxRegionDuCentreDispatching.setModel(new DefaultComboBoxModel(regionsCombo));

        remplirDepartementCombobox();
        remplirArrondissementCombobox();
        remplirSouscentreCombobox();
        remplirCentreDispatchingCombobox();
    }

    private void infoSaisies() {
        nomRegionSelected = (String) jComboBoxRegionSouscentre.getSelectedItem();
        nomDepartementSelected = (String) jComboBoxDepartementSouscentre.getSelectedItem();
        nomArrondissementSelected = (String) jComboBoxArrondissementSouscentre.getSelectedItem();
        nomSouscentreSelected = (String) jComboBoxSouscentre.getSelectedItem();
        nomCentreDispatchingSelected = (String) jComboBoxCentreDispatching.getSelectedItem();
        distanceString = jTextFieldDistance.getText();
        prixplaceString = jTextFieldPrixplace.getText();
    }

    private void videFrame() {
        jComboBoxRegionSouscentre.setSelectedIndex(0);
        jComboBoxDepartementSouscentre.setSelectedIndex(0);
        jComboBoxSouscentre.setSelectedIndex(0);
        jComboBoxRegionDuCentreDispatching.setSelectedIndex(0);
        jComboBoxCentreDispatching.setSelectedIndex(0);
        jTextFieldType.setText("");
        jTextFieldDistance.setText("0");
        jTextFieldPrixplace.setText("0");
        jTextFieldFamille.setText("");
        model.setRowCount(0);//vide la jTable
    }

    private void remplirDepartementCombobox() {
        nomRegionSelected = (String) jComboBoxRegionSouscentre.getSelectedItem();
        departements = metier.findAllDepartementsD1Region(nomRegionSelected);
        //on remplit la combobox des départements
        departementsCombo = new String[departements.size() + 1];
        departementsCombo[0] = "---";
        int i = 1;
        for (Departement departement : departements) {
            departementsCombo[i++] = departement.getNomdepart();
        }
        jComboBoxDepartementSouscentre.setModel(new DefaultComboBoxModel(departementsCombo));
    }

    private void remplirArrondissementCombobox() {
        nomDepartementSelected = (String) jComboBoxDepartementSouscentre.getSelectedItem();
        arrondissements = metier.findAllArrondissementsD1Departement(nomDepartementSelected);
        //on remplit la combobox des arrondissements
        arrondissementsCombo = new String[arrondissements.size() + 1];
        arrondissementsCombo[0] = "---";
        int i = 1;
        for (Arrondissement arrondissement : arrondissements) {
            arrondissementsCombo[i++] = arrondissement.getNomarr();
        }
        jComboBoxArrondissementSouscentre.setModel(new DefaultComboBoxModel(arrondissementsCombo));
    }

    private void remplirSouscentreCombobox() {
        nomArrondissementSelected = (String) jComboBoxArrondissementSouscentre.getSelectedItem();
        souscentres = metier.findAllSouscentresD1Arrondissement(nomArrondissementSelected);
        //on remplit la combobox des sous-centres
        souscentresCombo = new String[souscentres.size() + 1];
        souscentresCombo[0] = "---";
        int i = 1;
        for (Souscentre souscentre : souscentres) {
            souscentresCombo[i++] = souscentre.getNomsouscent();
        }
        jComboBoxSouscentre.setModel(new DefaultComboBoxModel(souscentresCombo));
    }

    private void remplirCentreDispatchingCombobox() {
        nomRegionCentreDispatchingSelected = (String) jComboBoxRegionDuCentreDispatching.getSelectedItem();
        centresDispatching = metier.findAllCentresdispatchingD1Region(nomRegionCentreDispatchingSelected);
        //on remplit la combobox des Centres de Dispatching
        centresDispatchingCombo = new String[centresDispatching.size() + 1];
        centresDispatchingCombo[0] = "---";
        int i = 1;
        for (Centredispatching centredispatching : centresDispatching) {
            centresDispatchingCombo[i++] = centredispatching.getEtablissement().getAbreviation() + " ; " + centredispatching.getType();
        }
        jComboBoxCentreDispatching.setModel(new DefaultComboBoxModel(centresDispatchingCombo));
    }

    private void validerDistance(String nbreString) {
        try {
            distanceSaisie = Integer.parseInt(nbreString);
            continuerSiDistanceOK = true;
        } catch (NumberFormatException e) {
            JOptionPane.showMessageDialog(this, "La distance doit être fournie et contenir uniquement des chiffres !");
            continuerSiDistanceOK = false;
        }
    }

    private void validerPrixplace(String nbreString) {
        try {
            prixplaceSaisie = Integer.parseInt(nbreString);
            continuerSiPrixplaceOK = true;
        } catch (NumberFormatException e) {
            JOptionPane.showMessageDialog(this, "Le coût de transport doit être fournie et contenir uniquement des chiffres !");
            continuerSiPrixplaceOK = false;
        }
    }
}
