package couche_ui;

import couche_jpa.Arrondissement;
import couche_jpa.Departement;
import couche_jpa.Etablissement;
import couche_jpa.Rattachetab;
import couche_jpa.Region;
import couche_jpa.Souscentre;
import couche_metier.IMetier;
import exception.ObcbudgetException;
import java.util.List;
import javax.swing.DefaultComboBoxModel;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import org.springframework.context.ApplicationContext;
import org.springframework.context.support.ClassPathXmlApplicationContext;

public class VueRattachEtablissement extends javax.swing.JFrame {

    DefaultTableModel model;

    public VueRattachEtablissement() {
        initComponents();
        model = (DefaultTableModel) jTable1.getModel();
        doMyInit();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroup1 = new javax.swing.ButtonGroup();
        jLabel1 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jButtonCreer = new javax.swing.JButton();
        jButtonRechercher = new javax.swing.JButton();
        jButtonSupprimer = new javax.swing.JButton();
        jButtonAnnuler = new javax.swing.JButton();
        jButtonFermer = new javax.swing.JButton();
        jPanelEtablissement = new javax.swing.JPanel();
        jLabeNomEtablissement = new javax.swing.JLabel();
        jComboBoxEtablissement = new javax.swing.JComboBox<>();
        jLabelArrondissementEtablissement = new javax.swing.JLabel();
        jComboBoxArrondissementEtablissement = new javax.swing.JComboBox<>();
        jLabelDepartementEtablissement = new javax.swing.JLabel();
        jComboBoxDepartementEtablissement = new javax.swing.JComboBox<>();
        jPanelSouscentre = new javax.swing.JPanel();
        jLabelNomSouscentre = new javax.swing.JLabel();
        jLabelDepartementSouscentre = new javax.swing.JLabel();
        jComboBoxDepartementSouscentre = new javax.swing.JComboBox<>();
        jLabelArrondissementSouscentre = new javax.swing.JLabel();
        jComboBoxArrondissementSouscentre = new javax.swing.JComboBox<>();
        jComboBoxSouscentre = new javax.swing.JComboBox<>();
        jButtonModifier = new javax.swing.JButton();
        jLabelRégion = new javax.swing.JLabel();
        jComboBoxRegion = new javax.swing.JComboBox<>();
        jLabel2 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DO_NOTHING_ON_CLOSE);
        setResizable(false);

        jLabel1.setFont(new java.awt.Font("Arial", 1, 36)); // NOI18N
        jLabel1.setText("RATTACHEMENT DES ETABLISSEMENTS");

        jTable1.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Id", "N° Ordre", "Région", "Département du sous-centre", "Arrondissement du sous-centre", "Sous-centre", "Département de l'établissement", "Arrondissement de l'établissement", "Etablissement"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jTable1.setShowHorizontalLines(true);
        jTable1.setShowVerticalLines(true);
        jTable1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTable1MouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(jTable1);

        jButtonCreer.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        jButtonCreer.setText("Créer");
        jButtonCreer.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonCreerActionPerformed(evt);
            }
        });

        jButtonRechercher.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        jButtonRechercher.setText("Rechercher");
        jButtonRechercher.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonRechercherActionPerformed(evt);
            }
        });

        jButtonSupprimer.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        jButtonSupprimer.setText("Supprimer");
        jButtonSupprimer.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonSupprimerActionPerformed(evt);
            }
        });

        jButtonAnnuler.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        jButtonAnnuler.setText("Annuler");
        jButtonAnnuler.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonAnnulerActionPerformed(evt);
            }
        });

        jButtonFermer.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        jButtonFermer.setText("Fermer");
        jButtonFermer.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonFermerActionPerformed(evt);
            }
        });

        jPanelEtablissement.setBackground(new java.awt.Color(255, 204, 255));
        jPanelEtablissement.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Etablissement", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Arial", 1, 14), new java.awt.Color(51, 0, 204))); // NOI18N

        jLabeNomEtablissement.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        jLabeNomEtablissement.setText("Nom établissement :");

        jComboBoxEtablissement.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        jComboBoxEtablissement.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBoxEtablissementActionPerformed(evt);
            }
        });

        jLabelArrondissementEtablissement.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        jLabelArrondissementEtablissement.setText("Arrondissement :");

        jComboBoxArrondissementEtablissement.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        jComboBoxArrondissementEtablissement.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBoxArrondissementEtablissementActionPerformed(evt);
            }
        });

        jLabelDepartementEtablissement.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        jLabelDepartementEtablissement.setText("Département :");

        jComboBoxDepartementEtablissement.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        jComboBoxDepartementEtablissement.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBoxDepartementEtablissementActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanelEtablissementLayout = new javax.swing.GroupLayout(jPanelEtablissement);
        jPanelEtablissement.setLayout(jPanelEtablissementLayout);
        jPanelEtablissementLayout.setHorizontalGroup(
            jPanelEtablissementLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanelEtablissementLayout.createSequentialGroup()
                .addContainerGap(33, Short.MAX_VALUE)
                .addGroup(jPanelEtablissementLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabelDepartementEtablissement, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabelArrondissementEtablissement, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabeNomEtablissement, javax.swing.GroupLayout.Alignment.TRAILING))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanelEtablissementLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jComboBoxDepartementEtablissement, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jComboBoxArrondissementEtablissement, 0, 342, Short.MAX_VALUE)
                    .addComponent(jComboBoxEtablissement, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(20, 20, 20))
        );
        jPanelEtablissementLayout.setVerticalGroup(
            jPanelEtablissementLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelEtablissementLayout.createSequentialGroup()
                .addGap(16, 16, 16)
                .addGroup(jPanelEtablissementLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabelDepartementEtablissement, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jComboBoxDepartementEtablissement, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanelEtablissementLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabelArrondissementEtablissement, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jComboBoxArrondissementEtablissement, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanelEtablissementLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabeNomEtablissement, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jComboBoxEtablissement, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanelSouscentre.setBackground(new java.awt.Color(153, 255, 153));
        jPanelSouscentre.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Sous-centre d'examen", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Arial", 1, 14), new java.awt.Color(51, 0, 204))); // NOI18N

        jLabelNomSouscentre.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        jLabelNomSouscentre.setText("Nom sous-centre :");

        jLabelDepartementSouscentre.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        jLabelDepartementSouscentre.setText("Département :");

        jComboBoxDepartementSouscentre.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        jComboBoxDepartementSouscentre.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBoxDepartementSouscentreActionPerformed(evt);
            }
        });

        jLabelArrondissementSouscentre.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        jLabelArrondissementSouscentre.setText("Arrondissement :");

        jComboBoxArrondissementSouscentre.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        jComboBoxArrondissementSouscentre.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBoxArrondissementSouscentreActionPerformed(evt);
            }
        });

        jComboBoxSouscentre.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        jComboBoxSouscentre.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBoxSouscentreActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanelSouscentreLayout = new javax.swing.GroupLayout(jPanelSouscentre);
        jPanelSouscentre.setLayout(jPanelSouscentreLayout);
        jPanelSouscentreLayout.setHorizontalGroup(
            jPanelSouscentreLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelSouscentreLayout.createSequentialGroup()
                .addGap(29, 29, 29)
                .addGroup(jPanelSouscentreLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabelDepartementSouscentre)
                    .addComponent(jLabelArrondissementSouscentre)
                    .addComponent(jLabelNomSouscentre))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanelSouscentreLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jComboBoxArrondissementSouscentre, 0, 342, Short.MAX_VALUE)
                    .addComponent(jComboBoxDepartementSouscentre, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jComboBoxSouscentre, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap(21, Short.MAX_VALUE))
        );
        jPanelSouscentreLayout.setVerticalGroup(
            jPanelSouscentreLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelSouscentreLayout.createSequentialGroup()
                .addGap(16, 16, 16)
                .addGroup(jPanelSouscentreLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jComboBoxDepartementSouscentre, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabelDepartementSouscentre, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanelSouscentreLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabelArrondissementSouscentre, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jComboBoxArrondissementSouscentre, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanelSouscentreLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabelNomSouscentre, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jComboBoxSouscentre, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jButtonModifier.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        jButtonModifier.setText("Modifier");
        jButtonModifier.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonModifierActionPerformed(evt);
            }
        });

        jLabelRégion.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        jLabelRégion.setText("Région :");

        jComboBoxRegion.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        jComboBoxRegion.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBoxRegionActionPerformed(evt);
            }
        });

        jLabel2.setFont(new java.awt.Font("Arial", 1, 36)); // NOI18N
        jLabel2.setText("AUX SOUS-CENTRES D'EXAMEN");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1)
                .addContainerGap())
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(50, Short.MAX_VALUE)
                .addComponent(jPanelSouscentre, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jPanelEtablissement, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(50, 50, 50))
            .addGroup(layout.createSequentialGroup()
                .addGap(225, 225, 225)
                .addComponent(jLabel1)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(373, 373, 373)
                        .addComponent(jLabelRégion)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jComboBoxRegion, javax.swing.GroupLayout.PREFERRED_SIZE, 342, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(277, 277, 277)
                        .addComponent(jButtonCreer)
                        .addGap(18, 18, 18)
                        .addComponent(jButtonRechercher)
                        .addGap(21, 21, 21)
                        .addComponent(jButtonModifier)
                        .addGap(21, 21, 21)
                        .addComponent(jButtonSupprimer)
                        .addGap(18, 18, 18)
                        .addComponent(jButtonAnnuler)
                        .addGap(18, 18, 18)
                        .addComponent(jButtonFermer))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(307, 307, 307)
                        .addComponent(jLabel2)))
                .addGap(0, 0, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(23, 23, 23)
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel2)
                .addGap(26, 26, 26)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabelRégion, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jComboBoxRegion, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jPanelSouscentre, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanelEtablissement, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 20, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jButtonModifier, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jButtonCreer, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jButtonRechercher, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jButtonSupprimer, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jButtonAnnuler, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jButtonFermer, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 172, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void jButtonFermerActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonFermerActionPerformed
        dispose();
    }//GEN-LAST:event_jButtonFermerActionPerformed

    private void jButtonAnnulerActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonAnnulerActionPerformed
        videFrame();
    }//GEN-LAST:event_jButtonAnnulerActionPerformed

    private void jComboBoxRegionActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBoxRegionActionPerformed
        remplirDepartementCombobox();
    }//GEN-LAST:event_jComboBoxRegionActionPerformed

    private void jComboBoxDepartementSouscentreActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBoxDepartementSouscentreActionPerformed
        remplirArrondissementSouscentreCombobox();
    }//GEN-LAST:event_jComboBoxDepartementSouscentreActionPerformed

    private void jComboBoxArrondissementSouscentreActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBoxArrondissementSouscentreActionPerformed
        remplirSouscentreCombobox();
    }//GEN-LAST:event_jComboBoxArrondissementSouscentreActionPerformed

    private void jButtonCreerActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonCreerActionPerformed
        model.setRowCount(0);//vide la jTable
        infoSaisies();
        if (!nomSouscentreSelected.equals("---") && !nomEtablissementSelected.equals("---")) {
            for (Souscentre souscentre : souscentres) {
                if (souscentre.getNomsouscent().equals(nomSouscentreSelected)) {
                    souscentreSelected = souscentre;
                    break;
                }
            }
            for (Etablissement etablissement : etablissements) {
                if (etablissement.getAbreviation().equals(nomEtablissementSelected)) {
                    etablissementSelected = etablissement;
                    break;
                }
            }
            try {
                metier.creerRattachetab(new Rattachetab(souscentreSelected,etablissementSelected));
                JOptionPane.showMessageDialog(this, "Rattachement effectué avec succès !");
                //videFrame();
                int i = 1;
                rattachetabs = metier.findAllRattachetabD1Souscentre(nomSouscentreSelected);  
                for(Rattachetab rattachetab:rattachetabs){
                    model.insertRow(model.getRowCount(), new Object[]{rattachetab.getIdratetab(),i++,rattachetab.getSouscentre().getEtablissement().getArrondissement().getDepartement().getRegion().getNomreg(),rattachetab.getSouscentre().getEtablissement().getArrondissement().getDepartement().getNomdepart(),rattachetab.getSouscentre().getEtablissement().getArrondissement().getNomarr(),rattachetab.getSouscentre().getNomsouscent(),rattachetab.getEtablissement().getArrondissement().getDepartement().getNomdepart(),rattachetab.getEtablissement().getArrondissement().getNomarr(),rattachetab.getEtablissement().getAbreviation()});
                }                            
            } catch (ObcbudgetException ex) {
                JOptionPane.showMessageDialog(this, "Impossible d'extraire les établissements rattachés au sous-centre [" + nomSouscentreSelected + "] \n raison:" + ex.getMessage());
            }
        } else {
            JOptionPane.showMessageDialog(this, "Tous les champs sont obligatoires !");
        }
        rattachetabs.clear();
    }//GEN-LAST:event_jButtonCreerActionPerformed

    private void jButtonRechercherActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonRechercherActionPerformed
        model.setRowCount(0);//vide la jTable
        infoSaisies();       
        if (!nomSouscentreSelected.equals("---")) {
            try{
                int i = 1;
                rattachetabs = metier.findAllRattachetabD1Souscentre(nomSouscentreSelected);  
                for(Rattachetab rattachetab:rattachetabs){
                    model.insertRow(model.getRowCount(), new Object[]{rattachetab.getIdratetab(),i++,rattachetab.getSouscentre().getEtablissement().getArrondissement().getDepartement().getRegion().getNomreg(),rattachetab.getSouscentre().getEtablissement().getArrondissement().getDepartement().getNomdepart(),rattachetab.getSouscentre().getEtablissement().getArrondissement().getNomarr(),rattachetab.getSouscentre().getNomsouscent(),rattachetab.getEtablissement().getArrondissement().getDepartement().getNomdepart(),rattachetab.getEtablissement().getArrondissement().getNomarr(),rattachetab.getEtablissement().getAbreviation()});
                }   
            }catch (ObcbudgetException ex) {
                    JOptionPane.showMessageDialog(this, "Impossible d'extraire les établissements rattachés au sous-centre [" + nomSouscentreSelected + "] \n raison:" + ex.getMessage());
                }
        }
        else JOptionPane.showMessageDialog(this, "Le champ nom sous-centre est obligatoire. !");
        rattachetabs.clear();
    }//GEN-LAST:event_jButtonRechercherActionPerformed

    private void jTable1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTable1MouseClicked
        //remplit les champs
        int ligne = jTable1.getSelectedRow();
        idRattachetabCliked=(int) model.getValueAt(ligne, 0);
        jComboBoxRegion.setSelectedItem((String) model.getValueAt(ligne, 2));
        jComboBoxDepartementSouscentre.setSelectedItem((String) model.getValueAt(ligne, 3));
        jComboBoxArrondissementSouscentre.setSelectedItem((String) model.getValueAt(ligne, 4));
        jComboBoxSouscentre.setSelectedItem((String) model.getValueAt(ligne, 5));
        jComboBoxDepartementEtablissement.setSelectedItem((String) model.getValueAt(ligne, 6));
        jComboBoxArrondissementEtablissement.setSelectedItem((String) model.getValueAt(ligne, 7));       
        jComboBoxEtablissement.setSelectedItem((String) model.getValueAt(ligne, 8));
    }//GEN-LAST:event_jTable1MouseClicked

    private void jButtonSupprimerActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonSupprimerActionPerformed
        model.setRowCount(0);//vide la jTable
        infoSaisies();
        int result = JOptionPane.showConfirmDialog(this, "Voulez-vous vraiment supprimer ce rattachement au sous-centre [" + nomSouscentreSelected+"] ?", "confirmation de suppression", JOptionPane.YES_NO_OPTION, JOptionPane.QUESTION_MESSAGE);
        if (result == JOptionPane.YES_OPTION) {
            if(!nomSouscentreSelected.equals("---") && !nomEtablissementSelected.equals("---")){                
                try{
                    metier.supprimerRattachetab(metier.findRattachetabById(idRattachetabCliked));
                    JOptionPane.showMessageDialog(this, "Rattachement de l'établissement [" +nomEtablissementSelected+" ] au sous-centre [" + nomSouscentreSelected+"] supprimé avec succès !"); 
                    rattachetab = metier.findRattachetabD1Etablissement(nomEtablissementSelected);               
                    int i=0;
                    model.insertRow(model.getRowCount(), new Object[]{rattachetab.getIdratetab(),i++,rattachetab.getSouscentre().getEtablissement().getArrondissement().getDepartement().getRegion().getNomreg(),rattachetab.getSouscentre().getEtablissement().getArrondissement().getDepartement().getNomdepart(),rattachetab.getSouscentre().getEtablissement().getArrondissement().getNomarr(),rattachetab.getSouscentre().getNomsouscent(),rattachetab.getEtablissement().getArrondissement().getDepartement().getNomdepart(),rattachetab.getEtablissement().getArrondissement().getNomarr(),rattachetab.getEtablissement().getAbreviation()});                
                }catch(ObcbudgetException ex){
                    JOptionPane.showMessageDialog(this, "Impossible d'extraire le rattachement de l'établissement [" +nomEtablissementSelected+"] au sous-centre [" +nomSouscentreSelected+"]\n raison:"+ex.getMessage()); 
                }                        
            }
            else JOptionPane.showMessageDialog(this, "Tous les champs sont obligatoires !"); 
        }      
    }//GEN-LAST:event_jButtonSupprimerActionPerformed

    private void jComboBoxEtablissementActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBoxEtablissementActionPerformed
        //
    }//GEN-LAST:event_jComboBoxEtablissementActionPerformed

    private void jComboBoxSouscentreActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBoxSouscentreActionPerformed
        //
    }//GEN-LAST:event_jComboBoxSouscentreActionPerformed

    private void jComboBoxArrondissementEtablissementActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBoxArrondissementEtablissementActionPerformed
        remplirEtablissementCombobox();
    }//GEN-LAST:event_jComboBoxArrondissementEtablissementActionPerformed

    private void jComboBoxDepartementEtablissementActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBoxDepartementEtablissementActionPerformed
        remplirArrondissementEtablissementCombobox();
    }//GEN-LAST:event_jComboBoxDepartementEtablissementActionPerformed

    private void jButtonModifierActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonModifierActionPerformed
        model.setRowCount(0);//vide la jTable
        infoSaisies();
        int result = JOptionPane.showConfirmDialog(this,"Voulez-vous vraiment modifier le rattachement de l'établissement [" +nomEtablissementSelected+"] au sous-centre [" + nomSouscentreSelected+"] ?", "confirmation de modification",JOptionPane.YES_NO_OPTION,JOptionPane.QUESTION_MESSAGE);
        if(result == JOptionPane.YES_OPTION){
            if (!nomSouscentreSelected.equals("---") && !nomEtablissementSelected.equals("---")) {
                for (Souscentre souscentre : souscentres) {
                    if (souscentre.getNomsouscent().equals(nomSouscentreSelected)) {
                        souscentreSelected = souscentre;
                        break;
                    }
                }
                for (Etablissement etablissement : etablissements) {
                    if (etablissement.getAbreviation().equals(nomEtablissementSelected)) {
                        etablissementSelected = etablissement;
                        break;
                    }
                }
                rattachetabCliked=metier.findRattachetabById(idRattachetabCliked);
                rattachetabCliked.setSouscentre(souscentreSelected);
                rattachetabCliked.setEtablissement(etablissementSelected);
                try {
                    metier.modifierRattachetab(rattachetabCliked);
                    JOptionPane.showMessageDialog(this, "Rattachement de l'établissement [" +nomEtablissementSelected+"] au sous-centre [" + nomSouscentreSelected+"] modifié avec succès !");
                    //videFrame();
                    rattachetab = metier.findRattachetabD1Etablissement(nomEtablissementSelected);               
                    int i=0;
                    model.insertRow(model.getRowCount(), new Object[]{rattachetab.getIdratetab(),i++,rattachetab.getSouscentre().getEtablissement().getArrondissement().getDepartement().getRegion().getNomreg(),rattachetab.getSouscentre().getEtablissement().getArrondissement().getDepartement().getNomdepart(),rattachetab.getSouscentre().getEtablissement().getArrondissement().getNomarr(),rattachetab.getSouscentre().getNomsouscent(),rattachetab.getEtablissement().getArrondissement().getDepartement().getNomdepart(),rattachetab.getEtablissement().getArrondissement().getNomarr(),rattachetab.getEtablissement().getAbreviation()});  
                } catch (ObcbudgetException ex) {
                    JOptionPane.showMessageDialog(this, "Impossible d'extraire le rattachement de l'établissement [" +nomEtablissementSelected+"] au sous-centre ["+nomSouscentreSelected+"]\n raison:"+ex.getMessage());
                }
            } else {
                JOptionPane.showMessageDialog(this, "Tous les champs sont obligatoires !");
            }
        } 
    }//GEN-LAST:event_jButtonModifierActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;

                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(VueRattachEtablissement.class
                        .getName()).log(java.util.logging.Level.SEVERE, null, ex);

        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(VueRattachEtablissement.class
                        .getName()).log(java.util.logging.Level.SEVERE, null, ex);

        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(VueRattachEtablissement.class
                        .getName()).log(java.util.logging.Level.SEVERE, null, ex);

        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(VueRattachEtablissement.class
                        .getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }     


        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new VueRattachEtablissement().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.JButton jButtonAnnuler;
    private javax.swing.JButton jButtonCreer;
    private javax.swing.JButton jButtonFermer;
    private javax.swing.JButton jButtonModifier;
    private javax.swing.JButton jButtonRechercher;
    private javax.swing.JButton jButtonSupprimer;
    private javax.swing.JComboBox<String> jComboBoxArrondissementEtablissement;
    private javax.swing.JComboBox<String> jComboBoxArrondissementSouscentre;
    private javax.swing.JComboBox<String> jComboBoxDepartementEtablissement;
    private javax.swing.JComboBox<String> jComboBoxDepartementSouscentre;
    private javax.swing.JComboBox<String> jComboBoxEtablissement;
    private javax.swing.JComboBox<String> jComboBoxRegion;
    private javax.swing.JComboBox<String> jComboBoxSouscentre;
    private javax.swing.JLabel jLabeNomEtablissement;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabelArrondissementEtablissement;
    private javax.swing.JLabel jLabelArrondissementSouscentre;
    private javax.swing.JLabel jLabelDepartementEtablissement;
    private javax.swing.JLabel jLabelDepartementSouscentre;
    private javax.swing.JLabel jLabelNomSouscentre;
    private javax.swing.JLabel jLabelRégion;
    private javax.swing.JPanel jPanelEtablissement;
    private javax.swing.JPanel jPanelSouscentre;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTable1;
    // End of variables declaration//GEN-END:variables

    // variables d'instance
    private IMetier metier = null;
    private List<Region> regions = null;
    private String[] regionsCombo = null;
    private List<Departement> departements = null;
    private List<Arrondissement> arrondissements = null;
    private String[] departementsSouscentreCombo = null;
    private String[] departementsEtablissementCombo = null;
    private String[] arrondissementsSouscentreCombo = null;
    private String[] arrondissementsEtablissementCombo = null;
    private String[] souscentresCombo = null;
    private String[] etablissementsCombo = null;
    private List<Souscentre> souscentres = null;
    private Departement departementSouscentreSelected = null;
    private Arrondissement arrondissementSouscentreSelected = null;
    private Departement departementEtablissementSelected = null;
    private Arrondissement arrondissementEtablissementSelected = null;
    private Souscentre souscentreSelected = null;
    private String nomSouscentreSelected = "";
    private String nomRegionSelected = "";
    private String nomDepartementSouscentreSelected = "";
    private String nomArrondissementSouscentreSelected = "";
    private String nomDepartementEtablissementSelected = "";
    private String nomArrondissementEtablissementSelected = "";
    private List<Rattachetab> rattachetabs = null;
    private Rattachetab rattachetab = null;
    private List<Etablissement> etablissements = null;
    private Etablissement etablissementSelected=null;
    private String nomEtablissementSelected = "";
    private Souscentre souscentre=null;
    private int idRattachetabCliked=0;
    private Rattachetab rattachetabCliked = null;

    private void doMyInit() {
        // init contexte
        // instanciation couche [metier]
        ApplicationContext ctx = new ClassPathXmlApplicationContext("spring-config-metier.xml");
        metier = (IMetier) ctx.getBean("metier");
        regions = metier.findAllRegions();
        souscentres = metier.findAllSouscentres();
        etablissements=metier.findAllEtablissements();

        //on remplit la combobox des régions
        regionsCombo = new String[regions.size() + 1];
        regionsCombo[0] = "---";
        int i = 1;
        for (Region region : regions) {
            regionsCombo[i++] = region.getNomreg();
        }
        jComboBoxRegion.setModel(new DefaultComboBoxModel(regionsCombo));

        remplirDepartementCombobox();
        remplirArrondissementEtablissementCombobox();
        remplirArrondissementSouscentreCombobox();
        remplirSouscentreCombobox();
        remplirEtablissementCombobox();
    }

    private void infoSaisies() {
        nomRegionSelected = (String) jComboBoxRegion.getSelectedItem();
        nomDepartementSouscentreSelected = (String) jComboBoxDepartementSouscentre.getSelectedItem();
        nomArrondissementSouscentreSelected = (String) jComboBoxArrondissementSouscentre.getSelectedItem();
        nomDepartementEtablissementSelected = (String) jComboBoxDepartementEtablissement.getSelectedItem();
        nomArrondissementEtablissementSelected = (String) jComboBoxArrondissementEtablissement.getSelectedItem();
        nomSouscentreSelected = (String) jComboBoxSouscentre.getSelectedItem();
        nomEtablissementSelected = (String) jComboBoxEtablissement.getSelectedItem();       
    }

    private void videFrame() {
        jComboBoxRegion.setSelectedIndex(0);
        jComboBoxDepartementSouscentre.setSelectedIndex(0);
        jComboBoxArrondissementSouscentre.setSelectedIndex(0);
        jComboBoxDepartementEtablissement.setSelectedIndex(0);
        jComboBoxArrondissementEtablissement.setSelectedIndex(0);
        jComboBoxSouscentre.setSelectedIndex(0);
        jComboBoxEtablissement.setSelectedIndex(0);
        model.setRowCount(0);//vide la jTable       

    }

    private void remplirDepartementCombobox() {
        nomRegionSelected = (String) jComboBoxRegion.getSelectedItem();
        departements = metier.findAllDepartementsD1Region(nomRegionSelected);
        //on remplit la combobox des départements
        departementsSouscentreCombo = new String[departements.size() + 1];
        departementsEtablissementCombo = new String[departements.size() + 1];
        departementsSouscentreCombo[0] = "---";
        departementsEtablissementCombo[0] = "---";
        int i = 1;
        for (Departement departement : departements) {
            departementsSouscentreCombo[i++] = departement.getNomdepart();
        }
        int j= 1;
        for (Departement departement : departements) {
            departementsEtablissementCombo[j++] = departement.getNomdepart();
        }
        jComboBoxDepartementSouscentre.setModel(new DefaultComboBoxModel(departementsSouscentreCombo));
        jComboBoxDepartementEtablissement.setModel(new DefaultComboBoxModel(departementsEtablissementCombo));
    }

    private void remplirArrondissementEtablissementCombobox() {
        nomDepartementEtablissementSelected = (String) jComboBoxDepartementEtablissement.getSelectedItem();
        arrondissements = metier.findAllArrondissementsD1Departement(nomDepartementEtablissementSelected);
        //on remplit la combobox des arrondissements de l'établissement
        arrondissementsEtablissementCombo = new String[arrondissements.size() + 1];
        arrondissementsEtablissementCombo[0] = "---";
        int i = 1;
        for (Arrondissement arrondissement : arrondissements) {
            arrondissementsEtablissementCombo[i++] = arrondissement.getNomarr();
        }
        jComboBoxArrondissementEtablissement.setModel(new DefaultComboBoxModel(arrondissementsEtablissementCombo));
    }
    
    private void remplirArrondissementSouscentreCombobox() {
        nomDepartementSouscentreSelected = (String) jComboBoxDepartementSouscentre.getSelectedItem();
        arrondissements = metier.findAllArrondissementsD1Departement(nomDepartementSouscentreSelected);
        //on remplit la combobox des arrondissements du sous-centre
        arrondissementsSouscentreCombo = new String[arrondissements.size() + 1];
        arrondissementsSouscentreCombo[0] = "---";
        int i = 1;
        for (Arrondissement arrondissement : arrondissements) {
            arrondissementsSouscentreCombo[i++] = arrondissement.getNomarr();
        }
        jComboBoxArrondissementSouscentre.setModel(new DefaultComboBoxModel(arrondissementsSouscentreCombo));
    }

    private void remplirSouscentreCombobox() {
        nomArrondissementSouscentreSelected = (String) jComboBoxArrondissementSouscentre.getSelectedItem();
        souscentres = metier.findAllSouscentresD1Arrondissement(nomArrondissementSouscentreSelected);
        //on remplit la combobox des sous-centres
        souscentresCombo = new String[souscentres.size() + 1];
        souscentresCombo[0] = "---";
        int i = 1;
        for (Souscentre souscentre : souscentres) {
            souscentresCombo[i++] =souscentre.getNomsouscent() ;
        }
        jComboBoxSouscentre.setModel(new DefaultComboBoxModel(souscentresCombo));
    }

    private void remplirEtablissementCombobox() {
        nomArrondissementEtablissementSelected = (String) jComboBoxArrondissementEtablissement.getSelectedItem();
        etablissements = metier.findAllEtablissementsD1Arrondissement(nomArrondissementEtablissementSelected);
        //on remplit la combobox des établissements
        etablissementsCombo = new String[etablissements.size() + 1];
        etablissementsCombo[0] = "---";
        int i = 1;
        for (Etablissement etablisssement : etablissements) {
            etablissementsCombo[i++] = etablisssement.getAbreviation();
        }
        jComboBoxEtablissement.setModel(new DefaultComboBoxModel(etablissementsCombo));
    }
}
