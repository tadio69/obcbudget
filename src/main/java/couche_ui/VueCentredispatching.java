package couche_ui;

import couche_jpa.Arrondissement;
import couche_jpa.Centredispatching;
import couche_jpa.Departement;
import couche_jpa.Etablissement;
import couche_jpa.Famille;
import couche_jpa.Region;
import couche_metier.IMetier;
import exception.ObcbudgetException;
import java.util.List;
import javax.swing.DefaultComboBoxModel;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import org.springframework.context.ApplicationContext;
import org.springframework.context.support.ClassPathXmlApplicationContext;

/**
 *
 * @author famille chijou
 */
public class VueCentredispatching extends javax.swing.JFrame {

    DefaultTableModel model;

    public VueCentredispatching() {
        initComponents();
        model = (DefaultTableModel) jTable1.getModel();
        doMyInit();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroup1 = new javax.swing.ButtonGroup();
        jButtonRechercher = new javax.swing.JButton();
        jLabelNomcentre = new javax.swing.JLabel();
        jButtonSupprimer = new javax.swing.JButton();
        jComboBoxNomcentre = new javax.swing.JComboBox<>();
        jButtonAnnuler = new javax.swing.JButton();
        jLabelTypecentre = new javax.swing.JLabel();
        jButtonFermer = new javax.swing.JButton();
        jComboBoxTypecentre = new javax.swing.JComboBox<>();
        jLabelRegion = new javax.swing.JLabel();
        jLabelDepartement = new javax.swing.JLabel();
        jComboBoxRegion2 = new javax.swing.JComboBox<>();
        jComboBoxDepartement = new javax.swing.JComboBox<>();
        jLabelArrondissement = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jComboBoxArrondissement = new javax.swing.JComboBox<>();
        jLabel1 = new javax.swing.JLabel();
        jButtonCreer = new javax.swing.JButton();
        jLabel4 = new javax.swing.JLabel();
        jComboBoxFamille = new javax.swing.JComboBox<>();

        setDefaultCloseOperation(javax.swing.WindowConstants.DO_NOTHING_ON_CLOSE);
        setResizable(false);

        jButtonRechercher.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        jButtonRechercher.setText("Rechercher");
        jButtonRechercher.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonRechercherActionPerformed(evt);
            }
        });

        jLabelNomcentre.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        jLabelNomcentre.setText("Nom du centre :");

        jButtonSupprimer.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        jButtonSupprimer.setText("Supprimer");
        jButtonSupprimer.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonSupprimerActionPerformed(evt);
            }
        });

        jComboBoxNomcentre.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N

        jButtonAnnuler.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        jButtonAnnuler.setText("Annuler");
        jButtonAnnuler.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonAnnulerActionPerformed(evt);
            }
        });

        jLabelTypecentre.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        jLabelTypecentre.setText("Type de centre:");

        jButtonFermer.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        jButtonFermer.setText("Fermer");
        jButtonFermer.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonFermerActionPerformed(evt);
            }
        });

        jComboBoxTypecentre.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N

        jLabelRegion.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        jLabelRegion.setText("Région :");

        jLabelDepartement.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        jLabelDepartement.setText("Département :");

        jComboBoxRegion2.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        jComboBoxRegion2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBoxRegion2ActionPerformed(evt);
            }
        });

        jComboBoxDepartement.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        jComboBoxDepartement.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBoxDepartementActionPerformed(evt);
            }
        });

        jLabelArrondissement.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        jLabelArrondissement.setText("Arrondissement :");

        jTable1.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Id", "N° Ordre", "Région", "Département", "Arrondissement", "Nom du centre", "Type de centre", "Famille de séries", "Version"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jTable1.setShowHorizontalLines(true);
        jTable1.setShowVerticalLines(true);
        jTable1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTable1MouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(jTable1);

        jComboBoxArrondissement.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        jComboBoxArrondissement.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBoxArrondissementActionPerformed(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Arial", 1, 36)); // NOI18N
        jLabel1.setText("CENTRE DE REGROUPEMENT OU DE VENTILATION");

        jButtonCreer.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        jButtonCreer.setText("Créer");
        jButtonCreer.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonCreerActionPerformed(evt);
            }
        });

        jLabel4.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        jLabel4.setText("Famille de séries :");

        jComboBoxFamille.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(87, 87, 87)
                                .addComponent(jLabel1))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(279, 279, 279)
                                .addComponent(jButtonCreer)
                                .addGap(18, 18, 18)
                                .addComponent(jButtonRechercher)
                                .addGap(18, 18, 18)
                                .addComponent(jButtonSupprimer)
                                .addGap(18, 18, 18)
                                .addComponent(jButtonAnnuler)
                                .addGap(18, 18, 18)
                                .addComponent(jButtonFermer)))
                        .addGap(0, 102, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jScrollPane1)))
                .addContainerGap())
            .addGroup(layout.createSequentialGroup()
                .addGap(75, 75, 75)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabelArrondissement)
                    .addComponent(jLabelDepartement)
                    .addComponent(jLabelRegion))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jComboBoxDepartement, javax.swing.GroupLayout.PREFERRED_SIZE, 311, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jLabelTypecentre))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jComboBoxRegion2, javax.swing.GroupLayout.PREFERRED_SIZE, 313, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jLabelNomcentre))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jComboBoxArrondissement, javax.swing.GroupLayout.PREFERRED_SIZE, 311, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jLabel4)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jComboBoxFamille, javax.swing.GroupLayout.PREFERRED_SIZE, 243, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jComboBoxNomcentre, javax.swing.GroupLayout.PREFERRED_SIZE, 323, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jComboBoxTypecentre, javax.swing.GroupLayout.PREFERRED_SIZE, 259, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(70, 70, 70))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(31, 31, 31)
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(31, 31, 31)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabelRegion, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jComboBoxRegion2, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabelNomcentre, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jComboBoxNomcentre, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(87, 87, 87)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabelDepartement, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jComboBoxDepartement, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabelTypecentre, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jComboBoxTypecentre, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabelArrondissement, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jComboBoxArrondissement, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jComboBoxFamille, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jButtonAnnuler, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jButtonSupprimer, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jButtonRechercher, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jButtonFermer, javax.swing.GroupLayout.DEFAULT_SIZE, 39, Short.MAX_VALUE)
                    .addComponent(jButtonCreer, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(20, 20, 20)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 216, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void jTable1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTable1MouseClicked
        //remplit les champs
        int ligne = jTable1.getSelectedRow();
        idCentredispatchingCliked = (int) model.getValueAt(ligne, 0);
        jComboBoxRegion2.setSelectedItem((String) model.getValueAt(ligne, 2));
        jComboBoxDepartement.setSelectedItem((String) model.getValueAt(ligne, 3));
        jComboBoxArrondissement.setSelectedItem((String) model.getValueAt(ligne, 4));
        jComboBoxNomcentre.setSelectedItem((String) model.getValueAt(ligne, 5));
        jComboBoxTypecentre.setSelectedItem((String) model.getValueAt(ligne, 6));
        jComboBoxFamille.setSelectedItem((String) model.getValueAt(ligne, 7));
    }//GEN-LAST:event_jTable1MouseClicked

    private void jButtonAnnulerActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonAnnulerActionPerformed
        videFrame();
    }//GEN-LAST:event_jButtonAnnulerActionPerformed

    private void jButtonSupprimerActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonSupprimerActionPerformed
        infoSaisies();
        int result = JOptionPane.showConfirmDialog(this, "Voulez-vous vraiment supprimer ce centre de regroupement/ventilation?", "confirmation de suppression", JOptionPane.YES_NO_OPTION, JOptionPane.QUESTION_MESSAGE);
        if (result == JOptionPane.YES_OPTION) {
            if (!nomCentreSelected.equals("---")) {
                try {
                    Centredispatching centredispatching = metier.findCentredispatchingById(idCentredispatchingCliked);
                    metier.supprimerCentredispatching(centredispatching);
                    JOptionPane.showMessageDialog(this, "Centre de " + typeSelected + " supprimé avec succès !");
                    model.setRowCount(0);//vide la jTable
                    int i = 1;
                    centresdispatching = metier.findAllCentresdispatchingD1Arrondissement(nomArrondissementSelected);
                    for (Centredispatching c : centresdispatching) {                        
                        model.insertRow(model.getRowCount(), new Object[]{c.getIdcentdispatch(), i++, c.getEtablissement().getArrondissement().getDepartement().getRegion().getNomreg(), c.getEtablissement().getArrondissement().getDepartement().getNomdepart(), c.getEtablissement().getArrondissement().getNomarr(), c.getEtablissement().getAbreviation(), c.getType(), c.getFamille().getTitre(), c.getVersion()});                      
                    }
                } catch (ObcbudgetException ex) {
                    JOptionPane.showMessageDialog(this, "Impossible de supprimer le centre de " + typeSelected + " de nom [" + nomCentreSelected + "] \n raison:" + ex.getMessage());
                }
            } else {
                JOptionPane.showMessageDialog(this, "Les champs nom et type de centre sont obligatoires !");
            }
        }
    }//GEN-LAST:event_jButtonSupprimerActionPerformed

    private void jButtonRechercherActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonRechercherActionPerformed
        model.setRowCount(0);//vide la jTable
        infoSaisies();
        if (!nomCentreSelected.equals("---")) {
            try {
                centredispatchingRecherche = metier.findCentredispatchingLikeName(nomCentreSelected);//quand il existe, il est unique               
                int i=1;
                model.insertRow(model.getRowCount(), new Object[]{centredispatchingRecherche.getIdcentdispatch(), i++, centredispatchingRecherche.getEtablissement().getArrondissement().getDepartement().getRegion().getNomreg(), centredispatchingRecherche.getEtablissement().getArrondissement().getDepartement().getNomdepart(), centredispatchingRecherche.getEtablissement().getArrondissement().getNomarr(), centredispatchingRecherche.getEtablissement().getAbreviation(), centredispatchingRecherche.getType(), centredispatchingRecherche.getFamille().getTitre(), centredispatchingRecherche.getVersion()});  
            } catch (ObcbudgetException ex) {
                JOptionPane.showMessageDialog(this, "Il n'existe aucun centre de regroupement ou de ventilation de nom proche de [" + nomCentreSelected + "] \n raison:" + ex.getMessage());
            }
        } else {
            if (!nomRegionSelected.equals("---")) {
                try {
                    centresdispatchingRecherches = metier.findAllCentresdispatchingD1Region(nomRegionSelected);
                    int i = 1;
                    for (Centredispatching c : centresdispatchingRecherches) {
                        model.insertRow(model.getRowCount(), new Object[]{c.getIdcentdispatch(), i++, c.getEtablissement().getArrondissement().getDepartement().getRegion().getNomreg(), c.getEtablissement().getArrondissement().getDepartement().getNomdepart(), c.getEtablissement().getArrondissement().getNomarr(), c.getEtablissement().getAbreviation(), c.getType(), c.getFamille().getTitre(), c.getVersion()});
                    }
                } catch (ObcbudgetException ex) {
                    JOptionPane.showMessageDialog(this, "Il n'existe aucun centre de regroupement ou de ventilation dans la région [" + nomRegionSelected + "] \n raison:" + ex.getMessage());
                }
            } else {
                JOptionPane.showMessageDialog(this, "Le champ nom du centre est obligatoire !");
            }
        }
    }//GEN-LAST:event_jButtonRechercherActionPerformed

    private void jButtonCreerActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonCreerActionPerformed
        model.setRowCount(0);//vide la jTable
        infoSaisies();
        Centredispatching centredispatchingCreated = null;
        boolean testSiCentredispatchingExiste = false;
        if (!nomCentreSelected.equals("---") && !typeSelected.equals("---") && !titreFamilleSelected.equals("---")) {
            for (Etablissement e : etablissements) {
                if (e.getAbreviation().equals(nomCentreSelected)) {
                    etablissementSelected = e;
                    break;
                }
            }
            centresdispatching = metier.findAllCentresdispatchingD1Region(nomRegionSelected);
            for (Centredispatching centredispatching : centresdispatching) {
                if (centredispatching.getEtablissement().getAbreviation().equals(nomCentreSelected) && centredispatching.getType().equals(typeSelected)) {
                    testSiCentredispatchingExiste = true;
                    //centredispatchingCreated = centredispatching;
                    break;
                }
            }
            if (!testSiCentredispatchingExiste) {
                try {
                    Famille famille =metier.findFamilleByTitre(titreFamilleSelected);
                    centredispatchingCreated = new Centredispatching(etablissementSelected, typeSelected,famille);
                    metier.creerCentredispatching(centredispatchingCreated);
                    JOptionPane.showMessageDialog(this, " Centre de " + typeSelected + " créé avec succès !");
                    int i = 1;
                    centresdispatching = metier.findAllCentresdispatchingD1Arrondissement(nomArrondissementSelected);
                    for (Centredispatching c : centresdispatching) {
                        model.insertRow(model.getRowCount(), new Object[]{c.getIdcentdispatch(), i++, c.getEtablissement().getArrondissement().getDepartement().getRegion().getNomreg(), c.getEtablissement().getArrondissement().getDepartement().getNomdepart(), c.getEtablissement().getArrondissement().getNomarr(), c.getEtablissement().getAbreviation(), c.getType(), c.getFamille().getTitre(), c.getVersion()});
                    }    
                } catch (ObcbudgetException ex) {
                    JOptionPane.showMessageDialog(this, "Impossible de créer le centre de " + typeSelected + " de nom [" + nomCentreSelected + "] \n raison:" + ex.getMessage());
                }
            }
            else JOptionPane.showMessageDialog(this, "Erreur, ce centre de " + typeSelected + " existe déjà.");
        } else {
            JOptionPane.showMessageDialog(this, "Veuillez sélectionner un nom de centre, un type de centre et Oui ou Non svp !");
        }
    }//GEN-LAST:event_jButtonCreerActionPerformed

    private void jButtonFermerActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonFermerActionPerformed
        dispose();
    }//GEN-LAST:event_jButtonFermerActionPerformed

    private void jComboBoxDepartementActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBoxDepartementActionPerformed
        remplirArrondissementCombobox();
    }//GEN-LAST:event_jComboBoxDepartementActionPerformed

    private void jComboBoxRegion2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBoxRegion2ActionPerformed
        remplirDepartementCombobox();
    }//GEN-LAST:event_jComboBoxRegion2ActionPerformed

    private void jComboBoxArrondissementActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBoxArrondissementActionPerformed
        remplirCentreCombobox();
    }//GEN-LAST:event_jComboBoxArrondissementActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(VueCentredispatching.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(VueCentredispatching.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(VueCentredispatching.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(VueCentredispatching.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new VueCentredispatching().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.JButton jButtonAnnuler;
    private javax.swing.JButton jButtonCreer;
    private javax.swing.JButton jButtonFermer;
    private javax.swing.JButton jButtonRechercher;
    private javax.swing.JButton jButtonSupprimer;
    private javax.swing.JComboBox<String> jComboBoxArrondissement;
    private javax.swing.JComboBox<String> jComboBoxDepartement;
    private javax.swing.JComboBox<String> jComboBoxFamille;
    private javax.swing.JComboBox<String> jComboBoxNomcentre;
    private javax.swing.JComboBox<String> jComboBoxRegion2;
    private javax.swing.JComboBox<String> jComboBoxTypecentre;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabelArrondissement;
    private javax.swing.JLabel jLabelDepartement;
    private javax.swing.JLabel jLabelNomcentre;
    private javax.swing.JLabel jLabelRegion;
    private javax.swing.JLabel jLabelTypecentre;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTable1;
    // End of variables declaration//GEN-END:variables

    // variables d'instance
    private IMetier metier = null;
    private List<Region> regions = null;
    private List<Departement> departements = null;
    private List<Arrondissement> arrondissements = null;
    private List<Famille> familles = null;
    private String[] centresCombo = null;
    private String[] typesCombo = null;
    private String[] famillesCombo = null;
    private String[] regionsCombo = null;
    private String[] departementsCombo = null;
    private String[] arrondissementsCombo = null;
    private String typeSelected = "";
    private String nomRegionSelected = "";
    private String nomDepartementSelected = "";
    private String nomArrondissementSelected = "";
    private String titreFamilleSelected = "";
    private Departement departementSelected = null;
    private Famille familleSelected = null;
    private Arrondissement arrondissementSelected = null;
    private String nomCentreSelected = "";
    private List<Centredispatching> centresdispatching = null;
    private Centredispatching centredispatchingRecherche = null;
    private List<Etablissement> etablissements = null;
    private Etablissement etablissementSelected = null;
    private int idCentredispatchingCliked = 0;
    private Centredispatching centredispatchingSelected = null;
    private Centredispatching centredispatchingCliked = null;
    private List<Centredispatching> centresdispatchingRecherches = null;

    private void doMyInit() {
        // init contexte
        // instanciation couche [metier]
        ApplicationContext ctx = new ClassPathXmlApplicationContext("spring-config-metier.xml");
        metier = (IMetier) ctx.getBean("metier");
        regions = metier.findAllRegions();
        familles = metier.findAllFamilles();

        //on remplit la combobox des types
        typesCombo = new String[]{"---", "Regroupement", "Ventilation","Ventilation spéciale","Tri"};
        jComboBoxTypecentre.setModel(new DefaultComboBoxModel(typesCombo));
        
        //on remplit la combobox des familles de séries
        famillesCombo = new String[familles.size() + 1];
        famillesCombo[0] = "---";
        int i = 1;
        for (Famille famille : familles) {
            famillesCombo[i++] = famille.getTitre();
        }
        jComboBoxFamille.setModel(new DefaultComboBoxModel(famillesCombo));

        //on remplit la combobox des régions
        regionsCombo = new String[regions.size() + 1];
        regionsCombo[0] = "---";
        int j = 1;
        for (Region region : regions) {
            regionsCombo[j++] = region.getNomreg();
        }
        jComboBoxRegion2.setModel(new DefaultComboBoxModel(regionsCombo));

        remplirDepartementCombobox();
        remplirArrondissementCombobox();
        remplirCentreCombobox();
    }

    private void infoSaisies() {
        nomRegionSelected = (String) jComboBoxRegion2.getSelectedItem();
        nomDepartementSelected = (String) jComboBoxDepartement.getSelectedItem();
        nomArrondissementSelected = (String) jComboBoxArrondissement.getSelectedItem();
        nomCentreSelected = (String) jComboBoxNomcentre.getSelectedItem();
        typeSelected = (String) jComboBoxTypecentre.getSelectedItem();
        titreFamilleSelected=(String) jComboBoxFamille.getSelectedItem();
    }

    private void videFrame() {
        jComboBoxRegion2.setSelectedIndex(0);
        jComboBoxDepartement.setSelectedIndex(0);
        jComboBoxArrondissement.setSelectedIndex(0);
        jComboBoxNomcentre.setSelectedIndex(0);
        jComboBoxTypecentre.setSelectedIndex(0);
        //buttonGroup1.clearSelection();
        jComboBoxFamille.setSelectedIndex(0);
        model.setRowCount(0);//vide la jTable
    }

    private void remplirDepartementCombobox() {
        nomRegionSelected = (String) jComboBoxRegion2.getSelectedItem();
        departements = metier.findAllDepartementsD1Region(nomRegionSelected);
        //on remplit la combobox des départements
        departementsCombo = new String[departements.size() + 1];
        departementsCombo[0] = "---";
        int i = 1;
        for (Departement departement : departements) {
            departementsCombo[i++] = departement.getNomdepart();
        }
        jComboBoxDepartement.setModel(new DefaultComboBoxModel(departementsCombo));
    }

    private void remplirArrondissementCombobox() {
        nomDepartementSelected = (String) jComboBoxDepartement.getSelectedItem();
        arrondissements = metier.findAllArrondissementsD1Departement(nomDepartementSelected);
        //on remplit la combobox des arrondissements
        arrondissementsCombo = new String[arrondissements.size() + 1];
        arrondissementsCombo[0] = "---";
        int i = 1;
        for (Arrondissement arrondissement : arrondissements) {
            arrondissementsCombo[i++] = arrondissement.getNomarr();
        }
        jComboBoxArrondissement.setModel(new DefaultComboBoxModel(arrondissementsCombo));
    }

    private void remplirCentreCombobox() {
        nomArrondissementSelected = (String) jComboBoxArrondissement.getSelectedItem();
        etablissements = metier.findAllEtablissementsD1Arrondissement(nomArrondissementSelected);
        //on remplit la combobox des centres
        centresCombo = new String[etablissements.size() + 1];
        centresCombo[0] = "---";
        int i = 1;
        for (Etablissement etablissement : etablissements) {
            centresCombo[i++] = etablissement.getAbreviation();
        }
        jComboBoxNomcentre.setModel(new DefaultComboBoxModel(centresCombo));
    }

}
