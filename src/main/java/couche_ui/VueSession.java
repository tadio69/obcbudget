
package couche_ui;

import couche_jpa.Session;
import couche_metier.IMetier;
import exception.ObcbudgetException;
import java.util.List;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import org.springframework.context.ApplicationContext;
import org.springframework.context.support.ClassPathXmlApplicationContext;


public class VueSession extends javax.swing.JFrame {

    DefaultTableModel model;
    
    public VueSession() {
        initComponents();
        model=(DefaultTableModel) jTable1.getModel();
        doMyInit();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroup1 = new javax.swing.ButtonGroup();
        jLabelTitre = new javax.swing.JLabel();
        jLabelAnnee = new javax.swing.JLabel();
        jTextFieldAnnee = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jButtonCreer = new javax.swing.JButton();
        jButtonSessionsExistantes = new javax.swing.JButton();
        jButtonFermer = new javax.swing.JButton();
        jButtonSupprimer = new javax.swing.JButton();
        jPanelDateNaissance = new javax.swing.JPanel();
        jRadioButtonOui = new javax.swing.JRadioButton();
        jRadioButtonNon = new javax.swing.JRadioButton();
        jButtonAnnuler = new javax.swing.JButton();
        jButtonModifier = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DO_NOTHING_ON_CLOSE);
        setResizable(false);

        jLabelTitre.setFont(new java.awt.Font("Arial", 1, 36)); // NOI18N
        jLabelTitre.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabelTitre.setText("SESSION");

        jLabelAnnee.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        jLabelAnnee.setText("Année :");

        jTextFieldAnnee.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        jTextFieldAnnee.addCaretListener(new javax.swing.event.CaretListener() {
            public void caretUpdate(javax.swing.event.CaretEvent evt) {
                jTextFieldAnneeCaretUpdate(evt);
            }
        });

        jTable1.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Id", "Session", "Clôturée?", "Version"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jTable1.setShowHorizontalLines(true);
        jTable1.setShowVerticalLines(true);
        jTable1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTable1MouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(jTable1);

        jButtonCreer.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        jButtonCreer.setText("Créer");
        jButtonCreer.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonCreerActionPerformed(evt);
            }
        });

        jButtonSessionsExistantes.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        jButtonSessionsExistantes.setText("Sessions existantes");
        jButtonSessionsExistantes.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonSessionsExistantesActionPerformed(evt);
            }
        });

        jButtonFermer.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        jButtonFermer.setText("Fermer");
        jButtonFermer.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonFermerActionPerformed(evt);
            }
        });

        jButtonSupprimer.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        jButtonSupprimer.setText("Supprimer");
        jButtonSupprimer.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonSupprimerActionPerformed(evt);
            }
        });

        jPanelDateNaissance.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Clôturée?", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Arial", 3, 14), new java.awt.Color(0, 0, 225))); // NOI18N

        jRadioButtonOui.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        jRadioButtonOui.setText("Oui");
        jRadioButtonOui.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                jRadioButtonOuiStateChanged(evt);
            }
        });
        jRadioButtonOui.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jRadioButtonOuiActionPerformed(evt);
            }
        });

        jRadioButtonNon.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        jRadioButtonNon.setText("Non");
        jRadioButtonNon.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                jRadioButtonNonStateChanged(evt);
            }
        });
        jRadioButtonNon.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jRadioButtonNonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanelDateNaissanceLayout = new javax.swing.GroupLayout(jPanelDateNaissance);
        jPanelDateNaissance.setLayout(jPanelDateNaissanceLayout);
        jPanelDateNaissanceLayout.setHorizontalGroup(
            jPanelDateNaissanceLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelDateNaissanceLayout.createSequentialGroup()
                .addGap(23, 23, 23)
                .addComponent(jRadioButtonOui)
                .addGap(26, 26, 26)
                .addComponent(jRadioButtonNon)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanelDateNaissanceLayout.setVerticalGroup(
            jPanelDateNaissanceLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanelDateNaissanceLayout.createSequentialGroup()
                .addContainerGap(11, Short.MAX_VALUE)
                .addGroup(jPanelDateNaissanceLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE, false)
                    .addComponent(jRadioButtonOui, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jRadioButtonNon))
                .addContainerGap())
        );

        jButtonAnnuler.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        jButtonAnnuler.setText("Annuler");
        jButtonAnnuler.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonAnnulerActionPerformed(evt);
            }
        });

        jButtonModifier.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        jButtonModifier.setText("Modifier");
        jButtonModifier.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonModifierActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jScrollPane1))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGap(30, 30, 30)
                        .addComponent(jButtonCreer)
                        .addGap(18, 18, 18)
                        .addComponent(jButtonModifier)
                        .addGap(18, 18, 18)
                        .addComponent(jButtonSupprimer)
                        .addGap(18, 18, 18)
                        .addComponent(jButtonAnnuler)
                        .addGap(18, 32, Short.MAX_VALUE)
                        .addComponent(jButtonFermer)
                        .addGap(18, 18, 18)
                        .addComponent(jButtonSessionsExistantes)))
                .addContainerGap())
            .addGroup(layout.createSequentialGroup()
                .addGap(291, 291, 291)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanelDateNaissance, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                        .addComponent(jLabelTitre, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                            .addComponent(jLabelAnnee)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(jTextFieldAnnee, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(30, 30, 30)
                .addComponent(jLabelTitre, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(41, 41, 41)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabelAnnee, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jTextFieldAnnee, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(jPanelDateNaissance, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(21, 21, 21)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jButtonFermer, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jButtonSessionsExistantes, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jButtonAnnuler, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jButtonModifier, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jButtonCreer, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jButtonSupprimer, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(18, 24, Short.MAX_VALUE)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 243, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void jTextFieldAnneeCaretUpdate(javax.swing.event.CaretEvent evt) {//GEN-FIRST:event_jTextFieldAnneeCaretUpdate
       
    }//GEN-LAST:event_jTextFieldAnneeCaretUpdate

    private void jButtonFermerActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonFermerActionPerformed
        dispose();
    }//GEN-LAST:event_jButtonFermerActionPerformed

    private void jButtonSessionsExistantesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonSessionsExistantesActionPerformed
        model.setRowCount(0);//vide la jTable
        sessions=metier.findAllSessions();
        for(Session s:sessions){
            model.insertRow(model.getRowCount(),new Object[]{s.getIdsess(),s.getAnnee(),s.isCloturee(),s.getVersion()});
        }
    }//GEN-LAST:event_jButtonSessionsExistantesActionPerformed

    private void jButtonCreerActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonCreerActionPerformed
        infoSaisies(); 
        validerAnnee();
        if(continuer){     
            int n=sessions.size();//nombre de sessions enregistrées
            lastSession=sessions.get(n-1).getAnnee();
            if(anneeSaisie==(lastSession+1)){
                try{
                    metier.creerSession(new Session(anneeSaisie,valCloturee));
                    JOptionPane.showMessageDialog(this, "Session créée avec succès !"); 
                    model.setRowCount(0);//vide la jTable
                    sessions=metier.findAllSessions();
                    for(Session s:sessions){
                        model.insertRow(model.getRowCount(),new Object[]{s.getIdsess(),s.getAnnee(),s.isCloturee(),s.getVersion()});
                    }
                }catch(ObcbudgetException ex){
                    JOptionPane.showMessageDialog(this, "Impossible de créer la session ["+anneeSaisie+"] \n raison:"+ex.getMessage()); 
                }                        
            }
            else JOptionPane.showMessageDialog(this, " Session incorrecte ! La dernière est:"+lastSession); 
        }
        else JOptionPane.showMessageDialog(this, "Le champ est obligatoire !"); 
    }//GEN-LAST:event_jButtonCreerActionPerformed

    private void jButtonSupprimerActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonSupprimerActionPerformed
        model.setRowCount(0);//vide la jTable
        infoSaisies(); 
        int result = JOptionPane.showConfirmDialog(this,"Voulez-vous vraiment supprimer cette session?", "confirmation de suppression",JOptionPane.YES_NO_OPTION,JOptionPane.QUESTION_MESSAGE);
        if(result == JOptionPane.YES_OPTION){
            validerAnnee();
            if(continuer){
                try{
                    metier.supprimerSession(metier.findSessionById(idSessionCliquee));
                    JOptionPane.showMessageDialog(this, "Session supprimée avec succès !"); 
                    sessions=metier.findAllSessions();
                    for(Session s:sessions){
                        model.insertRow(model.getRowCount(),new Object[]{s.getIdsess(),s.getAnnee(),s.isCloturee(),s.getVersion()});
                    }
                }catch(ObcbudgetException ex){
                    JOptionPane.showMessageDialog(this, "Impossible de supprimer la session ["+anneeSaisie+"] \n raison:"+ex.getMessage()); 
                }                        
            }
            else JOptionPane.showMessageDialog(this, " La session à supprimer est inexistante !");
        }
        /*
        else if (result == JOptionPane.NO_OPTION){
               label.setText("You selected: No");
            }
        */
    }//GEN-LAST:event_jButtonSupprimerActionPerformed

    private void jTable1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTable1MouseClicked
       //remplit les champs
        int ligne=jTable1.getSelectedRow();
        idSessionCliquee=(int) model.getValueAt(ligne,0);
        jTextFieldAnnee.setText(""+model.getValueAt(ligne,1));
        valClotureeBd=(boolean) model.getValueAt(ligne,2);
        if(valClotureeBd){//session clôturée
            jRadioButtonOui.setSelected(true);
        }
        else jRadioButtonNon.setSelected(true);
    }//GEN-LAST:event_jTable1MouseClicked

    private void jRadioButtonOuiStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_jRadioButtonOuiStateChanged
        //jFormattedTextFieldDatenais.setText("");
        //jFormattedTextFieldDatenais.setEnabled(false);
    }//GEN-LAST:event_jRadioButtonOuiStateChanged

    private void jRadioButtonOuiActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jRadioButtonOuiActionPerformed
    }//GEN-LAST:event_jRadioButtonOuiActionPerformed

    private void jRadioButtonNonStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_jRadioButtonNonStateChanged
        //jFormattedTextFieldAnneenais.setText("");
        //jFormattedTextFieldAnneenais.setEnabled(false);
    }//GEN-LAST:event_jRadioButtonNonStateChanged

    private void jRadioButtonNonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jRadioButtonNonActionPerformed
    }//GEN-LAST:event_jRadioButtonNonActionPerformed

    private void jButtonAnnulerActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonAnnulerActionPerformed
        videFrame();
    }//GEN-LAST:event_jButtonAnnulerActionPerformed

    private void jButtonModifierActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonModifierActionPerformed
        model.setRowCount(0);//vide la jTable
        infoSaisies(); 
        int result = JOptionPane.showConfirmDialog(this,"Voulez-vous vraiment modifier cette session?", "confirmation de modification",JOptionPane.YES_NO_OPTION,JOptionPane.QUESTION_MESSAGE);
        if(result == JOptionPane.YES_OPTION){
            validerAnnee();
            if(continuer){
                sessionClicked=metier.findSessionById(idSessionCliquee);
                sessionClicked.setAnnee(anneeSaisie);
                sessionClicked.setCloturee(valCloturee);
                try{
                    metier.modifierSession(sessionClicked);
                    JOptionPane.showMessageDialog(this, "Session modifiée avec succès !"); 
                    sessions=metier.findAllSessions();
                    for(Session s:sessions){
                        model.insertRow(model.getRowCount(),new Object[]{s.getIdsess(),s.getAnnee(),s.isCloturee(),s.getVersion()});
                    }
                }catch(ObcbudgetException ex){
                    JOptionPane.showMessageDialog(this, "Impossible de modifier la session ["+anneeSaisie+"] \n raison:"+ex.getMessage()); 
                }                        
            }
            else JOptionPane.showMessageDialog(this, " La session à modifier est inexistante !");
        }
    }//GEN-LAST:event_jButtonModifierActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(VueSession.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(VueSession.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(VueSession.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(VueSession.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new VueSession().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.JButton jButtonAnnuler;
    private javax.swing.JButton jButtonCreer;
    private javax.swing.JButton jButtonFermer;
    private javax.swing.JButton jButtonModifier;
    private javax.swing.JButton jButtonSessionsExistantes;
    private javax.swing.JButton jButtonSupprimer;
    private javax.swing.JLabel jLabelAnnee;
    private javax.swing.JLabel jLabelTitre;
    private javax.swing.JPanel jPanelDateNaissance;
    private javax.swing.JRadioButton jRadioButtonNon;
    private javax.swing.JRadioButton jRadioButtonOui;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTable1;
    private javax.swing.JTextField jTextFieldAnnee;
    // End of variables declaration//GEN-END:variables

    // variables d'instance
    private IMetier metier=null;
    private String anneeEnString="";
    private int anneeSaisie=0;
    private List<Session> sessions=null;
    private int lastSession=0;
    private int idSessionCliquee=0;
    private Session sessionClicked=null;
    private boolean valCloturee=false;//contient yes si session cloturée et false sinon
    private boolean valClotureeBd=false;//idem mais dans la BD
    private boolean continuer=false;
    
    private void doMyInit(){
        // init contexte
        // instanciation couche [metier]
        ApplicationContext ctx = new ClassPathXmlApplicationContext("spring-config-metier.xml");
        metier = (IMetier) ctx.getBean("metier"); 
        sessions=metier.findAllSessions();
        
        buttonGroup1.add(jRadioButtonOui);
        buttonGroup1.add(jRadioButtonNon);
    }
    
     private void infoSaisies(){
        anneeEnString=jTextFieldAnnee.getText();
        if(jRadioButtonOui.isSelected()){
            valCloturee=true;
        }
        if(jRadioButtonNon.isSelected()){
            valCloturee=false;
        }
    }
    private void videFrame(){
        jTextFieldAnnee.setText("");
        buttonGroup1.clearSelection();
        model.setRowCount(0);//vide la jTable
    }
    
    private void validerAnnee(){
        String chaine=jTextFieldAnnee.getText();
        try {
                anneeSaisie=Integer.parseInt(chaine);
                continuer=true;
            }catch (NumberFormatException e) {
                JOptionPane.showMessageDialog(this, " La session doit être fourni et contenir uniquement des chiffres entiers!");
                continuer=false;
            }
    }
}
