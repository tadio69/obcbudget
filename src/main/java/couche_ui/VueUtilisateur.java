
package couche_ui;

import couche_jpa.Utilisateur;
import couche_metier.IMetier;
import exception.ObcbudgetException;
import java.util.List;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import org.springframework.context.ApplicationContext;
import org.springframework.context.support.ClassPathXmlApplicationContext;

/**
 *
 * @author famille chijou
 */
public class VueUtilisateur extends javax.swing.JFrame {

    DefaultTableModel model;
    
    public VueUtilisateur() {
        initComponents();
        model=(DefaultTableModel) jTable1.getModel();
        doMyInit();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabelTitre = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        jTextField = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        jPasswordFieldMotPass = new javax.swing.JPasswordField();
        jButtonCreer = new javax.swing.JButton();
        jButtonAnnuler = new javax.swing.JButton();
        jLabel4 = new javax.swing.JLabel();
        jButtonFermer = new javax.swing.JButton();
        jButtonRechercher = new javax.swing.JButton();
        jButtonModifier = new javax.swing.JButton();
        jButtonSupprimer = new javax.swing.JButton();
        jPasswordFieldConfirmation = new javax.swing.JPasswordField();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();

        setDefaultCloseOperation(javax.swing.WindowConstants.DO_NOTHING_ON_CLOSE);
        setResizable(false);

        jLabelTitre.setFont(new java.awt.Font("Arial", 1, 36)); // NOI18N
        jLabelTitre.setText("UTILISATEUR");

        jLabel1.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        jLabel1.setText("Login :");

        jTextField.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N

        jLabel2.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        jLabel2.setText("Mot de passe :");

        jPasswordFieldMotPass.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N

        jButtonCreer.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        jButtonCreer.setText("CrÃ©er");
        jButtonCreer.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonCreerActionPerformed(evt);
            }
        });

        jButtonAnnuler.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        jButtonAnnuler.setText("Annuler");
        jButtonAnnuler.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonAnnulerActionPerformed(evt);
            }
        });

        jLabel4.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        jLabel4.setText("Confirmation mot de passe :");

        jButtonFermer.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        jButtonFermer.setText("Fermer");
        jButtonFermer.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonFermerActionPerformed(evt);
            }
        });

        jButtonRechercher.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        jButtonRechercher.setText("Rechercher");
        jButtonRechercher.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonRechercherActionPerformed(evt);
            }
        });

        jButtonModifier.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        jButtonModifier.setText("Modifier");
        jButtonModifier.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonModifierActionPerformed(evt);
            }
        });

        jButtonSupprimer.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        jButtonSupprimer.setText("Supprimer");
        jButtonSupprimer.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonSupprimerActionPerformed(evt);
            }
        });

        jPasswordFieldConfirmation.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N

        jTable1.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Id", "Login", "Mot de passe", "Version"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jTable1.setShowHorizontalLines(true);
        jTable1.setShowVerticalLines(true);
        jTable1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTable1MouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(jTable1);
        if (jTable1.getColumnModel().getColumnCount() > 0) {
            jTable1.getColumnModel().getColumn(3).setResizable(false);
        }

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(44, 44, 44)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                .addGroup(layout.createSequentialGroup()
                                    .addComponent(jLabel4)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addComponent(jPasswordFieldConfirmation, javax.swing.GroupLayout.PREFERRED_SIZE, 322, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGroup(layout.createSequentialGroup()
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                        .addComponent(jLabel2)
                                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 49, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                        .addComponent(jTextField)
                                        .addComponent(jPasswordFieldMotPass, javax.swing.GroupLayout.PREFERRED_SIZE, 322, javax.swing.GroupLayout.PREFERRED_SIZE))))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addComponent(jButtonCreer)
                                .addGap(18, 18, 18)
                                .addComponent(jButtonRechercher)
                                .addGap(18, 18, 18)
                                .addComponent(jButtonModifier)
                                .addGap(18, 18, 18)
                                .addComponent(jButtonSupprimer)
                                .addGap(18, 18, 18)
                                .addComponent(jButtonAnnuler)))
                        .addGap(18, 18, 18)
                        .addComponent(jButtonFermer)
                        .addGap(0, 35, Short.MAX_VALUE))
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.TRAILING))
                .addContainerGap())
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(jLabelTitre)
                .addGap(239, 239, 239))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabelTitre, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(34, 34, 34)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jTextField)
                    .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jPasswordFieldMotPass, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jLabel4, javax.swing.GroupLayout.DEFAULT_SIZE, 39, Short.MAX_VALUE)
                    .addComponent(jPasswordFieldConfirmation))
                .addGap(21, 21, 21)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jButtonModifier, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButtonSupprimer, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addComponent(jButtonFermer, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jButtonAnnuler, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jButtonCreer, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jButtonRechercher, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 214, Short.MAX_VALUE)
                .addContainerGap())
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void jButtonFermerActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonFermerActionPerformed
        dispose();
    }//GEN-LAST:event_jButtonFermerActionPerformed

    private void jButtonCreerActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonCreerActionPerformed
        infoSaisies();           
        if(!pwd.equals("") && !login.equals("")){
            if(pwd.equals(confirmPwd)){
                try{
                    metier.creerUtilisateur(new Utilisateur(login,pwd));
                    JOptionPane.showMessageDialog(this, " Utilisateur crÃ©Ã© avec succÃ¨s !"); 
                    model.setRowCount(0);//vide la jTable
                    // liste des utilisateurs
                    utilisateurs=metier.findAllUtilisateurs(); 
                    for(Utilisateur u:utilisateurs){
                        model.insertRow(model.getRowCount(),new Object[]{u.getIdutil(), u.getLogin(),u.getMotpass(),u.getVersion()}); 
                    }                    
                }catch(ObcbudgetException ex){
                    JOptionPane.showMessageDialog(this, "Impossible de crÃ©er l'utilisateur de login ["+login+"] \n raison:"+ex.getMessage()); 
                } 
            }
            else JOptionPane.showMessageDialog(this, " Les champs mot de passe et confirmation sont diffÃ©rents !");                        
        }
        else JOptionPane.showMessageDialog(this, " Tous les champs sont obligatoires !");
    }//GEN-LAST:event_jButtonCreerActionPerformed

    private void jButtonRechercherActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonRechercherActionPerformed
        model.setRowCount(0);//vide la jTable
        infoSaisies();
        
        if(!pwd.equals("") && !login.equals("")){//pour modifier un user il faut connaÃ®tre son login, son mot de passe et son rÃ´le
            try{
                userRecherche=metier.findUtilisateurByLoginAndPwd(login,pwd); //s'il existe, il est unique                                
                model.insertRow(model.getRowCount(),new Object[]{userRecherche.getIdutil(), userRecherche.getLogin(),userRecherche.getMotpass(),userRecherche.getVersion()}); 
            }catch(ObcbudgetException ex){
                    JOptionPane.showMessageDialog(this, "Impossible de trouver l'utilisateur de login ["+login+"] \n raison:"+ex.getMessage()); 
                } 
        }
        else {
            if(login.equalsIgnoreCase("tous")){
                // liste des utilisateurs
                utilisateurs=metier.findAllUtilisateurs(); 
                for(Utilisateur u:utilisateurs){
                    model.insertRow(model.getRowCount(),new Object[]{u.getIdutil(), u.getLogin(),u.getMotpass(),u.getVersion()}); 
                }
            }
            else JOptionPane.showMessageDialog(this, " Les champs login et mot de passe sont obligatoires !");
        } 
    }//GEN-LAST:event_jButtonRechercherActionPerformed

    private void jButtonModifierActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonModifierActionPerformed
        infoSaisies();  
        model.setRowCount(0);//vide la jTable
        int result = JOptionPane.showConfirmDialog(this,"Voulez-vous vraiment modifier cet utilisateur?", "confirmation de modification",JOptionPane.YES_NO_OPTION,JOptionPane.QUESTION_MESSAGE);
        if(result == JOptionPane.YES_OPTION){
            if(!pwd.equals("") && !login.equals("")){
                if(pwd.equals(confirmPwd)){
                    //l'utilisateur cliquÃ© est forcÃ©ment celui qui a Ã©tÃ© cherchÃ©
                    userRecherche.setLogin(login);
                    userRecherche.setMotpass(pwd);
                    try{
                        metier.modifierUtlisateur(userRecherche);
                        JOptionPane.showMessageDialog(this, " Utilisateur modifiÃ© avec succÃ¨s !"); 
                        //videFrame();
                        // liste des utilisateurs
                         utilisateurs=metier.findAllUtilisateurs(); 
                         for(Utilisateur u:utilisateurs){
                             model.insertRow(model.getRowCount(),new Object[]{u.getIdutil(), u.getLogin(),u.getMotpass(),u.getVersion()}); 
                         }  
                    }catch(ObcbudgetException ex){
                        JOptionPane.showMessageDialog(this, "Impossible de modifier l'utilisateur de login ["+login+"] \n raison:"+ex.getMessage()); 
                    } 
                }
                else JOptionPane.showMessageDialog(this, " Les champs mot de passe et confirmation sont diffÃ©rents !");                        
            }
            else JOptionPane.showMessageDialog(this, " Tous les champs sont obligatoires !"); 
        }
        /*
        else if (result == JOptionPane.NO_OPTION){
               label.setText("You selected: No");
            }
        */     
    }//GEN-LAST:event_jButtonModifierActionPerformed

    private void jButtonAnnulerActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonAnnulerActionPerformed
        videFrame();
    }//GEN-LAST:event_jButtonAnnulerActionPerformed

    private void jButtonSupprimerActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonSupprimerActionPerformed
        model.setRowCount(0);//vide la jTable
        infoSaisies(); 
        int result = JOptionPane.showConfirmDialog(this,"Voulez-vous vraiment supprimer cet utilisateur?", "confirmation de suppression",JOptionPane.YES_NO_OPTION,JOptionPane.QUESTION_MESSAGE);
        if(result == JOptionPane.YES_OPTION){
            if(!pwd.equals("") && !login.equals("")){
                if(pwd.equals(confirmPwd)){
                    //l'utilisateur cliquÃ© est forcÃ©ment celui qui a Ã©tÃ© cherchÃ©
                    try{
                        metier.supprimerUtilisateur(userRecherche);
                        JOptionPane.showMessageDialog(this, " Utilisateur supprimÃ© avec succÃ¨s !"); 
                        //videFrame();
                        // liste des utilisateurs
                        utilisateurs=metier.findAllUtilisateurs(); 
                        for(Utilisateur u:utilisateurs){
                            model.insertRow(model.getRowCount(),new Object[]{u.getIdutil(), u.getLogin(),u.getMotpass(),u.getVersion()}); 
                        }  
                    }catch(ObcbudgetException ex){
                        JOptionPane.showMessageDialog(this, "Impossible de supprimer l'utilisateur de login ["+login+"] \n raison:"+ex.getMessage()); 
                    } 
                }
                else JOptionPane.showMessageDialog(this, " Les champs mot de passe et confirmation sont diffÃ©rents !");                        
            }
            else JOptionPane.showMessageDialog(this, " Tous les champs sont obligatoires !"); 
        }
        /*
        else if (result == JOptionPane.NO_OPTION){
               label.setText("You selected: No");
            }
        */ 
    }//GEN-LAST:event_jButtonSupprimerActionPerformed

    private void jTable1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTable1MouseClicked
        //remplit les champs
        int ligne=jTable1.getSelectedRow();
        jTextField.setText((String) model.getValueAt(ligne,1));
        jPasswordFieldMotPass.setText((String) model.getValueAt(ligne,2));
        jPasswordFieldConfirmation.setText((String) model.getValueAt(ligne,2));
    }//GEN-LAST:event_jTable1MouseClicked

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(VueUtilisateur.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(VueUtilisateur.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(VueUtilisateur.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(VueUtilisateur.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new VueUtilisateur().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButtonAnnuler;
    private javax.swing.JButton jButtonCreer;
    private javax.swing.JButton jButtonFermer;
    private javax.swing.JButton jButtonModifier;
    private javax.swing.JButton jButtonRechercher;
    private javax.swing.JButton jButtonSupprimer;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabelTitre;
    private javax.swing.JPasswordField jPasswordFieldConfirmation;
    private javax.swing.JPasswordField jPasswordFieldMotPass;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTable1;
    private javax.swing.JTextField jTextField;
    // End of variables declaration//GEN-END:variables

    // variables d'instance
    private IMetier metier=null;
    private List<Utilisateur> utilisateurs=null;
    private Utilisateur userRecherche=null;
    private String login="";
    private String pwd="";
    private String confirmPwd="";
     
    
    // initialisations propriÃ©taires
    private void doMyInit(){
        // init contexte
        
            // instanciation couche [metier]
            ApplicationContext ctx = new ClassPathXmlApplicationContext("spring-config-metier.xml");
            metier = (IMetier) ctx.getBean("metier");   
    }
    
    private void infoSaisies(){
        login=jTextField.getText();
        pwd=String.valueOf(jPasswordFieldMotPass.getPassword());
        confirmPwd=String.valueOf(jPasswordFieldConfirmation.getPassword());
    }
    
    private void videFrame(){
        jTextField.setText("");
        jPasswordFieldMotPass.setText("");
        jPasswordFieldConfirmation.setText("");
        model.setRowCount(0);//vide la jTable
    }
}
