package couche_ui;

import couche_jpa.Centredispatching;
import couche_jpa.Famille;
import couche_jpa.Rattachventilation;
import couche_jpa.Rattachventilationspeciale;
import couche_jpa.Region;
import couche_metier.IMetier;
import exception.ObcbudgetException;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;
import javax.swing.DefaultComboBoxModel;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import net.sf.jasperreports.engine.JRDataSource;
import net.sf.jasperreports.engine.JRException;
import net.sf.jasperreports.engine.JasperCompileManager;
import net.sf.jasperreports.engine.JasperFillManager;
import net.sf.jasperreports.engine.JasperPrint;
import net.sf.jasperreports.engine.JasperReport;
import net.sf.jasperreports.engine.data.JRBeanCollectionDataSource;
import net.sf.jasperreports.view.JasperViewer;
import org.springframework.context.ApplicationContext;
import org.springframework.context.support.ClassPathXmlApplicationContext;

public class VueRattachVentilationSpeciale extends javax.swing.JFrame {

    DefaultTableModel model;

    public VueRattachVentilationSpeciale() {
        initComponents();
        model = (DefaultTableModel) jTable1.getModel();
        doMyInit();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jLabel1 = new javax.swing.JLabel();
        jPanel1 = new javax.swing.JPanel();
        jLabelNomCentreTri = new javax.swing.JLabel();
        jComboBoxCentreTri = new javax.swing.JComboBox<>();
        jLabeTypeCentreTri = new javax.swing.JLabel();
        jTextFieldTypeCentreTri = new javax.swing.JTextField();
        jLabelRegionCentreTri = new javax.swing.JLabel();
        jComboBoxRegionCentreTri = new javax.swing.JComboBox<>();
        jLabeFamilleCentreTri = new javax.swing.JLabel();
        jTextFieldFamilleCentreTri = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        jLabelDistance = new javax.swing.JLabel();
        jLabelTexteDroitDistance = new javax.swing.JLabel();
        jTextFieldDistance = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        jLabelRegionCentreVentilation = new javax.swing.JLabel();
        jComboBoxRegionCentreVentilation = new javax.swing.JComboBox<>();
        jLabelNomCentreVentilation = new javax.swing.JLabel();
        jComboBoxCentreVentilation = new javax.swing.JComboBox<>();
        jLabeTypeCentreVentilation = new javax.swing.JLabel();
        jTextFieldTypeCentreVentilation = new javax.swing.JTextField();
        jLabeFamilleCentreVentilation = new javax.swing.JLabel();
        jTextFieldFamilleCentreVentilation = new javax.swing.JTextField();
        jLabelPrixplace = new javax.swing.JLabel();
        jTextFieldPrixplace = new javax.swing.JTextField();
        jLabelTexteFCFA1 = new javax.swing.JLabel();
        jLabelTexteDroiteFCFA = new javax.swing.JLabel();
        jButtonFermer = new javax.swing.JButton();
        jButtonAnnuler = new javax.swing.JButton();
        jButtonSupprimer = new javax.swing.JButton();
        jButtonRechercher = new javax.swing.JButton();
        jButtonCreer = new javax.swing.JButton();
        jPanelEtats = new javax.swing.JPanel();
        jButtonVisualiser = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DO_NOTHING_ON_CLOSE);
        setResizable(false);

        jTable1.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Id", "N° Ordre", "Région centre de tri", "Centre de tri", "Type centre de tri", "Famille centre de tri", "Région centre ventil. spec.", "Centre ventil. spec.", "Type centre ventil. spec.", "Famille centre ventil. spec.", "Distance", "Coût transport"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jTable1.setShowHorizontalLines(true);
        jTable1.setShowVerticalLines(true);
        jTable1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTable1MouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(jTable1);

        jLabel1.setFont(new java.awt.Font("Arial", 1, 36)); // NOI18N
        jLabel1.setText("RATTACHEMENT DES CENTRES");

        jPanel1.setBackground(new java.awt.Color(0, 255, 153));
        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Centre de tri", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Arial", 3, 14), new java.awt.Color(51, 0, 255))); // NOI18N

        jLabelNomCentreTri.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        jLabelNomCentreTri.setText("Nom :");

        jComboBoxCentreTri.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        jComboBoxCentreTri.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBoxCentreTriActionPerformed(evt);
            }
        });

        jLabeTypeCentreTri.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        jLabeTypeCentreTri.setText("Type :");

        jTextFieldTypeCentreTri.setEditable(false);
        jTextFieldTypeCentreTri.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N

        jLabelRegionCentreTri.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        jLabelRegionCentreTri.setText("Région :");

        jComboBoxRegionCentreTri.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        jComboBoxRegionCentreTri.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBoxRegionCentreTriActionPerformed(evt);
            }
        });

        jLabeFamilleCentreTri.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        jLabeFamilleCentreTri.setText("Famille :");

        jTextFieldFamilleCentreTri.setEditable(false);
        jTextFieldFamilleCentreTri.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(12, 12, 12)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(jLabelRegionCentreTri)
                                    .addComponent(jLabelNomCentreTri)))
                            .addComponent(jLabeTypeCentreTri, javax.swing.GroupLayout.Alignment.TRAILING))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jTextFieldTypeCentreTri, javax.swing.GroupLayout.PREFERRED_SIZE, 197, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jComboBoxRegionCentreTri, javax.swing.GroupLayout.PREFERRED_SIZE, 292, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jComboBoxCentreTri, javax.swing.GroupLayout.PREFERRED_SIZE, 408, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabeFamilleCentreTri)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jTextFieldFamilleCentreTri, javax.swing.GroupLayout.PREFERRED_SIZE, 197, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(211, 211, 211)))
                .addContainerGap(12, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(14, 14, 14)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jComboBoxRegionCentreTri)
                    .addComponent(jLabelRegionCentreTri, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabelNomCentreTri, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jComboBoxCentreTri, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabeTypeCentreTri, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jTextFieldTypeCentreTri, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabeFamilleCentreTri, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jTextFieldFamilleCentreTri, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jLabel3.setFont(new java.awt.Font("Arial", 1, 36)); // NOI18N
        jLabel3.setText("DE VENTILATION SPECIALE AU CENTRE DE TRI");

        jPanel2.setBackground(new java.awt.Color(204, 255, 0));
        jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Centre de ventilation spéciale", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Arial", 1, 14), new java.awt.Color(102, 0, 255))); // NOI18N

        jLabelDistance.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        jLabelDistance.setText("Distance :");

        jLabelTexteDroitDistance.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        jLabelTexteDroitDistance.setText("km   ");

        jTextFieldDistance.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N

        jLabel2.setFont(new java.awt.Font("Arial", 3, 14)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(5, 0, 130));
        jLabel2.setText("(En aller et retour du centre de ventilation spéciale au centre  de tri)");

        jLabelRegionCentreVentilation.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        jLabelRegionCentreVentilation.setText("Région :");

        jComboBoxRegionCentreVentilation.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        jComboBoxRegionCentreVentilation.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBoxRegionCentreVentilationActionPerformed(evt);
            }
        });

        jLabelNomCentreVentilation.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        jLabelNomCentreVentilation.setText("Nom :");

        jComboBoxCentreVentilation.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        jComboBoxCentreVentilation.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBoxCentreVentilationActionPerformed(evt);
            }
        });

        jLabeTypeCentreVentilation.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        jLabeTypeCentreVentilation.setText("Type :");

        jTextFieldTypeCentreVentilation.setEditable(false);
        jTextFieldTypeCentreVentilation.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N

        jLabeFamilleCentreVentilation.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        jLabeFamilleCentreVentilation.setText("Famille :");

        jTextFieldFamilleCentreVentilation.setEditable(false);
        jTextFieldFamilleCentreVentilation.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N

        jLabelPrixplace.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        jLabelPrixplace.setText("Coût transport :");

        jTextFieldPrixplace.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N

        jLabelTexteFCFA1.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        jLabelTexteFCFA1.setText("F CFA");

        jLabelTexteDroiteFCFA.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        jLabelTexteDroiteFCFA.setText("(En aller simple)");

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(97, 97, 97)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                .addComponent(jLabelRegionCentreVentilation)
                                .addComponent(jLabelNomCentreVentilation))
                            .addComponent(jLabeTypeCentreVentilation, javax.swing.GroupLayout.Alignment.TRAILING))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jTextFieldTypeCentreVentilation, javax.swing.GroupLayout.PREFERRED_SIZE, 197, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jComboBoxRegionCentreVentilation, javax.swing.GroupLayout.PREFERRED_SIZE, 292, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jComboBoxCentreVentilation, javax.swing.GroupLayout.PREFERRED_SIZE, 408, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(jLabeFamilleCentreVentilation)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jTextFieldFamilleCentreVentilation, javax.swing.GroupLayout.PREFERRED_SIZE, 197, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(211, 211, 211))))
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(44, 44, 44)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabelPrixplace)
                    .addComponent(jLabelDistance))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(jTextFieldDistance, javax.swing.GroupLayout.PREFERRED_SIZE, 52, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabelTexteDroitDistance)
                        .addGap(4, 4, 4)
                        .addComponent(jLabel2))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(jTextFieldPrixplace, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabelTexteFCFA1)
                        .addGap(18, 18, 18)
                        .addComponent(jLabelTexteDroiteFCFA))))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jComboBoxRegionCentreVentilation)
                    .addComponent(jLabelRegionCentreVentilation, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabelNomCentreVentilation, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jComboBoxCentreVentilation, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabeTypeCentreVentilation, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jTextFieldTypeCentreVentilation, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabeFamilleCentreVentilation, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jTextFieldFamilleCentreVentilation, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jTextFieldDistance, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabelDistance, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabelTexteDroitDistance, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2))
                .addGap(18, 18, 18)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jTextFieldPrixplace, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabelPrixplace, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabelTexteDroiteFCFA, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabelTexteFCFA1, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(13, Short.MAX_VALUE))
        );

        jLabelTexteDroitDistance.getAccessibleContext().setAccessibleName("km    (du sous-centre au centre de regroupement ou de ventlation)");

        jButtonFermer.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        jButtonFermer.setText("Fermer");
        jButtonFermer.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonFermerActionPerformed(evt);
            }
        });

        jButtonAnnuler.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        jButtonAnnuler.setText("Annuler");
        jButtonAnnuler.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonAnnulerActionPerformed(evt);
            }
        });

        jButtonSupprimer.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        jButtonSupprimer.setText("Supprimer");
        jButtonSupprimer.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonSupprimerActionPerformed(evt);
            }
        });

        jButtonRechercher.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        jButtonRechercher.setText("Rechercher");
        jButtonRechercher.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonRechercherActionPerformed(evt);
            }
        });

        jButtonCreer.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        jButtonCreer.setText("Créer");
        jButtonCreer.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonCreerActionPerformed(evt);
            }
        });

        jPanelEtats.setBackground(new java.awt.Color(0, 255, 51));
        jPanelEtats.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Visualiser/imprimer les centres de ventilation spéciale", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Arial", 3, 14), new java.awt.Color(0, 0, 204))); // NOI18N

        jButtonVisualiser.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        jButtonVisualiser.setText("Rattachés");
        jButtonVisualiser.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonVisualiserActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanelEtatsLayout = new javax.swing.GroupLayout(jPanelEtats);
        jPanelEtats.setLayout(jPanelEtatsLayout);
        jPanelEtatsLayout.setHorizontalGroup(
            jPanelEtatsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelEtatsLayout.createSequentialGroup()
                .addGap(167, 167, 167)
                .addComponent(jButtonVisualiser)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanelEtatsLayout.setVerticalGroup(
            jPanelEtatsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelEtatsLayout.createSequentialGroup()
                .addGap(23, 23, 23)
                .addComponent(jButtonVisualiser, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(20, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(374, 374, 374)
                        .addComponent(jLabel1))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(133, 133, 133)
                        .addComponent(jLabel3)))
                .addGap(0, 0, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(89, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(jScrollPane1)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jPanelEtats, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(14, 14, 14))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(jButtonCreer)
                        .addGap(18, 18, 18)
                        .addComponent(jButtonRechercher)
                        .addGap(18, 18, 18)
                        .addComponent(jButtonSupprimer)
                        .addGap(18, 18, 18)
                        .addComponent(jButtonAnnuler)
                        .addGap(18, 18, 18)
                        .addComponent(jButtonFermer)
                        .addGap(352, 352, 352))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(16, 16, 16)
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel3)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(10, 10, 10)
                        .addComponent(jPanelEtats, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButtonFermer, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButtonAnnuler, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButtonSupprimer, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButtonRechercher, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButtonCreer, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 11, Short.MAX_VALUE)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 149, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void jButtonFermerActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonFermerActionPerformed
        dispose();
    }//GEN-LAST:event_jButtonFermerActionPerformed

    private void jButtonAnnulerActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonAnnulerActionPerformed
        videFrame();
    }//GEN-LAST:event_jButtonAnnulerActionPerformed

    private void jButtonCreerActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonCreerActionPerformed
        model.setRowCount(0);//vide la jTable
        infoSaisies();
        validerDistance(distanceString);
        validerPrixplace(prixplaceString);
        if (continuerSiDistanceOK && continuerSiPrixplaceOK && distanceSaisie >= 0 && prixplaceSaisie >= 0) {
            if (!nomCentreTriSelected.equals("---") && !nomCentreVentilationSpecialSelected.equals("---")) {
                String[] nomCentreTriList = null;
                String separateur = " ; ";
                nomCentreTriList = nomCentreTriSelected.split(separateur);
                String nomExacteTri = nomCentreTriList[0];
                String typeExateTri = nomCentreTriList[1];
                for (Centredispatching c : centresTri) {
                    if (c.getEtablissement().getAbreviation().equals(nomExacteTri) && c.getType().equals(typeExateTri)) {
                        centreTriSelected = c;
                        break;
                    }
                }

                String[] nomCentreventilationSpecialList = null;
                nomCentreventilationSpecialList = nomCentreVentilationSpecialSelected.split(separateur);
                String nomExacteventilationSpecial = nomCentreventilationSpecialList[0];
                String typeExateventilationSpecial = nomCentreventilationSpecialList[1];

                for (Centredispatching c : centresVentilationSpeciaux) {
                    if (c.getEtablissement().getAbreviation().equals(nomExacteventilationSpecial) && c.getType().equals(typeExateventilationSpecial)) {
                        centreVentilationSpecialSelected = c;
                        break;
                    }
                }
                try {
                    metier.creerRattachventilationspeciale(new Rattachventilationspeciale(centreTriSelected, centreVentilationSpecialSelected, distanceSaisie, prixplaceSaisie));
                    JOptionPane.showMessageDialog(this, "Rattachement effectué avec succès !");
                    int i = 1;
                    rattachventilationspeciaux = metier.findAllRattachventilationspeciauxD1CentreTri(nomExacteTri);
                    for (Rattachventilationspeciale r : rattachventilationspeciaux) {
                        model.insertRow(model.getRowCount(), new Object[]{r.getIdratventspec(), i++, r.getCentretri().getEtablissement().getArrondissement().getDepartement().getRegion().getNomreg(), r.getCentretri().getEtablissement().getAbreviation(), r.getCentretri().getType(), r.getCentretri().getFamille().getTitre(), r.getCentreventilationspeciale().getEtablissement().getArrondissement().getDepartement().getRegion().getNomreg(), r.getCentreventilationspeciale().getEtablissement().getAbreviation(), r.getCentreventilationspeciale().getType(), r.getCentreventilationspeciale().getFamille().getTitre(), r.getDistance(), r.getPrixplace()});
                    }
                } catch (ObcbudgetException ex) {
                    JOptionPane.showMessageDialog(this, "Impossible d'effectuer le rattachement souhaité \n raison:" + ex.getMessage());
                }
            } else {
                JOptionPane.showMessageDialog(this, " Veuillez recommencer svp. Au moins une donnée manquante ou incorrecte !");
            }
        } else {
            JOptionPane.showMessageDialog(this, "La distance et le coût de transport doivent être des entiers positifs !");
        }
    }//GEN-LAST:event_jButtonCreerActionPerformed

    private void jTable1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTable1MouseClicked
        //remplit les champs
        int ligne = jTable1.getSelectedRow();
        idRattachventilationspecialeCliked = (int) model.getValueAt(ligne, 0);
        jComboBoxRegionCentreTri.setSelectedItem((String) model.getValueAt(ligne, 2));
        jComboBoxCentreTri.setSelectedItem((String) model.getValueAt(ligne, 3) + " ; " + (String) model.getValueAt(ligne, 4));
        jTextFieldTypeCentreTri.setText((String) model.getValueAt(ligne, 4));
        jTextFieldFamilleCentreTri.setText((String) model.getValueAt(ligne, 5));
        jComboBoxRegionCentreVentilation.setSelectedItem((String) model.getValueAt(ligne, 6));
        jComboBoxCentreVentilation.setSelectedItem((String) model.getValueAt(ligne, 7) + " ; " + (String) model.getValueAt(ligne, 8));
        jTextFieldTypeCentreVentilation.setText((String) model.getValueAt(ligne, 8));
        jTextFieldFamilleCentreVentilation.setText((String) model.getValueAt(ligne, 9));
        jTextFieldDistance.setText("" + model.getValueAt(ligne, 10));
        jTextFieldPrixplace.setText("" + model.getValueAt(ligne, 11));
    }//GEN-LAST:event_jTable1MouseClicked

    private void jButtonRechercherActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonRechercherActionPerformed
        model.setRowCount(0);//vide la jTable
        infoSaisies();
        if (!nomCentreTriSelected.equals("---")) {
            String[] nomCentreTriList = null;
            String separateur = " ; ";
            nomCentreTriList = nomCentreTriSelected.split(separateur);
            String nomExacteTri = nomCentreTriList[0];
            String typeExateTri = nomCentreTriList[1];
            try {
                int i = 1;
                rattachventilationspeciaux = metier.findAllRattachventilationspeciauxD1CentreTri(nomExacteTri);
                for (Rattachventilationspeciale r : rattachventilationspeciaux) {
                    model.insertRow(model.getRowCount(), new Object[]{r.getIdratventspec(), i++, r.getCentretri().getEtablissement().getArrondissement().getDepartement().getRegion().getNomreg(), r.getCentretri().getEtablissement().getAbreviation(), r.getCentretri().getType(), r.getCentretri().getFamille().getTitre(), r.getCentreventilationspeciale().getEtablissement().getArrondissement().getDepartement().getRegion().getNomreg(), r.getCentreventilationspeciale().getEtablissement().getAbreviation(), r.getCentreventilationspeciale().getType(), r.getCentreventilationspeciale().getFamille().getTitre(), r.getDistance(), r.getPrixplace()});
                }
            } catch (ObcbudgetException ex) {
                JOptionPane.showMessageDialog(this, "Impossible de trouver les rattachements du centre de ventilation  [" + nomCentreTriSelected + "] \n raison:" + ex.getMessage());
            }
        } else {
            JOptionPane.showMessageDialog(this, "Le nom du centre de tri doit être fourni");
        }
    }//GEN-LAST:event_jButtonRechercherActionPerformed

    private void jButtonSupprimerActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonSupprimerActionPerformed
        model.setRowCount(0);//vide la jTable
        infoSaisies();
        int result = JOptionPane.showConfirmDialog(this, "Voulez-vous vraiment supprimer ce rattachement?", "confirmation de suppression", JOptionPane.YES_NO_OPTION, JOptionPane.QUESTION_MESSAGE);
        if (result == JOptionPane.YES_OPTION) {
            if (!nomCentreTriSelected.equals("---") && !nomCentreVentilationSpecialSelected.equals("---")) {
                String[] nomCentreTriList = null;
                String separateur = " ; ";
                nomCentreTriList = nomCentreTriSelected.split(separateur);
                String nomExacteTri = nomCentreTriList[0];
                String typeExateTri = nomCentreTriList[1];
                try {
                    metier.supprimerRattachventilationspeciale(metier.findRattachventilationspecialeById(idRattachventilationspecialeCliked));
                    JOptionPane.showMessageDialog(this, "Rattachement supprimé avec succès !");
                    int i = 1;
                    rattachventilationspeciaux = metier.findAllRattachventilationspeciauxD1CentreTri(nomExacteTri);
                    for (Rattachventilationspeciale r : rattachventilationspeciaux) {
                        model.insertRow(model.getRowCount(), new Object[]{r.getIdratventspec(), i++, r.getCentretri().getEtablissement().getArrondissement().getDepartement().getRegion().getNomreg(), r.getCentretri().getEtablissement().getAbreviation(), r.getCentretri().getType(), r.getCentretri().getFamille().getTitre(), r.getCentreventilationspeciale().getEtablissement().getArrondissement().getDepartement().getRegion().getNomreg(), r.getCentreventilationspeciale().getEtablissement().getAbreviation(), r.getCentreventilationspeciale().getType(), r.getCentreventilationspeciale().getFamille().getTitre(), r.getDistance(), r.getPrixplace()});
                    }
                } catch (ObcbudgetException ex) {
                    JOptionPane.showMessageDialog(this, "Impossible de supprimer le rattachement du centre de ventilation spécial [" + nomCentreVentilationSpecialSelected + "] \n raison:" + ex.getMessage());
                }
            } else {
                JOptionPane.showMessageDialog(this, "Le centre de tri et de ventilation spéciale sont obligatoires !");
            }
        }
    }//GEN-LAST:event_jButtonSupprimerActionPerformed

    private void jComboBoxCentreTriActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBoxCentreTriActionPerformed
        String[] nomCentreTriList = null;
        nomCentreTriSelected = (String) jComboBoxCentreTri.getSelectedItem();
        if (!nomCentreTriSelected.equals("---")) {
            String separateur = " ; ";
            nomCentreTriList = nomCentreTriSelected.split(separateur);
            String nomExacteTri = nomCentreTriList[0];
            String typeExateTri = nomCentreTriList[1];
            for (Centredispatching centretri : centresTri) {
                if (centretri.getEtablissement().getAbreviation().equals(nomExacteTri) && centretri.getType().equals(typeExateTri)) {
                    jTextFieldTypeCentreTri.setText(centretri.getType());
                    jTextFieldFamilleCentreTri.setText(centretri.getFamille().getTitre());
                    break;
                }
            }
        }
    }//GEN-LAST:event_jComboBoxCentreTriActionPerformed

    private void jComboBoxRegionCentreTriActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBoxRegionCentreTriActionPerformed
        remplirCentreTriCombobox();
    }//GEN-LAST:event_jComboBoxRegionCentreTriActionPerformed

    private void jButtonVisualiserActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonVisualiserActionPerformed
        Map<Centredispatching, ArrayList<Centredispatching>> centreTriCentresVentilationSpeciauxMap = new HashMap<>();//contient les centres de tri chacun avec le tableau de ses centres de ventilation spéciaux
        centresTri = metier.findAllCentredispatchingD1Type("Tri");
        for (Centredispatching centretri : centresTri) {
            System.out.println("-------------------------------------------------------------------------------------------------------------------");
            System.out.println("Un centre de tri=" + centretri.getEtablissement().getAbreviation());
            List<Rattachventilationspeciale> lesRattachrventilationspeciales = metier.findAllRattachventilationspeciauxD1CentreTri(centretri.getEtablissement().getAbreviation());
            ArrayList<Centredispatching> centresVentilationspecialeList = new ArrayList<>();//liste des centres de ventilation spéciale du centre de tri courant
            for (Rattachventilationspeciale rattachventilspec : lesRattachrventilationspeciales) {
                if (!centresVentilationspecialeList.contains(rattachventilspec.getCentretri())) {
                    centresVentilationspecialeList.add(rattachventilspec.getCentretri());
                    System.out.println("-------------------------------------------------------------------------------------------------------------------");
                    System.out.println("Un centre de ventilation spéciale rattaché=" + rattachventilspec.getCentreventilationspeciale().getEtablissement().getAbreviation());
                }
            }
            centreTriCentresVentilationSpeciauxMap.put(centretri, centresVentilationspecialeList);
        }
        if (!centreTriCentresVentilationSpeciauxMap.isEmpty()) {
            try {
                List<Map<String, Object>> datasource = new ArrayList<>();
                List<Region> regions = metier.findAllRegions();
                for (Region region : regions) {
                    for (Centredispatching centretri : centreTriCentresVentilationSpeciauxMap.keySet()) {
                        int num = 1;
                        if (centretri.getEtablissement().getArrondissement().getDepartement().getRegion().getNomreg().equals(region.getNomreg())) {
                            for (Centredispatching centreventilspec : centreTriCentresVentilationSpeciauxMap.get(centretri)) {
                                Map<String, Object> row = new HashMap<>();
                                row.put("region", region.getNomreg());
                                row.put("centretri", centretri.getEtablissement().getAbreviation() + " (Famille :" + centreventilspec.getFamille().getTitre() + "; Type :" + centreventilspec.getType() + ")");
                                row.put("num", num++);
                                row.put("centreventilationspeciale", centreventilspec.getEtablissement().getAbreviation());
                                Rattachventilationspeciale rattachventilationspeciale = metier.findRattachventilationspecialeD1Centreventilationspeciale(centreventilspec.getEtablissement().getAbreviation());//il n'en existe pas d'un autre type
                                row.put("distance", rattachventilationspeciale.getDistance());
                                row.put("prixplace", rattachventilationspeciale.getPrixplace());
                                datasource.add(row);
                            }
                        }
                    }
                }
                JRDataSource jRDataSource = new JRBeanCollectionDataSource(datasource);
                JasperReport jasperReport = JasperCompileManager.compileReport("src\\main\\java\\reports\\rattachCentreventilationAuCentreventilationSpecialReport.jrxml");
                JasperPrint jasperPrint = JasperFillManager.fillReport(jasperReport, null, jRDataSource);
                JasperViewer jasperViewer = new JasperViewer(jasperPrint, false);//false empêche jasperviewer de fermer l'appli lorsqu'on le ferme
                jasperViewer.setVisible(true);
            } catch (JRException e) {
                JOptionPane.showMessageDialog(this, e.getMessage());
            }
        } else {
            JOptionPane.showMessageDialog(this, "Aucun rattachement trouvé dans la base des données !");
        }
    }//GEN-LAST:event_jButtonVisualiserActionPerformed

    private void jComboBoxRegionCentreVentilationActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBoxRegionCentreVentilationActionPerformed
        remplirCentreVentilationSpecialCombobox();
    }//GEN-LAST:event_jComboBoxRegionCentreVentilationActionPerformed

    private void jComboBoxCentreVentilationActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBoxCentreVentilationActionPerformed
        String[] nomcCntreventilationList = null;
        nomCentreVentilationSpecialSelected = (String) jComboBoxCentreVentilation.getSelectedItem();
        if (!nomCentreVentilationSpecialSelected.equals("---")) {
            String separateur = " ; ";
            nomcCntreventilationList = nomCentreVentilationSpecialSelected.split(separateur);
            String nomExacteventilation = nomcCntreventilationList[0];
            String typeExateventilation = nomcCntreventilationList[1];
            for (Centredispatching centreventil : centresVentilationSpeciaux) {
                if (centreventil.getEtablissement().getAbreviation().equals(nomExacteventilation) && centreventil.getType().equals(typeExateventilation)) {
                    jTextFieldTypeCentreVentilation.setText(centreventil.getType());
                    jTextFieldFamilleCentreVentilation.setText(centreventil.getFamille().getTitre());
                    break;
                }
            }
        }
    }//GEN-LAST:event_jComboBoxCentreVentilationActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;

                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(VueRattachVentilationSpeciale.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);

        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(VueRattachVentilationSpeciale.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);

        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(VueRattachVentilationSpeciale.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);

        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(VueRattachVentilationSpeciale.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new VueRattachVentilationSpeciale().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButtonAnnuler;
    private javax.swing.JButton jButtonCreer;
    private javax.swing.JButton jButtonFermer;
    private javax.swing.JButton jButtonRechercher;
    private javax.swing.JButton jButtonSupprimer;
    private javax.swing.JButton jButtonVisualiser;
    private javax.swing.JComboBox<String> jComboBoxCentreTri;
    private javax.swing.JComboBox<String> jComboBoxCentreVentilation;
    private javax.swing.JComboBox<String> jComboBoxRegionCentreTri;
    private javax.swing.JComboBox<String> jComboBoxRegionCentreVentilation;
    private javax.swing.JLabel jLabeFamilleCentreTri;
    private javax.swing.JLabel jLabeFamilleCentreVentilation;
    private javax.swing.JLabel jLabeTypeCentreTri;
    private javax.swing.JLabel jLabeTypeCentreVentilation;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabelDistance;
    private javax.swing.JLabel jLabelNomCentreTri;
    private javax.swing.JLabel jLabelNomCentreVentilation;
    private javax.swing.JLabel jLabelPrixplace;
    private javax.swing.JLabel jLabelRegionCentreTri;
    private javax.swing.JLabel jLabelRegionCentreVentilation;
    private javax.swing.JLabel jLabelTexteDroitDistance;
    private javax.swing.JLabel jLabelTexteDroiteFCFA;
    private javax.swing.JLabel jLabelTexteFCFA1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanelEtats;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTable1;
    private javax.swing.JTextField jTextFieldDistance;
    private javax.swing.JTextField jTextFieldFamilleCentreTri;
    private javax.swing.JTextField jTextFieldFamilleCentreVentilation;
    private javax.swing.JTextField jTextFieldPrixplace;
    private javax.swing.JTextField jTextFieldTypeCentreTri;
    private javax.swing.JTextField jTextFieldTypeCentreVentilation;
    // End of variables declaration//GEN-END:variables

    // variables d'instance
    private IMetier metier = null;
    private List<Region> regions = null;
    private String[] regionsCombo = null;
    private List<Centredispatching> centresTri = null;
    private List<Centredispatching> centresVentilationSpeciaux = null;
    private String nomRegionSelected = "";
    private String nomRegionCentreTriSelected = "";
    private String nomRegionVentilationSpecialSelected = "";
    private String nomCentreTriSelected = "";
    private String nomCentreVentilationSpecialSelected = "";
    private Centredispatching centreTriSelected = null;
    private Centredispatching centreVentilationSpecialSelected = null;
    private String[] centresTriCombo = null;
    private String[] centresVentilationSpeciauxCombo = null;
    private int idRattachventilationspecialeCliked = 0;
    private List<Rattachventilationspeciale> rattachventilationspeciaux = null;
    private int distanceSaisie = 0;
    private String distanceString = "";
    private int prixplaceSaisie = 0;
    private String prixplaceString = "";
    private boolean continuerSiDistanceOK = false;
    private boolean continuerSiPrixplaceOK = false;
    private List<Famille> familles = null;
    //private String[] famillesCombo = null;
    //private String titreFamilleSelected = "";

    private void doMyInit() {
        // init contexte
        // instanciation couche [metier]
        ApplicationContext ctx = new ClassPathXmlApplicationContext("spring-config-metier.xml");
        metier = (IMetier) ctx.getBean("metier");
        regions = metier.findAllRegions();

        jTextFieldDistance.setText("0");
        jTextFieldPrixplace.setText("0");

        //on remplit les combobox des régions
        regionsCombo = new String[regions.size() + 1];
        regionsCombo[0] = "---";
        int j = 1;
        for (Region region : regions) {
            regionsCombo[j++] = region.getNomreg();
        }
        jComboBoxRegionCentreVentilation.setModel(new DefaultComboBoxModel(regionsCombo));
        jComboBoxRegionCentreTri.setModel(new DefaultComboBoxModel(regionsCombo));

        remplirCentreTriCombobox();
        remplirCentreVentilationSpecialCombobox();
    }

    private void infoSaisies() {
        nomRegionCentreTriSelected = (String) jComboBoxRegionCentreTri.getSelectedItem();
        nomRegionVentilationSpecialSelected = (String) jComboBoxRegionCentreVentilation.getSelectedItem();
        nomCentreTriSelected = (String) jComboBoxCentreTri.getSelectedItem();
        nomCentreVentilationSpecialSelected = (String) jComboBoxCentreVentilation.getSelectedItem();
        distanceString = jTextFieldDistance.getText();
        prixplaceString = jTextFieldPrixplace.getText();
    }

    private void videFrame() {
        jComboBoxRegionCentreTri.setSelectedIndex(0);
        jComboBoxRegionCentreVentilation.setSelectedIndex(0);
        jComboBoxCentreTri.setSelectedIndex(0);
        jComboBoxCentreVentilation.setSelectedIndex(0);
        jTextFieldTypeCentreTri.setText("");
        jTextFieldFamilleCentreTri.setText("");
        jTextFieldTypeCentreVentilation.setText("");
        jTextFieldFamilleCentreVentilation.setText("");
        jTextFieldDistance.setText("0");
        jTextFieldPrixplace.setText("0");
        model.setRowCount(0);//vide la jTable
    }

    private void remplirCentreVentilationSpecialCombobox() {
        nomRegionVentilationSpecialSelected = (String) jComboBoxRegionCentreVentilation.getSelectedItem();
        centresVentilationSpeciaux = metier.findAllCentresdispatchingD1TypeD1Region("Ventilation spéciale", nomRegionVentilationSpecialSelected);
        //on remplit la combobox des Centres de ventilation speciaux
        centresVentilationSpeciauxCombo = new String[centresVentilationSpeciaux.size() + 1];
        centresVentilationSpeciauxCombo[0] = "---";
        int i = 1;
        for (Centredispatching centreVentilationSpecial : centresVentilationSpeciaux) {
            centresVentilationSpeciauxCombo[i++] = centreVentilationSpecial.getEtablissement().getAbreviation() + " ; " + centreVentilationSpecial.getType();
        }
        jComboBoxCentreVentilation.setModel(new DefaultComboBoxModel(centresVentilationSpeciauxCombo));
    }

    private void remplirCentreTriCombobox() {
        nomRegionCentreTriSelected = (String) jComboBoxRegionCentreTri.getSelectedItem();
        centresTri = metier.findAllCentresdispatchingD1TypeD1Region("Tri", nomRegionCentreTriSelected);
        //on remplit la combobox des Centres de tri
        centresTriCombo = new String[centresTri.size() + 1];
        centresTriCombo[0] = "---";
        int i = 1;
        for (Centredispatching centretri : centresTri) {
            centresTriCombo[i++] = centretri.getEtablissement().getAbreviation() + " ; " + centretri.getType();
        }
        jComboBoxCentreTri.setModel(new DefaultComboBoxModel(centresTriCombo));
    }

    private void validerDistance(String nbreString) {
        try {
            distanceSaisie = Integer.parseInt(nbreString);
            continuerSiDistanceOK = true;
        } catch (NumberFormatException e) {
            JOptionPane.showMessageDialog(this, "La distance doit être fournie et contenir uniquement des chiffres !");
            continuerSiDistanceOK = false;
        }
    }

    private void validerPrixplace(String nbreString) {
        try {
            prixplaceSaisie = Integer.parseInt(nbreString);
            continuerSiPrixplaceOK = true;
        } catch (NumberFormatException e) {
            JOptionPane.showMessageDialog(this, "Le coût de transport doit être fournie et contenir uniquement des chiffres !");
            continuerSiPrixplaceOK = false;
        }
    }
}
